{"version":3,"sources":["common/enums.ts","assets/coins/BAT.svg","assets/coins/COMP.svg","assets/coins/DAI.svg","assets/coins/ETH.svg","assets/coins/UNI.svg","assets/coins/ZRX.svg","assets/coins/USDC.svg","assets/coins/USDT.svg","assets/coins/WBTC.svg","assets/coins/AAVE.svg","assets/coins/MKR.svg","assets/coins/SUSHI.svg","assets/coins/TUSD.svg","assets/coins/YFI.svg","assets/coins/LINK.svg","common/constants.ts","common/utils.ts","data/store.tsx","data/apollo.ts","data/requests/protocolSummaryData.ts","data/requests/protocolHistoricalData.ts","data/requests/marketSummaryData.ts","data/requests/marketHistoricalData.ts","data/requests/transactionData.ts","data/requests/userDominanceData.ts","data/hooks.ts","theme/index.tsx","components/Row/index.tsx","components/Column/index.js","components/ProgressRing/index.tsx","components/TooltipText/index.js","components/Link/index.tsx","components/Skeleton/index.tsx","components/Card/index.tsx","components/Logo/index.tsx","components/Button/optionButton.tsx","assets/closeIcon.svg","components/Button/tokenButton.tsx","components/Button/sortButton.js","components/Button/toggleButton.tsx","components/Button/index.js","assets/compound.gif","components/Loader/index.tsx","components/Chart/MultilineChart.tsx","components/Chart/TimeSeriesChart.tsx","assets/leftArrow.svg","assets/rightArrow.svg","components/Button/horizontalScrollButton.tsx","components/Chart/TokenSelectorTimeSeriesChart.tsx","components/shared/index.js","common/hooks/useClickOutside.ts","assets/chevronDown.svg","components/Button/dropdownButton.tsx","components/TransactionTable/index.tsx","components/UserDominance/index.tsx","pages/Market.tsx","components/analytics/GoogleAnalyticsReporter.js","assets/questionIcon.svg","components/Button/iconButton.tsx","components/Header/index.tsx","components/Footer/index.js","assets/compoundLogo.svg","components/TokenTable/index.tsx","pages/Overview.tsx","App.tsx","index.tsx"],"names":["Token","TimeSelector","DataResolution","ProtocolDataSelector","MarketDataSelector","DataType","Unit","TransactionType","EtherscanLinkType","Length","DateFormat","UserType","TOKEN_INFO","BAT","symbol","imgSrc","batSvg","desc","whitepaper","website","twitter","coinGecko","COMP","compSvg","DAI","daiSvg","ETH","ethSvg","UNI","uniSvg","ZRX","zrxSvg","USDC","usdcSvg","USDT","usdtSvg","WBTC","wbtcSvg","WBTCL","AAVE","aaveSvg","MKR","mkrSvg","SUSHI","sushiSvg","TUSD","tusdSvg","YFI","yfiSvg","LINK","linkSvg","TIME_SELECTOR_INFO","ONE_DAY","name","days","resolution","HOUR","ONE_WEEK","ONE_MONTH","DAY","THREE_MONTHS","ONE_YEAR","WEEK","ALL","undefined","PROTOCOL_DATA_SELECTOR_INFO","TOTAL_SUPPLY_USD","key","description","unit","USD","TOTAL_BORROW_USD","TOTAL_RESERVES_USD","UTILIZATION","PERCENT","MARKET_DATA_SELECTOR_INFO","SUPPLY_APY","BORROW_APY","TOTAL_SUPPLY_APY","TOTAL_BORROW_APY","TOTAL_SUPPLY","UNITLESS","TOTAL_BORROW","TOTAL_RESERVES","USDC_PER_UNDERLYING","USDC_PER_ETH","URLS","process","NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE","formatDate","dateInUnixSec","dateFormat","date","Date","monthIndex","getMonth","day","getDate","year","getFullYear","toString","month","formattedDate","DD_YY","slice","MMM_DD_YY","MMM_DD_TIME","toLocaleTimeString","hour","minute","SINCE_NOW","deltaSec","Math","round","now","deltaMin","deltaHour","deltaDay","base","deltaMonth","deltaYear","formatNumber","num","decimals","K","M","B","T","defaultDecimals","postFix","unitPostfix","formattedNum","parseFloat","isNaN","toFixed","getEtherscanLink","address","linkType","shortAddress","length","len","keepLen","SHORT","MEDIUM","LONG","max","saturate","val","min","getTokenForUnderlyingSymbol","underlyingSymbol","GlobalStoreContext","createContext","GlobalStoreProvider","props","useState","store","setStore","updateStore","useCallback","data","prevStore","Provider","value","useGlobalStore","useContext","compoundInfoSubgraphClient","ApolloClient","uri","cache","InMemoryCache","protocolSummaryQuery","gql","requestProtocolSummaryData","a","console","log","query","variables","id","loading","protocol","PAGE_LENGTH","protocolHistoricalDataQuery","performPagenationRequest","dateGreaterThan","outputData","allFound","skip","pageLength","historicalData","i","entry","Number","totalSupplyUsd","totalBorrowUsd","totalReservesUsd","utilization","push","requestProtocolHistoricalData","weekData","marketSummaryQuery","requestMarketSummaryData","markets","marketHistoricalWeekQuery","marketHistoricalDayQuery","marketHistoricalHourQuery","nowSec","parseInt","supplyApyLatestEntry","borrowApyLatestEntry","totalSupplyApyLatestEntry","totalBorrowApyLatestEntry","totalSupplyLatestEntry","totalSupplyUsdLatestEntry","totalBorrowLatestEntry","totalBorrowUsdLatestEntry","totalReservesLatestEntry","totalReservesUsdLatestEntry","utilizationLatestEntry","usdcPerUnderlyingLatestEntry","supplyApyEntry","borrowApyEntry","totalSupplyApyEntry","totalBorrowApyEntry","totalSupplyEntry","totalSupplyUsdEntry","totalBorrowEntry","totalBorrowUsdEntry","totalReservesEntry","totalReservesUsdEntry","utilizationEntry","usdcPerUnderlyingEntry","currentDate","supplyApy","borrowApy","totalSupplyApy","totalBorrowApy","totalSupply","totalBorrow","totalReserves","usdcPerUnderlying","tokenSymbol","market","finalEntry","requestMarketHistoricalData","dayDataGreateThanDate","hourDataGreaterThanDate","dayData","hourData","shift","mintsQuery","redeemsQuery","borrowsQuery","repayBorrowsQuery","liquidationsQuery","transactionType","transactionData","userMarket","type","token","hash","tokenAmount","underlyingAmount","account","user","time","requestTransactionData","dateGraterThan","TRANSACTIONS_WITHIN_DAYS","MINT","mints","REDEEM","redeems","BORROW","borrows","REPAY_BORROW","repayBorrows","LIQUIDATION","liquidations","sort","b","userDominanceSingleMarketQuery","SUPPLIER","BORROWER","numTop","marketSymbol","topSupplierUserMarkets","topBorrowerUserMarkets","percentDominance","requestUserDominanceData","userDominanceData","protocolSummaryDataKey","protocolHistoricalDataKey","marketSummaryDataKey","marketHistoricalDataKey","transactionDataKey","useProtocolSummaryData","useEffect","checkForData","useMarketSummaryData","underlyingToken","allSummaryData","filter","useHistoricalData","dataType","timeSelector","dataSelector","protocolHistoricalData","protocolSummaryData","lastEntey","queriedData","map","useProtocolHistoricalData","marketHistoricalData","filterSecs","cutoffSecs","useMarketHistoricalData","PROTOCOL","mediaQuerySizes","extraSmall","small","large","mediaQueries","Object","keys","reduce","accumulator","size","c","css","theme","darkMode","color","white","black","bg0","bg1","bg2","bg3","bg4","bg5","text1","text2","text3","primary1","secondary1","border1","border2","linkInternal","linkExternal","warning1","warning2","lineChartColors","border","thickness","radius","xs","sm","md","lg","mediaWidth","spacing","none","xxs","xl","xxl","shadow","card","StyledText","styled","div","fontSize","fontWeight","lineHeight","useDefaultLineHeight","Typography","Theme","children","GlobalStyle","createGlobalStyle","Row","width","height","justify","align","padding","borderRadius","margin","gap","flex","overflow","ScrollRow","ResponsiveRow","reverse","gapSmall","ResponsiveJustifyRow","justifyLarge","justifySmall","justifyExtraSmall","Column","SvgContainer","svg","BackCircle","circle","r","strokeWidth","circumference","ProgressCircle","ProgressRing","PI","Tooltip","show","TooltipContainer","ReferenceElement","active","TooltipText","baseText","tooltipContent","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","placement","strategy","modifiers","options","offset","styles","attributes","update","setShow","open","close","ref","onClick","onMouseEnter","onMouseLeave","style","popper","StyledInternalLink","Link","StyledExternalLinkWrapper","variant","StyledExternalLink","href","target","StyledExternalInfoLinkWrapper","StyledExternalInfoLink","content","shimmer","keyframes","SkeletonWrapper","$variant","SkeletonInner","Skeleton","count","skeletons","useTheme","useMemo","numSkeletons","Card","column","backgroundColor","StyledStatCard","CardHeader","StatCard","title","formattedValue","CoinInfoCard","coingecko","ProgressCard","progressValue","Logo","img","marginRight","TokenLogo","src","StyledOptionButton","button","OptionButtonText","OptionButtonVariantBackdrop","OptionButton","buttonContent","StyledTokenButton","selectedColor","SelectedIndicator","hidden","CoinInfo","CloseIndicator","HoverText","span","TokenButton","selected","allowDeselect","clickCallback","coinName","to","closeIcon","StyledSortButton","SortButton","isActive","isAsc","handleClick","StyledToggleButton","Track","Knob","ToggleButton","Button","pulse","Loader","compoundGif","activeDotConfig","StyledTooltip","toolTipWidth","translationX","StyledCustomXTick","StyledCustomYTick","StyledAvgLabel","NoDataWrapper","CustomTooltip","showTime","showValue","valueUnit","dateKey","onHover","coordinate","viewBox","payload","hoverData","hoverDate","lastHoverData","useRef","current","rightX","x","maxX","left","CustomXTick","y","yAxisShown","index","visibleTicksCount","xPosition","CustomYTick","AvgLabel","avg","MultilineChart","chartConfig","lineInfoList","setAvg","dataLoadTimeout","setDataLoadTimeout","dataLoaded","setTimeout","showAvg","acc","obj","nextVal","getAvg","cursorConfig","stroke","strokeDasharray","randomId","floor","random","lines","lineInfo","Area","dataKey","connectNulls","dot","activeDot","isAnimationActive","animate","animationDuration","fill","showAreaGradient","maxDate","dataKeys","keysInData","j","includes","minDate","minDateIndex","findMinDate","xAxisTicks","numberOfTicks","startIndex","ticks","Array","getXTicks","numberOfXAxisTicks","chartHeight","window","innerWidth","baseChartHeightPx","info","toolTipOffset","showValueInTooltip","ResponsiveContainer","AreaChart","top","right","bottom","showXTick","CartesianGrid","vertical","showVerticalGrid","horizontal","showHorizontalGrid","x1","y1","x2","y2","stopColor","stopOpacity","XAxis","tick","showYTick","axisLine","showXAxis","tickLine","interval","domain","allowDataOverflow","YAxis","datekey","orientation","showYAxis","cursor","position","ReferenceLine","label","StyledChartContainer","TimeSelectorRow","DataSelectorRow","TimeSeriesChart","dataSelectorOptions","timeSelectorOptions","hoverDataCallback","setTimeSelector","setDataSelector","dataSelectorIndex","setDataSelectorIndex","selectedData","dataSelectorInfo","callbackData","JSON","parse","stringify","dataSelectorButtons","selector","timeSelectorButtons","handleHover","currentValue","dataSelectorDescription","dataSelectorUnit","HorizontalScrollButtonWrapper","BackgroupWrapper","isRight","HorizontalScrollButton","rightArrowSvg","leftArrowSvg","CoinRowWrapper","CoinRow","scroll","showLeftArrow","setShowLeftArrow","showRightArrow","setShowRightArrow","maxScrollLeft","scrollWidth","clientWidth","showArrows","onScroll","currentPos","scrollLeft","scrollBy","behavior","TokenSelectorTimeSeriesChart","mainToken","mainColor","buttonStates","isMain","selectedPosition","defaultButtonStates","setButtonStates","colorStack","setColorStack","prevState","nextState","handleHoverData","tokenButtons","copiedButtonStates","orderedButtonStateList","numSelected","buttons","buttonState","nextPosition","newColorStack","newButtonStates","maxTokensSelected","numberSelected","currentPosition","tempToken","pop","handleTokenButtonClick","list","MARKET","Break","HideSmall","useClickOutside","node","handler","handlerRef","handleClickOutside","e","contains","document","addEventListener","removeEventListener","DropdownButtonWrapper","Base","DropdownItem","Overlay","ChevronArrow","DropdownButton","selectionList","setSelectionCallback","overlayIsOpen","setOverlayIsOpen","setPosition","items","event","offsetLeft","offsetTop","offsetHeight","handleToggle","chevronDownIcon","RowEntry","ResponsiveHideRow","ButtonBackground","TransactionTableEntry","transaction","addressLink","WALLET","transactionLink","TRANSACTION","TransactionTable","page","setPage","filterType","setFilterType","correctToken","correctTransactionType","useTransactionData","loadingTransactions","transactionCount","maxPage","endIndex","pageTransactions","tableEntries","toLowerCase","dropdownSelections","selection","values","RowNumberBackground","UserDominaceRowEntry","accountLink","UserDominace","setSelection","marketSummaryData","marketTotalSupply","marketTotalBorrow","isArray","useUserDominanceData","selectionButtons","rows","topTenDominance","sum","StatRow","Market","match","includeComp","setIncludeComp","showInUsd","setShowInUsd","params","scrollTo","summaryData","loadingSummaryData","tokenInfo","cTokenAddress","etherscanLink","TOKEN","extraSmallScreen","singleColumn","tokenSelectorChartConfig","apyChartDataSelectors","supplyBorrowReservesChartDataSelectors","reserveFactor","collateralFactor","borrowCap","availableLiquidityUsd","GoogleAnalyticsReporter","location","pathname","search","ReactGA","pageview","IconButtonWrapper","StyledIconButton","IconButton","questionIcon","StyledHeader","DataErrorBanner","warning","Header","dataError","lastSyncedDate","StyledFooter","Footer","StyledTableRow","StyledTableHeader","LinkWrapper","TableRow","marketData","columnInfoList","rowData","columnInfo","TokenTable","dataSelectors","sortKey","setSortKey","setIsAsc","sortedData","asc","sortData","infoList","sortButtons","TableCard","Overview","protocolSummaryDataLoading","tokenTableDataSelectors","showCurrentValue","compoundLogo","HeaderWrapper","FooterWrapper","StyledBody","App","setLoading","fetchData","usePrefetchData","_","dataMissing","dataBehind","weekLatestDate","dayLatestDate","hourLatestDate","useDataStatus","smoothscroll","polyfill","component","exact","strict","path","initialize","set","customBrowserType","isMobile","error","exception","message","filename","lineno","colno","fatal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.866d2735.chunk.js","sourcesContent":["/**\n * Underlying token symbol of each market in Compound\n */\nexport enum Token {\n\tBAT = \"BAT\",\n\tCOMP = \"COMP\",\n\tDAI = \"DAI\",\n\tETH = \"ETH\",\n\tUNI = \"UNI\",\n\tZRX = \"ZRX\",\n\tUSDC = \"USDC\",\n\tUSDT = \"USDT\",\n\tWBTC = \"WBTC\",\n\tWBTCL = \"WBTCL\",\n\tAAVE = \"AAVE\",\n\tMKR = \"MKR\",\n\tSUSHI = \"SUSHI\",\n\tTUSD = \"TUSD\",\n\tYFI = \"YFI\",\n\tLINK = \"LINK\",\n}\n\n/**\n * Time selector options for historical data\n */\nexport enum TimeSelector {\n\tONE_DAY = \"1D\",\n\tONE_WEEK = \"1W\",\n\tONE_MONTH = \"1M\",\n\tTHREE_MONTHS = \"3M\",\n\tONE_YEAR = \"1Y\",\n\tALL = \"ALL\",\n}\n\n/**\n * Resolution of time series data, this corresponds to MarketHourData, MarketDayData, and MarketWeekData respectively\n */\nexport enum DataResolution {\n\tHOUR = 0,\n\tDAY,\n\tWEEK,\n}\n\n/**\n * Available data selectors for protocol data (historical and current), values are the keys in the Graph schema\n */\nexport enum ProtocolDataSelector {\n\tTOTAL_SUPPLY_USD = \"totalSupplyUsd\",\n\tTOTAL_BORROW_USD = \"totalBorrowUsd\",\n\tTOTAL_RESERVES_USD = \"totalReservesUsd\",\n\tUTILIZATION = \"utilization\",\n}\n\n/**\n * Available data selectors for market data (historical and current), values are the keys in the Graph schema\n */\nexport enum MarketDataSelector {\n\tSUPPLY_APY = \"supplyApy\",\n\tBORROW_APY = \"borrowApy\",\n\tTOTAL_SUPPLY_APY = \"totalSupplyApy\",\n\tTOTAL_BORROW_APY = \"totalBorrowApy\",\n\tTOTAL_SUPPLY = \"totalSupply\",\n\tTOTAL_SUPPLY_USD = \"totalSupplyUsd\",\n\tTOTAL_BORROW = \"totalBorrow\",\n\tTOTAL_BORROW_USD = \"totalBorrowUsd\",\n\tTOTAL_RESERVES = \"totalReserves\",\n\tTOTAL_RESERVES_USD = \"totalReservesUsd\",\n\tUTILIZATION = \"utilization\",\n\tUSDC_PER_UNDERLYING = \"usdcPerUnderlying\",\n\tUSDC_PER_ETH = \"usdcPerEth\",\n}\n\n/**\n * Types of data selectors\n */\nexport enum DataType {\n\tPROTOCOL = 0,\n\tMARKET,\n}\n\n/**\n * Units for data used within the app\n */\nexport enum Unit {\n\tPERCENT = \"%\",\n\tUSD = \"$\",\n\tUNITLESS = \"\",\n}\n\n/**\n * Type of each transaction on Compound\n */\nexport enum TransactionType {\n\tMINT = \"Supply\",\n\tREDEEM = \"Redeem\",\n\tBORROW = \"Borrow\",\n\tREPAY_BORROW = \"Repay Borrow\",\n\tLIQUIDATION = \"Liquidation\",\n}\n\n/**\n * Type of each etherscan link\n */\nexport enum EtherscanLinkType {\n\tTOKEN = \"token\",\n\tWALLET = \"address\",\n\tCONTRACT = \"address\",\n\tTRANSACTION = \"tx\",\n}\n\n/**\n * Generaly purpose length enum\n */\nexport enum Length {\n\tSHORT = 0,\n\tMEDIUM,\n\tLONG,\n}\n\n/**\n * Differnet options for how to format a time\n */\nexport enum DateFormat {\n\tDD_YY = 0,\n\tMMM_DD_YY,\n\tMMM_DD_TIME,\n\tSINCE_NOW,\n}\n\nexport enum UserType {\n\tSUPPLIER = \"Supplier\",\n\tBORROWER = \"Borrower\",\n}\n","export default __webpack_public_path__ + \"static/media/BAT.67fb43cb.svg\";","export default __webpack_public_path__ + \"static/media/COMP.1d38f23c.svg\";","export default __webpack_public_path__ + \"static/media/DAI.2fa815ce.svg\";","export default __webpack_public_path__ + \"static/media/ETH.8b73e520.svg\";","export default __webpack_public_path__ + \"static/media/UNI.4c88dba0.svg\";","export default __webpack_public_path__ + \"static/media/ZRX.e70ab0da.svg\";","export default __webpack_public_path__ + \"static/media/USDC.c3105ea5.svg\";","export default __webpack_public_path__ + \"static/media/USDT.112dc7c9.svg\";","export default __webpack_public_path__ + \"static/media/WBTC.a67385b1.svg\";","export default __webpack_public_path__ + \"static/media/AAVE.22030d27.svg\";","export default __webpack_public_path__ + \"static/media/MKR.6b101b5b.svg\";","export default __webpack_public_path__ + \"static/media/SUSHI.c3fab7f4.svg\";","export default __webpack_public_path__ + \"static/media/TUSD.215c1692.svg\";","export default __webpack_public_path__ + \"static/media/YFI.021be439.svg\";","export default __webpack_public_path__ + \"static/media/LINK.b8368226.svg\";","import batSvg from \"assets/coins/BAT.svg\";\nimport compSvg from \"assets/coins/COMP.svg\";\nimport daiSvg from \"assets/coins/DAI.svg\";\nimport ethSvg from \"assets/coins/ETH.svg\";\nimport uniSvg from \"assets/coins/UNI.svg\";\nimport zrxSvg from \"assets/coins/ZRX.svg\";\nimport usdcSvg from \"assets/coins/USDC.svg\";\nimport usdtSvg from \"assets/coins/USDT.svg\";\nimport wbtcSvg from \"assets/coins/WBTC.svg\";\nimport aaveSvg from \"assets/coins/AAVE.svg\";\nimport mkrSvg from \"assets/coins/MKR.svg\";\nimport sushiSvg from \"assets/coins/SUSHI.svg\";\nimport tusdSvg from \"assets/coins/TUSD.svg\";\nimport yfiSvg from \"assets/coins/YFI.svg\";\nimport linkSvg from \"assets/coins/LINK.svg\";\n\nimport { Token, TimeSelector, ProtocolDataSelector, MarketDataSelector, DataResolution, Unit } from \"common/enums\";\nimport {\n\tTokenInfoList,\n\tTimeSelectorInfoList,\n\tProtocolDataSelectorInfoList,\n\tMarketDataSelectorInfoList,\n} from \"common/types\";\n\nexport const TOKEN_INFO: TokenInfoList = {\n\t[Token.BAT]: {\n\t\tsymbol: Token.BAT,\n\t\timgSrc: batSvg,\n\t\tdesc: `Basic Attention Token (BAT) is a token that powers Brave's blockchain-based digital\n\t\tadvertising platform.`,\n\t\twhitepaper: \"https://basicattentiontoken.org/static-assets/documents/BasicAttentionTokenWhitePaper-4.pdf\",\n\t\twebsite: \"https://basicattentiontoken.org/\",\n\t\ttwitter: \"https://twitter.com/attentiontoken\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/basic-attention-token\",\n\t},\n\t[Token.COMP]: {\n\t\tsymbol: Token.COMP,\n\t\timgSrc: compSvg,\n\t\tdesc: `Compound (COMP) is a token that enables community governance of the\n\t\tCompound protocol. COMP token holders and their delegates can also debate,\n\t\tpropose, and vote on changes to the protocol.`,\n\t\twhitepaper: \"https://compound.finance/documents/Compound.Whitepaper.pdf\",\n\t\twebsite: \"https://compound.finance/\",\n\t\ttwitter: \"https://twitter.com/compoundfinance\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/compound\",\n\t},\n\t[Token.DAI]: {\n\t\tsymbol: Token.DAI,\n\t\timgSrc: daiSvg,\n\t\tdesc: `Dai (DAI) is a decentralized stablecoin that attempts to maintain a\n\tvalue of $1.00 USD. Unlike centralized stablecoins, Dai isn't backed by US\n\tdollars in a bank account. Instead, it’s backed by collateral on the Maker\n\tplatform.`,\n\t\twhitepaper: \"https://makerdao.com/en/whitepaper/#abstract\",\n\t\twebsite: \"https://makerdao.com\",\n\t\ttwitter: \"https://twitter.com/MakerDAO\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/dai\",\n\t},\n\t[Token.ETH]: {\n\t\tsymbol: Token.ETH,\n\t\timgSrc: ethSvg,\n\t\tdesc: `Ethereum is a decentralized computing platform that uses ETH\n\t\t(also called Ether) to pay transaction fees (or “gas”). Developers can use\n\t\tEthereum to run decentralized applications (like Compound) and issue new\n\t\tcrypto assets, known as Ethereum tokens (ERC-20).`,\n\t\twhitepaper: \"https://ethereum.org/whitepaper/\",\n\t\twebsite: \"https://ethereum.org\",\n\t\ttwitter: \"https://twitter.com/ethereum\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/ethereum\",\n\t},\n\t[Token.UNI]: {\n\t\tsymbol: Token.UNI,\n\t\timgSrc: uniSvg,\n\t\tdesc: `Uniswap (UNI) is a token that powers governance on Uniswap, an\n\t\tautomated liquidity provider that’s designed to make it easy to exchange\n\t\tEthereum (ERC-20) tokens.`,\n\t\twhitepaper: \"https://uniswap.org/whitepaper-v3.pdf\",\n\t\twebsite: \"http://uniswap.org/\",\n\t\ttwitter: \"https://twitter.com/Uniswap\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/uniswap\",\n\t},\n\t[Token.ZRX]: {\n\t\tsymbol: Token.ZRX,\n\t\timgSrc: zrxSvg,\n\t\tdesc: `ZRX is a token that is used to power the 0x protocol.\n\t\tThe protocol itself is designed to allow Ethereum tokens to be traded at a\n\t\tlow cost directly from your wallet.`,\n\t\twhitepaper: \"https://0x.org/pdfs/0x_white_paper.pdf\",\n\t\twebsite: \"https://0x.org/\",\n\t\ttwitter: \"https://twitter.com/0xProject\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/0x\",\n\t},\n\t[Token.USDC]: {\n\t\tsymbol: Token.USDC,\n\t\timgSrc: usdcSvg,\n\t\tdesc: `USD Coin (USDC) is a stablecoin fully backed by the US dollar and\n\t\tdeveloped by the CENTRE consortium. USDC can be exchanged for dollars\n\t\t1:1 on Coinbase and other exchanges.`,\n\t\twhitepaper: \"https://f.hubspotusercontent30.net/hubfs/9304636/PDF/centre-whitepaper.pdf\",\n\t\twebsite: \"https://www.circle.com/usdc\",\n\t\ttwitter: \"https://twitter.com/circlepay\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/usd-coin\",\n\t},\n\t[Token.USDT]: {\n\t\tsymbol: Token.USDT,\n\t\timgSrc: usdtSvg,\n\t\tdesc: `Tether (USDT) is a stablecoin that is pegged to the value of a U.S.\n\t\tdollar. Tether’s issuer claims that USDT is backed by bank reserves and\n\t\tloans which match or exceed the value of USDT in circulation.`,\n\t\twhitepaper: \"https://tether.to/wp-content/uploads/2016/06/TetherWhitePaper.pdf\",\n\t\twebsite: \"https://tether.to/\",\n\t\ttwitter: \"https://twitter.com/Tether_to\",\n\t\tcoinGecko: \"https://www.coingecko.com/en/coins/tether\",\n\t},\n\t[Token.WBTC]: {\n\t\tsymbol: Token.WBTC,\n\t\timgSrc: wbtcSvg,\n\t\tdesc: `Wrapped Bitcoin (WBTC) is an Ethereum token that is intended to \n\t\trepresent Bitcoin (BTC) on the Ethereum blockchain.`,\n\t\twhitepaper: \"https://wbtc.network/assets/wrapped-tokens-whitepaper.pdf\",\n\t\twebsite: \"https://wbtc.network\",\n\t\ttwitter: \"https://twitter.com/wrappedbtc\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/wrapped-bitcoin\",\n\t},\n\t[Token.WBTCL]: {\n\t\tsymbol: Token.WBTCL,\n\t\timgSrc: wbtcSvg,\n\t\tdesc: `Wrapped Bitcoin (WBTC(legacy)) is an Ethereum token that is intended to \n\t\trepresent Bitcoin (BTC) on the Ethereum blockchain. This version of WBTC on \n\t\tCompound is no longer being supported, with the community migrating \n\t\tto WBTC.`,\n\t\twhitepaper: \"https://wbtc.network/assets/wrapped-tokens-whitepaper.pdf\",\n\t\twebsite: \"https://wbtc.network\",\n\t\ttwitter: \"https://twitter.com/wrappedbtc\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/wrapped-bitcoin\",\n\t},\n\t[Token.AAVE]: {\n\t\tsymbol: Token.AAVE,\n\t\timgSrc: aaveSvg,\n\t\tdesc: \"Aave (AAVE) is an Ethereum token that powers Aave, a decentralized non-custodial money market protocol where users can participate as depositors or borrowers. Depositors provide liquidity to the market to earn a passive income, while borrowers are able to borrow cryptocurrencies in exchange for paying a variable interest rate.\",\n\t\twhitepaper: \"https://github.com/aave/aave-protocol/blob/master/docs/Aave_Protocol_Whitepaper_v1_0.pdf\",\n\t\twebsite: \"https://aave.com\",\n\t\ttwitter: \"https://twitter.com/AaveAave\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/aave\",\n\t},\n\t[Token.MKR]: {\n\t\tsymbol: Token.MKR,\n\t\timgSrc: mkrSvg,\n\t\tdesc: `Maker is an Ethereum token that describes itself as “a utility token, governance token, and recapitalization resource of the Maker system.” The purpose of the Maker system is to generate another Ethereum token, called Dai, that seeks to trade on exchanges at a value of exactly US$1.00.`,\n\t\twhitepaper: \"https://makerdao.com/whitepaper/\",\n\t\twebsite: \"https://makerdao.com/\",\n\t\ttwitter: \"https://twitter.com/MakerDAO\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/maker\",\n\t},\n\t[Token.SUSHI]: {\n\t\tsymbol: Token.SUSHI,\n\t\timgSrc: sushiSvg,\n\t\tdesc: `SushiSwap (SUSHI) is an Ethereum token that powers SushiSwap, a decentralized cryptocurrency exchange and automated market maker built on Ethereum. Holders of SUSHI can participate in community governance and stake their tokens to receive a portion of SushiSwap’s transaction fees.`,\n\t\twhitepaper: \"https://docs.sushi.com\",\n\t\twebsite: \"https://sushi.com\",\n\t\ttwitter: \"https://twitter.com/sushiswap\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/sushi\",\n\t},\n\t[Token.TUSD]: {\n\t\tsymbol: Token.TUSD,\n\t\timgSrc: tusdSvg,\n\t\tdesc: `TrueUSD is a stablecoin running on Ethereum that attempts to maintain a value of US$1.00. The supply of TUSD is collateralized by US dollars held in escrow by banks. Tokens can be purchased and redeemed for US dollars on the TrustToken website.`,\n\t\twhitepaper: \"https://www.trusttoken.com\",\n\t\twebsite: \"https://www.trusttoken.com\",\n\t\ttwitter: \"https://twitter.com/TrustToken\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/true-usd\",\n\t},\n\t[Token.YFI]: {\n\t\tsymbol: Token.YFI,\n\t\timgSrc: yfiSvg,\n\t\tdesc: `Yearn.finance (YFI) is an Ethereum token that governs the Yearn.finance platform. The platform is a yield optimizer that moves funds around the decentralized finance (“defi”) ecosystem in an effort to generate a high return.`,\n\t\twhitepaper: \"https://docs.yearn.finance\",\n\t\twebsite: \"https://yearn.finance\",\n\t\ttwitter: \"https://twitter.com/iearnfinance\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/yearn-finance\",\n\t},\n\t[Token.LINK]: {\n\t\tsymbol: Token.LINK,\n\t\timgSrc: linkSvg,\n\t\tdesc: `Chainlink (LINK) is an Ethereum token that powers the Chainlink decentralized oracle network. This network allows smart contracts on Ethereum to securely connect to external data sources, APIs, and payment systems.`,\n\t\twhitepaper: \"https://chain.link/whitepaper\",\n\t\twebsite: \"https://chain.link\",\n\t\ttwitter: \"https://twitter.com/chainlink\",\n\t\tcoinGecko: \"https://www.coingecko.com/coins/chainlink\",\n\t},\n};\n\nexport const TIME_SELECTOR_INFO: TimeSelectorInfoList = {\n\t[TimeSelector.ONE_DAY]: {\n\t\tname: TimeSelector.ONE_DAY,\n\t\tdays: 1,\n\t\tresolution: DataResolution.HOUR, // 24 points\n\t},\n\t[TimeSelector.ONE_WEEK]: {\n\t\tname: TimeSelector.ONE_WEEK,\n\t\tdays: 7,\n\t\tresolution: DataResolution.HOUR, // 168 points\n\t},\n\t[TimeSelector.ONE_MONTH]: {\n\t\tname: TimeSelector.ONE_MONTH,\n\t\tdays: 30,\n\t\tresolution: DataResolution.DAY, // 30 points\n\t},\n\t[TimeSelector.THREE_MONTHS]: {\n\t\tname: TimeSelector.THREE_MONTHS,\n\t\tdays: 90,\n\t\tresolution: DataResolution.DAY, // 90 points\n\t},\n\t[TimeSelector.ONE_YEAR]: {\n\t\tname: TimeSelector.ONE_YEAR,\n\t\tdays: 365,\n\t\tresolution: DataResolution.WEEK, // 52 points\n\t},\n\t[TimeSelector.ALL]: {\n\t\tname: TimeSelector.ALL,\n\t\tdays: undefined,\n\t\tresolution: DataResolution.WEEK,\n\t},\n};\n\nexport const PROTOCOL_DATA_SELECTOR_INFO: ProtocolDataSelectorInfoList = {\n\t[ProtocolDataSelector.TOTAL_SUPPLY_USD]: {\n\t\tkey: ProtocolDataSelector.TOTAL_SUPPLY_USD,\n\t\tname: \"Supply\",\n\t\tdescription: \"total supplied in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[ProtocolDataSelector.TOTAL_BORROW_USD]: {\n\t\tkey: ProtocolDataSelector.TOTAL_BORROW_USD,\n\t\tname: \"Borrow\",\n\t\tdescription: \"total borrowed in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[ProtocolDataSelector.TOTAL_RESERVES_USD]: {\n\t\tkey: ProtocolDataSelector.TOTAL_RESERVES_USD,\n\t\tname: \"Reserves\",\n\t\tdescription: \"total reserves in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[ProtocolDataSelector.UTILIZATION]: {\n\t\tkey: ProtocolDataSelector.UTILIZATION,\n\t\tname: \"Utalization\",\n\t\tdescription: \"utilization (supply / borrow)\",\n\t\tunit: Unit.PERCENT,\n\t},\n};\n\nexport const MARKET_DATA_SELECTOR_INFO: MarketDataSelectorInfoList = {\n\t[MarketDataSelector.SUPPLY_APY]: {\n\t\tkey: MarketDataSelector.SUPPLY_APY,\n\t\tname: \"Supply APY\",\n\t\tdescription: \"supply APY excluding COMP\",\n\t\tunit: Unit.PERCENT,\n\t},\n\t[MarketDataSelector.BORROW_APY]: {\n\t\tkey: MarketDataSelector.BORROW_APY,\n\t\tname: \"Borrow APY\",\n\t\tdescription: \"borrow APY excluding COMP\",\n\t\tunit: Unit.PERCENT,\n\t},\n\t[MarketDataSelector.TOTAL_SUPPLY_APY]: {\n\t\tkey: MarketDataSelector.TOTAL_SUPPLY_APY,\n\t\tname: \"Supply APY\",\n\t\tdescription: \"supply APY including COMP\",\n\t\tunit: Unit.PERCENT,\n\t},\n\t[MarketDataSelector.TOTAL_BORROW_APY]: {\n\t\tkey: MarketDataSelector.TOTAL_BORROW_APY,\n\t\tname: \"Borrow APY\",\n\t\tdescription: \"borrow APY including COMP\",\n\t\tunit: Unit.PERCENT,\n\t},\n\t[MarketDataSelector.TOTAL_SUPPLY]: {\n\t\tkey: MarketDataSelector.TOTAL_SUPPLY,\n\t\tname: \"Supply\",\n\t\tdescription: \"total tokens supplied\",\n\t\tunit: Unit.UNITLESS,\n\t},\n\t[MarketDataSelector.TOTAL_SUPPLY_USD]: {\n\t\tkey: MarketDataSelector.TOTAL_SUPPLY_USD,\n\t\tname: \"Supply\",\n\t\tdescription: \"total supplied in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[MarketDataSelector.TOTAL_BORROW]: {\n\t\tkey: MarketDataSelector.TOTAL_BORROW,\n\t\tname: \"Borrow\",\n\t\tdescription: \"total tokens borrowed\",\n\t\tunit: Unit.UNITLESS,\n\t},\n\t[MarketDataSelector.TOTAL_BORROW_USD]: {\n\t\tkey: MarketDataSelector.TOTAL_BORROW_USD,\n\t\tname: \"Borrow\",\n\t\tdescription: \"total borrowed in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[MarketDataSelector.TOTAL_RESERVES]: {\n\t\tkey: MarketDataSelector.TOTAL_RESERVES,\n\t\tname: \"Reserves\",\n\t\tdescription: \"total tokens in reserves\",\n\t\tunit: Unit.UNITLESS,\n\t},\n\t[MarketDataSelector.TOTAL_RESERVES_USD]: {\n\t\tkey: MarketDataSelector.TOTAL_RESERVES_USD,\n\t\tname: \"Reserves\",\n\t\tdescription: \"total reserves in USD\",\n\t\tunit: Unit.USD,\n\t},\n\t[MarketDataSelector.UTILIZATION]: {\n\t\tkey: MarketDataSelector.UTILIZATION,\n\t\tname: \"Utalization\",\n\t\tdescription: \"utilization (supply / borrow)\",\n\t\tunit: Unit.PERCENT,\n\t},\n\t[MarketDataSelector.USDC_PER_UNDERLYING]: {\n\t\tkey: MarketDataSelector.USDC_PER_UNDERLYING,\n\t\tname: \"USD per underlying\",\n\t\tdescription: \"value of the underlying asset in USDC\",\n\t\tunit: Unit.USD,\n\t},\n\t[MarketDataSelector.USDC_PER_ETH]: {\n\t\tkey: MarketDataSelector.USDC_PER_ETH,\n\t\tname: \"USD per ETH\",\n\t\tdescription: \"value of ETH in USDC\",\n\t\tunit: Unit.USD,\n\t},\n};\n\n//// URL's for API calls\nexport const URLS = {\n\t// TRANSACTIONS: process.env.REACT_APP_TRANACTIONS_URL as string,\n\tTRANSACTIONS: \"https://api.flipsidecrypto.com/api/v2/queries/b61e144f-e705-4c22-951e-e3ca6626cb16/data/latest\",\n\tSUMMARY_DATA: \"https://api.compound.finance/api/v2/ctoken\",\n\tPAPERCLIP_HOME: \"https://twitter.com/papercliplabs\",\n\tGAS_NOW: \"https://www.gasnow.org/api/v3/gas/price?utm_source=compoundinfo\",\n\tFLIPSIDE: \"https://www.flipsidecrypto.com/\",\n\tCOMPOUND_DOCS: \"https://compound.finance/docs\",\n\tCOMPOUND_FINANCE: \"https://compound.finance\",\n\tCOMPOUND_GRANTS: \"https://twitter.com/compoundgrants\",\n\tGITHUB: \"https://github.com/papercliplabs/compound-info\",\n\tSUBGRAPH_API: process.env.REACT_APP_COMPOUND_INFO_SUBGRAPH_URL as string,\n\tSUBGRAPH_FRONT_END: \"https://thegraph.com/hosted-service/subgraph/papercliplabs/compound-info?version=current\",\n};\n\n// ID where the protocol mapping\nexport const PROTOCOL_ID = 1;\n\nexport const DATA_BEHIND_TIME_THRESHOLD_S = 60 * 60 * 24 * 1; // 1 day\n\nexport const TRANSACTIONS_WITHIN_DAYS = 7;\nexport const NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE = 10;\n","import { MissingFieldError } from \"@apollo/client\";\nimport { MARKET_DATA_SELECTOR_INFO, PROTOCOL_DATA_SELECTOR_INFO, TOKEN_INFO } from \"common/constants\";\n\nimport { ProtocolDataSelector, MarketDataSelector, Token, EtherscanLinkType, Length, DateFormat } from \"common/enums\";\nimport { maxHeaderSize } from \"http\";\nimport { textSpanIntersectsWithTextSpan } from \"typescript\";\n\n/**\n * Convert unix time in ms to a date\n * @param dateInUnixSec the date represented in seconds since unix epoche\n * @param dateFormat format for the date\n * @returns date in string format (ex: May 10, 2021, 1:00 AM)\n */\nexport function formatDate(dateInUnixSec: number, dateFormat: DateFormat): string {\n\tconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tconst date = new Date(dateInUnixSec * 1000); // date from ms since epoche\n\tconst monthIndex = date.getMonth();\n\tconst day = date.getDate();\n\tconst year = date.getFullYear().toString();\n\tconst month = months[monthIndex];\n\n\tlet formattedDate = \"\";\n\tswitch (dateFormat) {\n\t\tcase DateFormat.DD_YY:\n\t\t\tformattedDate = monthIndex + 1 + \"/\" + year.slice(2, 4);\n\t\t\tbreak;\n\t\tcase DateFormat.MMM_DD_YY:\n\t\t\tformattedDate += month + \" \" + day + \", \" + year;\n\t\t\tbreak;\n\t\tcase DateFormat.MMM_DD_TIME:\n\t\t\tconst time = date.toLocaleTimeString(\"en-US\", { hour: \"numeric\", minute: \"numeric\" });\n\t\t\tformattedDate += month + \" \" + day + \" \" + time;\n\t\t\tbreak;\n\t\tcase DateFormat.SINCE_NOW:\n\t\t\tconst now = Math.round(Date.now() / 1000); // Unix timestamp in seconds\n\t\t\tconst deltaSec = now - dateInUnixSec;\n\t\t\tif (deltaSec < 60) {\n\t\t\t\tformattedDate = `${deltaSec} sec ago`;\n\t\t\t} else if (deltaSec < 60 * 60) {\n\t\t\t\tconst deltaMin = Math.round(deltaSec / 60);\n\t\t\t\tformattedDate = `${deltaMin} min ago`;\n\t\t\t} else if (deltaSec < 60 * 60 * 24) {\n\t\t\t\tconst deltaHour = Math.round(deltaSec / (60 * 60));\n\t\t\t\tformattedDate = `${deltaHour} hr ago`;\n\t\t\t} else if (deltaSec < 60 * 60 * 24 * 31) {\n\t\t\t\tconst deltaDay = Math.round(deltaSec / (60 * 60 * 24));\n\t\t\t\tconst base = deltaDay == 1 ? \"day\" : \"days\";\n\t\t\t\tformattedDate = `${deltaDay} ${base} ago`;\n\t\t\t} else if (deltaSec < 60 * 60 * 24 * 360) {\n\t\t\t\tconst deltaMonth = Math.round(deltaSec / (60 * 60 * 24 * 31));\n\t\t\t\tconst base = deltaMonth == 1 ? \"month\" : \"months\";\n\t\t\t\tformattedDate = `${deltaMonth} ${base} ago`;\n\t\t\t} else {\n\t\t\t\tconst deltaYear = Math.round(deltaSec / (60 * 60 * 24 * 365));\n\t\t\t\tconst base = deltaYear == 1 ? \"year\" : \"years\";\n\t\t\t\tformattedDate = `${deltaYear} ${base} ago`;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn formattedDate;\n}\n\n/**\n * Format a number so it can nicely be rendered. This ensures the number of digits is 5 or less\n * @param number the number to be formatted, this can be a number or a string representation of a number\n * @param unit the unit of the number, if it is \"%\" then we\n * @param decimals the number of decimals to keep after formatting, if not specified it will keep 2\n * @returns nicely formatted number, for example if number is 11023 this will return 1.10K\n */\nexport function formatNumber(num: number | string, unit?: string, decimals: number | null = null): string {\n\tconst K = 1000;\n\tconst M = 1000000;\n\tconst B = 1000000000;\n\tconst T = 1000000000000;\n\tlet defaultDecimals = 2;\n\n\tlet postFix = \"\";\n\tlet unitPostfix = false;\n\tlet formattedNum = num;\n\n\t// If it is represented as a sting, convert to number first\n\tif (typeof formattedNum === \"string\") {\n\t\tformattedNum = parseFloat(formattedNum);\n\n\t\tif (isNaN(formattedNum)) {\n\t\t\treturn num as string; // It isn't a number\n\t\t}\n\t}\n\n\t// Multiply by 100, and set so unit is postfixed\n\tif (unit === \"%\") {\n\t\tformattedNum *= 100;\n\t\tunitPostfix = true;\n\t}\n\n\t// Converting to digestable format\n\tif (formattedNum > T) {\n\t\tformattedNum /= T;\n\t\tpostFix = \"T\";\n\t} else if (formattedNum > B) {\n\t\tformattedNum /= B;\n\t\tpostFix = \"B\";\n\t} else if (formattedNum > M) {\n\t\tformattedNum /= M;\n\t\tpostFix = \"M\";\n\t} else if (formattedNum > K) {\n\t\tformattedNum /= K;\n\t\tpostFix = \"K\";\n\t}\n\n\t// If its an interger, flag to rount to whole number\n\tif (formattedNum % 1 === 0) {\n\t\tdefaultDecimals = 0;\n\t}\n\n\t// Applying configs\n\tif (decimals !== null) {\n\t\tformattedNum = formattedNum.toFixed(decimals).toString();\n\t} else {\n\t\tformattedNum = formattedNum.toFixed(defaultDecimals).toString();\n\t}\n\tformattedNum += postFix;\n\tformattedNum = unit ? (unitPostfix ? formattedNum + unit : unit + formattedNum) : formattedNum;\n\n\treturn formattedNum;\n}\n\n/**\n * Get the name for the data selector if the meta data exists, otherwise just returns the selector\n * @param selector selector key to get the name for\n */\nexport function getDataSelectorName(selector: string): string {\n\tif (selector in MarketDataSelector) {\n\t\treturn MARKET_DATA_SELECTOR_INFO[selector as MarketDataSelector].name;\n\t} else if (selector in ProtocolDataSelector) {\n\t\treturn PROTOCOL_DATA_SELECTOR_INFO[selector as ProtocolDataSelector].name;\n\t} else {\n\t\treturn selector;\n\t}\n}\n\n/**\n * Get the unit for the data selector if the meta data exists, otherwise just returns empty string\n * @param selector selector key to get the unit for\n */\nexport function getDataSelectorUnit(selector: string): string {\n\tif (selector in MarketDataSelector) {\n\t\treturn MARKET_DATA_SELECTOR_INFO[selector as MarketDataSelector].unit;\n\t} else if (selector in ProtocolDataSelector) {\n\t\treturn PROTOCOL_DATA_SELECTOR_INFO[selector as ProtocolDataSelector].unit;\n\t} else {\n\t\treturn \"\";\n\t}\n}\n\n/**\n * Get the description for the data selector if the meta data exists, otherwise just returns empty string\n * @param selector selector key to get the unit for\n */\nexport function getDataSelectorDescription(selector: string): string {\n\tif (selector in MarketDataSelector) {\n\t\treturn MARKET_DATA_SELECTOR_INFO[selector as MarketDataSelector].description;\n\t} else if (selector in ProtocolDataSelector) {\n\t\treturn PROTOCOL_DATA_SELECTOR_INFO[selector as ProtocolDataSelector].description;\n\t} else {\n\t\treturn \"\";\n\t}\n}\n\n/**\n * Convert from wei to gwei, 1 gwei = 10^9 wei\n * @param wei the number of wei to be converted\n * @returns the equivilent number of gwei\n */\nexport function weiToGwei(wei: number): number {\n\treturn wei * 10 ** -9;\n}\n\n/**\n * Getter for the ethercan link given a coin address\n * @param address token, wallet or contract address\n * @param linkType type of the link\n * @returns etherscan link for the coin address\n */\nexport function getEtherscanLink(address: string, linkType: EtherscanLinkType): string {\n\treturn \"https://etherscan.io/\" + linkType + \"/\" + address;\n}\n\n/**\n * Format an address to a shorter version by adding ... in the middle\n * @param address address to be shortened\n * @param length the length to shorten the address to\n * @returns shortened address\n */\nexport function shortAddress(address: string, length: Length): string {\n\tconst len = address.length;\n\tlet keepLen = 12;\n\tswitch (length) {\n\t\tcase Length.SHORT:\n\t\t\tkeepLen = 6;\n\t\t\tbreak;\n\t\tcase Length.MEDIUM:\n\t\t\tkeepLen = 12;\n\t\t\tbreak;\n\t\tcase Length.LONG:\n\t\t\tkeepLen = 20;\n\t\t\tbreak;\n\t}\n\tif (len < keepLen) {\n\t\treturn address;\n\t} else {\n\t\treturn address.slice(0, keepLen / 2) + \"...\" + address.slice(len - Math.max(4, keepLen / 2), len);\n\t}\n}\n\n/**\n * Saturate val at the max and min values\n * @param val value to saturate\n * @param min lower bound for saturation\n * @param max upper bound for saturation\n * @return saturated val\n */\nexport function saturate(val: number, min: number, max: number): number {\n\treturn Math.max(Math.min(val, max), min);\n}\n\n/**\n * Get the Token corresponding to the underlying symbol\n * @param underlyingSymbol underlying symbol to get the token for\n * @return Token if it exists for the underlying symbol, otherwise undefined\n */\nexport function getTokenForUnderlyingSymbol(underlyingSymbol: string): Token | undefined {\n\tif (underlyingSymbol in Token) {\n\t\tconst token = underlyingSymbol as Token;\n\t\treturn token;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Getter for the list of coin names\n * @returns list of coin names\n */\n// export function getCoinNameList(): string[] {\n// \treturn COIN_INFO.map((info) => info.name);\n// }\n\n// /**\n//  * Getter for the list of all time series data selector keys\n//  * @returns list of all time series data selector keys\n//  */\n// export function getTimeSeriesDataSelectorKeyList(): string[] {\n// \treturn TIME_SERIES_DATA_SELECTOR_INFO.map((info) => info.key);\n// }\n\n/**\n * Get the coin with the given coin name\n * @param coinName the coin name to get the coin for\n * @returns the coin for the coin name, or null if none exists\n */\n// export function getCoinForCoinName(coinName: string): coin_E | null {\n// \tconst filteredCoinInfo = COIN_INFO.filter((info) => info.name == coinName);\n// \tconst coinInfo = filteredCoinInfo.length === 1 ? filteredCoinInfo[0] : null;\n// \tlet coin: coin_E | null = null;\n// \tif (coinInfo !== null) {\n// \t\tcoin = COIN_INFO.indexOf(coinInfo) as coin_E;\n// \t}\n\n// \treturn coin;\n// }\n\n/**\n * Converts a camelCaseWord to SCREAMING_SNAKE_CASE\n * @param camelCaseWord the camel case word to be converted\n * @returns the screaming snake case of the word\n */\nexport function camelToScreamingSnakeCase(camelCaseWord: string): string {\n\tconst scremingSnakeCaseWord = camelCaseWord.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`); // snake_case\n\n\treturn scremingSnakeCaseWord.toUpperCase(); // SCREAMING_SNAKE_CASE\n}\n","import React, { useState, createContext, useContext, useCallback } from \"react\";\n\nconst GlobalStoreContext = createContext(null);\n\n// To wrap components in this at the top level\nexport default function GlobalStoreProvider(props: any) {\n\tconst [store, setStore] = useState({});\n\n\t// Interfaces used by hooks to update the store on first requests\n\tconst updateStore = useCallback((key: string, data: any) => {\n\t\tsetStore((prevStore) => ({ ...prevStore, [key]: data }));\n\t}, []);\n\n\treturn <GlobalStoreContext.Provider value={[store, { updateStore }]} {...props} />;\n}\n\nexport function useGlobalStore() {\n\treturn useContext(GlobalStoreContext);\n}\n","import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\n\nimport { URLS } from \"common/constants\";\n\nexport const compoundInfoSubgraphClient = new ApolloClient({\n\turi: URLS.SUBGRAPH_API,\n\tcache: new InMemoryCache(),\n});\n","import { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { PROTOCOL_ID } from \"common/constants\";\nimport { ProtocolSummaryData } from \"common/types\";\n\n/// New\nconst protocolSummaryQuery = gql`\n\tquery protocolSummaryData($id: Int!) {\n\t\tprotocol(id: $id) {\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReservesUsd\n\t\t\tutilization\n\t\t}\n\t}\n`;\n\nexport type ProtocolSummaryRequestResult = {\n\tprotocol: ProtocolSummaryData;\n};\n\nexport async function requestProtocolSummaryData(): Promise<ProtocolSummaryData> {\n\tconsole.log(\"Performing request: protocol summary data\");\n\n\tconst { data, loading } = await compoundInfoSubgraphClient.query<ProtocolSummaryRequestResult>({\n\t\tquery: protocolSummaryQuery,\n\t\tvariables: {\n\t\t\tid: PROTOCOL_ID,\n\t\t},\n\t});\n\n\treturn data.protocol;\n}\n","// @ts-nocheck\nimport { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { PROTOCOL_ID } from \"common/constants\";\nimport { ProtocolHistoricalData } from \"common/types\";\n\nconst PAGE_LENGTH = 1000; // Max of 1000\n\n/// New\nconst protocolHistoricalDataQuery = gql`\n\tquery protocolHistoricalData($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tprotocolWeekDatas(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReservesUsd\n\t\t\tutilization\n\t\t\tdate\n\t\t}\n\t}\n`;\n\n/**\n * Helper to perform\n * @param query the query to perform\n * @param key the key to use to get to the data (marketWeekDatas, marketDayDatas or marketHourDatas)\n * @param dateGreaterThan only take data with the date in seconds since unix epooch greater than this\n * @return the formatted query results, the last entry of the results is the most recent values\n */\nasync function performPagenationRequest(query: DocumentNode, key: string, dateGreaterThan: number): any {\n\tconst outputData = [];\n\n\tlet allFound = false;\n\tlet skip = 0;\n\n\t// Pagenation of requests\n\twhile (!allFound) {\n\t\tconst data = await compoundInfoSubgraphClient.query({\n\t\t\tquery: query,\n\t\t\tvariables: {\n\t\t\t\tid: PROTOCOL_ID,\n\t\t\t\tskip: skip,\n\t\t\t\tpageLength: PAGE_LENGTH,\n\t\t\t\tdateGreaterThan: dateGreaterThan,\n\t\t\t},\n\t\t});\n\n\t\tconst historicalData = data.data[key];\n\n\t\tconst len = historicalData.length;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst entry = {\n\t\t\t\tdate: Number(historicalData[i].date),\n\t\t\t\ttotalSupplyUsd: Number(Number(historicalData[i].totalSupplyUsd).toFixed(2)),\n\t\t\t\ttotalBorrowUsd: Number(Number(historicalData[i].totalBorrowUsd).toFixed(2)),\n\t\t\t\ttotalReservesUsd: Number(Number(historicalData[i].totalReservesUsd).toFixed(4)),\n\t\t\t\tutilization: Number(Number(historicalData[i].utilization).toFixed(4)),\n\t\t\t};\n\n\t\t\toutputData.push(entry);\n\t\t}\n\n\t\t// If less than 1000 results were returned we found everything\n\t\tallFound = len !== PAGE_LENGTH;\n\t\tskip += PAGE_LENGTH;\n\t}\n\n\treturn outputData;\n}\n\nexport type ProtocolSummaryRequestResult = {\n\tprotocolWeekDatas: ProtocolHistoricalData[];\n};\n\nexport async function requestProtocolHistoricalData(): Promise<ProtocolHistoricalData[]> {\n\tconsole.log(\"performing request: protocol historical data\");\n\n\tconst weekData = await performPagenationRequest(protocolHistoricalDataQuery, \"protocolWeekDatas\", 0);\n\n\treturn weekData;\n}\n","import { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { Token } from \"common/enums\";\nimport { MarketSummaryData } from \"common/types\";\n\nconst marketSummaryQuery = gql`\n\tquery marketSummaryData {\n\t\tmarkets {\n\t\t\tid\n\t\t\tunderlyingSymbol\n\t\t\tcreationBlockNumber\n\t\t\tcTokenSymbol\n\t\t\tunderlyingName\n\t\t\tunderlyingAddress\n\t\t\tcollateralFactor\n\t\t\treserveFactor\n\t\t\tborrowCap\n\t\t\tcash\n\t\t\tutilization\n\t\t\tsupplyApy\n\t\t\tborrowApy\n\t\t\ttotalSupplyApy\n\t\t\ttotalBorrowApy\n\t\t\ttotalSupply\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrow\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReserves\n\t\t\ttotalReservesUsd\n\t\t\tavailableLiquidity\n\t\t\tavailableLiquidityUsd\n\t\t\tusdcPerUnderlying\n\t\t\tusdcPerEth\n\t\t}\n\t}\n`;\n\nexport type MarketSummaryRequestResult = {\n\tmarkets: MarketSummaryData[];\n};\n\nexport async function requestMarketSummaryData(): Promise<MarketSummaryData[]> {\n\tconsole.log(\"Performing request: market summary data\");\n\tconst { data } = await compoundInfoSubgraphClient.query<MarketSummaryRequestResult>({\n\t\tquery: marketSummaryQuery,\n\t});\n\n\treturn data.markets;\n}\n","// @ts-nocheck\nimport { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { DataResolution, MarketDataSelector, Token } from \"common/enums\";\nimport { MarketHistoricalDataEntry } from \"common/types\";\n\nimport { dummyMarketHistoricalData } from \"data/requests/dummyData\";\nimport { working } from \"data/requests/test\";\nimport { saturate } from \"common/utils\";\n\nconst PAGE_LENGTH = 1000; // Max of 1000\n\nconst marketHistoricalWeekQuery = gql`\n\tquery weekQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tmarketWeekDatas(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\tid\n\t\t\tmarket {\n\t\t\t\tunderlyingSymbol\n\t\t\t\tcreationBlockNumber\n\t\t\t}\n\t\t\tdate\n\t\t\tsupplyApy\n\t\t\tborrowApy\n\t\t\ttotalSupplyApy\n\t\t\ttotalBorrowApy\n\t\t\ttotalSupply\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrow\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReserves\n\t\t\ttotalReservesUsd\n\t\t\tutilization\n\t\t\tusdcPerUnderlying\n\t\t\tusdcPerEth\n\t\t}\n\t}\n`;\n\nconst marketHistoricalDayQuery = gql`\n\tquery dayQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tmarketDayDatas(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\tid\n\t\t\tmarket {\n\t\t\t\tunderlyingSymbol\n\t\t\t\tcreationBlockNumber\n\t\t\t}\n\t\t\tdate\n\t\t\tsupplyApy\n\t\t\tborrowApy\n\t\t\ttotalSupplyApy\n\t\t\ttotalBorrowApy\n\t\t\ttotalSupply\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrow\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReserves\n\t\t\ttotalReservesUsd\n\t\t\tutilization\n\t\t\tusdcPerUnderlying\n\t\t\tusdcPerEth\n\t\t}\n\t}\n`;\n\nconst marketHistoricalHourQuery = gql`\n\tquery hourQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tmarketHourDatas(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\tid\n\t\t\tmarket {\n\t\t\t\tunderlyingSymbol\n\t\t\t\tcreationBlockNumber\n\t\t\t}\n\t\t\tdate\n\t\t\tsupplyApy\n\t\t\tborrowApy\n\t\t\ttotalSupplyApy\n\t\t\ttotalBorrowApy\n\t\t\ttotalSupply\n\t\t\ttotalSupplyUsd\n\t\t\ttotalBorrow\n\t\t\ttotalBorrowUsd\n\t\t\ttotalReserves\n\t\t\ttotalReservesUsd\n\t\t\tutilization\n\t\t\tusdcPerUnderlying\n\t\t\tusdcPerEth\n\t\t}\n\t}\n`;\n\n/**\n * Helper to perform\n * @param query the query to perform\n * @param key the key to use to get to the data (marketWeekDatas, marketDayDatas or marketHourDatas)\n * @param dateGreaterThan only take data with the date in seconds since unix epooch greater than this\n * @return the formatted query results, the last entry of the results is the most recent values\n */\nasync function performPagenationRequest(\n\tquery: DocumentNode,\n\tkey: string,\n\tdateGreaterThan: number\n): Promise<MarketHistoricalDataEntry> {\n\tconsole.log(\"Performing request: \" + key);\n\n\tconst outputData = [];\n\n\t// Latest values, this is used to stick onto the end of hour data\n\tconst nowSec = parseInt(new Date() / 1000);\n\tconst supplyApyLatestEntry = { date: nowSec };\n\tconst borrowApyLatestEntry = { date: nowSec };\n\tconst totalSupplyApyLatestEntry = { date: nowSec };\n\tconst totalBorrowApyLatestEntry = { date: nowSec };\n\tconst totalSupplyLatestEntry = { date: nowSec };\n\tconst totalSupplyUsdLatestEntry = { date: nowSec };\n\tconst totalBorrowLatestEntry = { date: nowSec };\n\tconst totalBorrowUsdLatestEntry = { date: nowSec };\n\tconst totalReservesLatestEntry = { date: nowSec };\n\tconst totalReservesUsdLatestEntry = { date: nowSec };\n\tconst utilizationLatestEntry = { date: nowSec };\n\tconst usdcPerUnderlyingLatestEntry = { date: nowSec };\n\n\t// Accumulators\n\tlet supplyApyEntry = {};\n\tlet borrowApyEntry = {};\n\tlet totalSupplyApyEntry = {};\n\tlet totalBorrowApyEntry = {};\n\tlet totalSupplyEntry = {};\n\tlet totalSupplyUsdEntry = {};\n\tlet totalBorrowEntry = {};\n\tlet totalBorrowUsdEntry = {};\n\tlet totalReservesEntry = {};\n\tlet totalReservesUsdEntry = {};\n\tlet utilizationEntry = {};\n\tlet usdcPerUnderlyingEntry = {};\n\n\tlet allFound = false;\n\tlet skip = 0;\n\n\tlet currentDate = 0;\n\n\t// Pagenation of requests\n\twhile (!allFound) {\n\t\tconst data = await compoundInfoSubgraphClient.query({\n\t\t\tquery: query,\n\t\t\tvariables: {\n\t\t\t\tskip: skip,\n\t\t\t\tpageLength: PAGE_LENGTH,\n\t\t\t\tdateGreaterThan: dateGreaterThan,\n\t\t\t},\n\t\t});\n\n\t\tconst historicalData = data.data[key];\n\n\t\tconst len = historicalData.length;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\t// Finished gathering all data for that date\n\t\t\tif (Number(historicalData[i].date) !== currentDate) {\n\t\t\t\t// On the first run through, currentDate will be 0, so lets not load anything\n\t\t\t\tif (currentDate != 0) {\n\t\t\t\t\t// Load accumulated values\n\t\t\t\t\tconst entry = {\n\t\t\t\t\t\tsupplyApy: supplyApyEntry,\n\t\t\t\t\t\tborrowApy: borrowApyEntry,\n\t\t\t\t\t\ttotalSupplyApy: totalSupplyApyEntry,\n\t\t\t\t\t\ttotalBorrowApy: totalBorrowApyEntry,\n\t\t\t\t\t\ttotalSupply: totalSupplyEntry,\n\t\t\t\t\t\ttotalSupplyUsd: totalSupplyUsdEntry,\n\t\t\t\t\t\ttotalBorrow: totalBorrowEntry,\n\t\t\t\t\t\ttotalBorrowUsd: totalBorrowUsdEntry,\n\t\t\t\t\t\ttotalReserves: totalReservesEntry,\n\t\t\t\t\t\ttotalReservesUsd: totalReservesUsdEntry,\n\t\t\t\t\t\tutilization: utilizationEntry,\n\t\t\t\t\t\tusdcPerUnderlying: usdcPerUnderlyingEntry,\n\t\t\t\t\t};\n\n\t\t\t\t\t// Add full entry\n\t\t\t\t\toutputData.push(entry);\n\t\t\t\t}\n\n\t\t\t\t// Update date\n\t\t\t\tcurrentDate = Number(historicalData[i].date);\n\n\t\t\t\t// Reset accumulators\n\t\t\t\tsupplyApyEntry = { date: currentDate };\n\t\t\t\tborrowApyEntry = { date: currentDate };\n\t\t\t\ttotalSupplyApyEntry = { date: currentDate };\n\t\t\t\ttotalBorrowApyEntry = { date: currentDate };\n\t\t\t\ttotalSupplyEntry = { date: currentDate };\n\t\t\t\ttotalSupplyUsdEntry = { date: currentDate };\n\t\t\t\ttotalBorrowEntry = { date: currentDate };\n\t\t\t\ttotalBorrowUsdEntry = { date: currentDate };\n\t\t\t\ttotalReservesEntry = { date: currentDate };\n\t\t\t\ttotalReservesUsdEntry = { date: currentDate };\n\t\t\t\tutilizationEntry = { date: currentDate };\n\t\t\t\tusdcPerUnderlyingEntry = { date: currentDate };\n\t\t\t}\n\n\t\t\tconst tokenSymbol = historicalData[i].market.underlyingSymbol;\n\n\t\t\t// Load accumulators\n\t\t\tif (tokenSymbol in Token) {\n\t\t\t\t// TOOD: this type casting is inefficient\n\t\t\t\tsupplyApyEntry[tokenSymbol] = Number(Number(historicalData[i].supplyApy).toFixed(4));\n\t\t\t\tborrowApyEntry[tokenSymbol] = Number(Number(historicalData[i].borrowApy).toFixed(4));\n\t\t\t\ttotalSupplyApyEntry[tokenSymbol] = Number(Number(historicalData[i].totalSupplyApy).toFixed(4));\n\t\t\t\ttotalBorrowApyEntry[tokenSymbol] = Number(Number(historicalData[i].totalBorrowApy).toFixed(4));\n\t\t\t\ttotalSupplyEntry[tokenSymbol] = Number(Number(historicalData[i].totalSupply).toFixed(4));\n\t\t\t\ttotalSupplyUsdEntry[tokenSymbol] = Number(Number(historicalData[i].totalSupplyUsd).toFixed(2));\n\t\t\t\ttotalBorrowEntry[tokenSymbol] = Number(Number(historicalData[i].totalBorrow).toFixed(4));\n\t\t\t\ttotalBorrowUsdEntry[tokenSymbol] = Number(Number(historicalData[i].totalBorrowUsd).toFixed(2));\n\t\t\t\ttotalReservesEntry[tokenSymbol] = Number(Number(historicalData[i].totalReserves).toFixed(4));\n\t\t\t\ttotalReservesUsdEntry[tokenSymbol] = Number(Number(historicalData[i].totalReservesUsd).toFixed(4));\n\t\t\t\tutilizationEntry[tokenSymbol] = Number(Number(historicalData[i].utilization).toFixed(4));\n\t\t\t\tusdcPerUnderlyingEntry[tokenSymbol] = Number(Number(historicalData[i].usdcPerUnderlying).toFixed(2));\n\n\t\t\t\t// Update the latest values for this symbol\n\t\t\t\tsupplyApyLatestEntry[tokenSymbol] = supplyApyEntry[tokenSymbol];\n\t\t\t\tborrowApyLatestEntry[tokenSymbol] = borrowApyEntry[tokenSymbol];\n\t\t\t\ttotalSupplyApyLatestEntry[tokenSymbol] = totalSupplyApyEntry[tokenSymbol];\n\t\t\t\ttotalBorrowApyLatestEntry[tokenSymbol] = totalBorrowApyEntry[tokenSymbol];\n\t\t\t\ttotalSupplyLatestEntry[tokenSymbol] = totalSupplyEntry[tokenSymbol];\n\t\t\t\ttotalSupplyUsdLatestEntry[tokenSymbol] = totalSupplyUsdEntry[tokenSymbol];\n\t\t\t\ttotalBorrowLatestEntry[tokenSymbol] = totalBorrowEntry[tokenSymbol];\n\t\t\t\ttotalBorrowUsdLatestEntry[tokenSymbol] = totalBorrowUsdEntry[tokenSymbol];\n\t\t\t\ttotalReservesLatestEntry[tokenSymbol] = totalReservesEntry[tokenSymbol];\n\t\t\t\ttotalReservesUsdLatestEntry[tokenSymbol] = totalReservesUsdEntry[tokenSymbol];\n\t\t\t\tutilizationLatestEntry[tokenSymbol] = utilizationEntry[tokenSymbol];\n\t\t\t\tusdcPerUnderlyingLatestEntry[tokenSymbol] = usdcPerUnderlyingEntry[tokenSymbol];\n\n\t\t\t\t// COMP and LINK both were dumb numbers on first data point, so apply saturation\n\t\t\t\ttotalSupplyApyEntry[tokenSymbol] = saturate(totalSupplyApyEntry[tokenSymbol], -2, 2);\n\t\t\t\ttotalBorrowApyEntry[tokenSymbol] = saturate(totalBorrowApyEntry[tokenSymbol], -2, 2);\n\t\t\t}\n\t\t}\n\n\t\t// If less than 1000 results were returned we found everything\n\t\tallFound = len !== PAGE_LENGTH;\n\t\tskip += PAGE_LENGTH;\n\t}\n\n\tconst finalEntry = {\n\t\tsupplyApy: supplyApyLatestEntry,\n\t\tborrowApy: borrowApyLatestEntry,\n\t\ttotalSupplyApy: totalSupplyApyLatestEntry,\n\t\ttotalBorrowApy: totalBorrowApyLatestEntry,\n\t\ttotalSupply: totalSupplyLatestEntry,\n\t\ttotalSupplyUsd: totalSupplyUsdLatestEntry,\n\t\ttotalBorrow: totalBorrowLatestEntry,\n\t\ttotalBorrowUsd: totalBorrowUsdLatestEntry,\n\t\ttotalReserves: totalReservesLatestEntry,\n\t\ttotalReservesUsd: totalReservesUsdLatestEntry,\n\t\tutilization: utilizationLatestEntry,\n\t\tusdcPerUnderlying: usdcPerUnderlyingLatestEntry,\n\t};\n\n\tif (key === \"marketHourDatas\" && outputData.length > 0) {\n\t\toutputData.push(finalEntry);\n\t}\n\n\treturn outputData;\n}\n\n/**\n * Request for market historical data\n * @returns market historical data for each data resoltion\n * \t\t\tthe values are records with token names as keys\n */\nexport async function requestMarketHistoricalData(): Record<keyof MarketDataSelector, MarketHistoricalDataEntry[]> {\n\tconsole.log(\"Performing request: historical market data\");\n\n\tconst now = parseInt(Date.now() / 1000); // Unix timestamp in seconds\n\n\tconst dayDataGreateThanDate = now - 90 * 24 * 60 * 60; // Last 90 days\n\tconst hourDataGreaterThanDate = now - 7 * 24 * 60 * 60; // Last 7 days\n\n\tconst weekData = await performPagenationRequest(marketHistoricalWeekQuery, \"marketWeekDatas\", 0);\n\tconst dayData = await performPagenationRequest(marketHistoricalDayQuery, \"marketDayDatas\", dayDataGreateThanDate);\n\tconst hourData = await performPagenationRequest(\n\t\tmarketHistoricalHourQuery,\n\t\t\"marketHourDatas\",\n\t\thourDataGreaterThanDate\n\t);\n\n\t// Add on the last entry in hour data to week and day data so the last point is the most recent\n\t// TODO: this should actually be adding the current values from marketSummaryData\n\tif (hourData.length > 0) {\n\t\tweekData.push(hourData.slice(-1)[0]);\n\t\tdayData.push(hourData.slice(-1)[0]);\n\t}\n\n\t// Remove the first point from each as comp speeds is weird here\n\tweekData.shift();\n\tdayData.shift();\n\thourData.shift();\n\n\t// console.log(\"WEEK\");\n\t// console.log(weekData);\n\t// console.log(\"DAY\");\n\t// console.log(dayData);\n\t// console.log(\"HOUR\");\n\t// console.log(hourData);\n\n\treturn {\n\t\t[DataResolution.WEEK]: weekData,\n\t\t[DataResolution.DAY]: dayData,\n\t\t[DataResolution.HOUR]: hourData,\n\t};\n}\n","// @ts-nocheck\nimport { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { PROTOCOL_ID, TRANSACTIONS_WITHIN_DAYS } from \"common/constants\";\nimport { Transaction } from \"common/types\";\nimport { Token, TransactionType } from \"common/enums\";\n\nconst PAGE_LENGTH = 1000; // Max of 1000\n\nconst mintsQuery = gql`\n\tquery mintsQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tmints(orderBy: date, orderDirection: asc, first: $pageLength, skip: $skip, where: { date_gt: $dateGreaterThan }) {\n\t\t\tid\n\t\t\tuserMarket {\n\t\t\t\tmarket {\n\t\t\t\t\tunderlyingSymbol\n\t\t\t\t\tcreationBlockNumber\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t\tunderlyingAmount\n\t\t\tdate\n\t\t}\n\t}\n`;\n\nconst redeemsQuery = gql`\n\tquery redeemsQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tredeems(orderBy: date, orderDirection: asc, first: $pageLength, skip: $skip, where: { date_gt: $dateGreaterThan }) {\n\t\t\tid\n\t\t\tuserMarket {\n\t\t\t\tmarket {\n\t\t\t\t\tunderlyingSymbol\n\t\t\t\t\tcreationBlockNumber\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t\tunderlyingAmount\n\t\t\tdate\n\t\t}\n\t}\n`;\n\nconst borrowsQuery = gql`\n\tquery borrowsQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tborrows(orderBy: date, orderDirection: asc, first: $pageLength, skip: $skip, where: { date_gt: $dateGreaterThan }) {\n\t\t\tid\n\t\t\tuserMarket {\n\t\t\t\tmarket {\n\t\t\t\t\tunderlyingSymbol\n\t\t\t\t\tcreationBlockNumber\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t\tunderlyingAmount\n\t\t\tdate\n\t\t}\n\t}\n`;\n\nconst repayBorrowsQuery = gql`\n\tquery repayBorrowsQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\trepayBorrows(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\tid\n\t\t\tuserMarket {\n\t\t\t\tmarket {\n\t\t\t\t\tunderlyingSymbol\n\t\t\t\t\tcreationBlockNumber\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t\tunderlyingAmount\n\t\t\tdate\n\t\t}\n\t}\n`;\n\n// Alias fields so the outputs follows that of the above\nconst liquidationsQuery = gql`\n\tquery liquidationsQuery($skip: Int!, $pageLength: Int!, $dateGreaterThan: Int!) {\n\t\tliquidations(\n\t\t\torderBy: date\n\t\t\torderDirection: asc\n\t\t\tfirst: $pageLength\n\t\t\tskip: $skip\n\t\t\twhere: { date_gt: $dateGreaterThan }\n\t\t) {\n\t\t\tid\n\t\t\tuserMarket: borrowerUserLiquidationMarket {\n\t\t\t\tmarket {\n\t\t\t\t\tunderlyingSymbol\n\t\t\t\t\tcreationBlockNumber\n\t\t\t\t}\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t\tunderlyingAmount: repayAmount\n\t\t\tdate\n\t\t}\n\t}\n`;\n\n/**\n * Helper to perform\n * @param query the query to perform\n * @param key the key to use to get to the data (marketWeekDatas, marketDayDatas or marketHourDatas)\n * @param dateGreaterThan only take data with the date in seconds since unix epooch greater than this\n * @param transactionType the type of the transaction being paganated\n * @return the formatted query results, the last entry of the results is the most recent values\n */\nasync function performPagenationRequest(\n\tquery: DocumentNode,\n\tkey: string,\n\tdateGreaterThan: number,\n\ttransactionType: TransactionType\n): Transaction[] {\n\tconst outputData: Transaction[] = [];\n\n\tlet allFound = false;\n\tlet skip = 0;\n\n\t// Pagenation of requests\n\twhile (!allFound) {\n\t\tconst data = await compoundInfoSubgraphClient.query({\n\t\t\tquery: query,\n\t\t\tvariables: {\n\t\t\t\tid: PROTOCOL_ID,\n\t\t\t\tskip: skip,\n\t\t\t\tpageLength: PAGE_LENGTH,\n\t\t\t\tdateGreaterThan: dateGreaterThan,\n\t\t\t},\n\t\t});\n\n\t\tconst transactionData = data.data[key];\n\n\t\tconst len = transactionData.length;\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst tokenSymbol = transactionData[i].userMarket.market.underlyingSymbol;\n\n\t\t\tif (tokenSymbol in Token) {\n\t\t\t\tconst entry: Transaction = {\n\t\t\t\t\ttype: transactionType,\n\t\t\t\t\ttoken: tokenSymbol,\n\t\t\t\t\thash: transactionData[i].id,\n\t\t\t\t\ttokenAmount: Number(transactionData[i].underlyingAmount),\n\t\t\t\t\taccount: transactionData[i].userMarket.user.id,\n\t\t\t\t\ttime: Number(transactionData[i].date),\n\t\t\t\t};\n\n\t\t\t\toutputData.push(entry);\n\t\t\t}\n\t\t}\n\n\t\t// If less than PAGE_LENGTH results were returned we found everything\n\t\tallFound = len !== PAGE_LENGTH;\n\t\tskip += PAGE_LENGTH;\n\t}\n\n\treturn outputData;\n}\n\nexport type ProtocolSummaryRequestResult = {\n\tprotocolWeekDatas: ProtocolHistoricalData[];\n};\n\n/**\n * Perform request for transaction data for all markets in the last 3 days\n * @returns list of all transactions in the last 3 days sorted with the newest transaction first\n */\nexport async function requestTransactionData(): Promise<Transaction[]> {\n\tconsole.log(\"Performing request: transaction data\");\n\n\tconst now = Math.round(Date.now() / 1000); // Unix timestamp in seconds\n\tconst dateGraterThan = now - TRANSACTIONS_WITHIN_DAYS * 24 * 60 * 60; // Last 2 days\n\n\tconst mints = await performPagenationRequest(mintsQuery, \"mints\", dateGraterThan, TransactionType.MINT);\n\tconst redeems = await performPagenationRequest(redeemsQuery, \"redeems\", dateGraterThan, TransactionType.REDEEM);\n\tconst borrows = await performPagenationRequest(borrowsQuery, \"borrows\", dateGraterThan, TransactionType.BORROW);\n\tconst repayBorrows = await performPagenationRequest(\n\t\trepayBorrowsQuery,\n\t\t\"repayBorrows\",\n\t\tdateGraterThan,\n\t\tTransactionType.REPAY_BORROW\n\t);\n\tconst liquidations = await performPagenationRequest(\n\t\tliquidationsQuery,\n\t\t\"liquidations\",\n\t\tdateGraterThan,\n\t\tTransactionType.LIQUIDATION\n\t);\n\n\t// console.log(mints);\n\t// console.log(redeems);\n\t// console.log(borrows);\n\t// console.log(repayBorrows);\n\t// console.log(liquidations);\n\n\tconst transactionData = [...mints, ...redeems, ...borrows, ...repayBorrows, ...liquidations];\n\n\t// Sort based on time\n\ttransactionData.sort((a, b) => {\n\t\treturn b.time - a.time;\n\t});\n\n\treturn transactionData;\n}\n","// @ts-nocheck\nimport { compoundInfoSubgraphClient } from \"data/apollo\";\nimport { gql } from \"@apollo/client\";\n\nimport { UserDominanceData } from \"common/types\";\nimport { Token, TransactionType, UserType } from \"common/enums\";\nimport { NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE } from \"common/constants\";\n\nconst PAGE_LENGTH = 1000;\n\nconst userDominanceSingleMarketQuery = gql`\n\tquery userDominanceSingleMarketQuery($skip: Int!, $pageLength: Int!, $numTop: Int!, $marketSymbol: String!) {\n\t\tmarkets(where: { underlyingSymbol: $marketSymbol }, first: $pageLength) {\n\t\t\tunderlyingSymbol\n\t\t\ttopSupplierUserMarkets: userMarkets(orderBy: totalSupply, orderDirection: desc, first: $numTop, skip: $skip) {\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\ttotalSupply\n\t\t\t}\n\t\t\ttopBorrowerUserMarkets: userMarkets(orderBy: totalBorrow, orderDirection: desc, first: $numTop, skip: $skip) {\n\t\t\t\tuser {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\ttotalBorrow\n\t\t\t}\n\t\t}\n\t}\n`;\n\n/**\n * Helper to perform\n * @param query the query to perform\n * @param key the key to use to get to the data (marketWeekDatas, marketDayDatas or marketHourDatas)\n * @param token the token to get the user dominance info for\n * @return the formatted query results, the last entry of the results is the most recent values\n */\nasync function performPagenationRequest(query: DocumentNode, key: string, token: Token): UserDominanceData {\n\tconst outputData: UserDominanceData = {\n\t\t[UserType.SUPPLIER]: [],\n\t\t[UserType.BORROWER]: [],\n\t};\n\n\tlet allFound = false;\n\tlet skip = 0;\n\n\t// Pagenation of requests\n\twhile (!allFound) {\n\t\tlet data = await compoundInfoSubgraphClient.query({\n\t\t\tquery: query,\n\t\t\tvariables: {\n\t\t\t\tskip: skip,\n\t\t\t\tpageLength: PAGE_LENGTH,\n\t\t\t\tnumTop: Math.min(PAGE_LENGTH, NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE), // 1000 is max\n\t\t\t\tmarketSymbol: token,\n\t\t\t},\n\t\t});\n\n\t\tdata = data.data[key][0];\n\t\tconst topSupplierUserMarkets = data.topSupplierUserMarkets;\n\t\tconst topBorrowerUserMarkets = data.topBorrowerUserMarkets;\n\t\tconst len = Math.max(topSupplierUserMarkets.length, topBorrowerUserMarkets.length);\n\n\t\tfor (let i = 0; i < topSupplierUserMarkets.length; i++) {\n\t\t\tconst entry: UserDominanceDataEntry = {\n\t\t\t\taccount: topSupplierUserMarkets[i].user.id,\n\t\t\t\tunderlyingAmount: topSupplierUserMarkets[i].totalSupply,\n\t\t\t\tpercentDominance: 0, // Not populated in this request\n\t\t\t};\n\t\t\toutputData[UserType.SUPPLIER].push(entry);\n\t\t}\n\n\t\tfor (let i = 0; i < topBorrowerUserMarkets.length; i++) {\n\t\t\tconst entry: UserDominanceDataEntry = {\n\t\t\t\taccount: topBorrowerUserMarkets[i].user.id,\n\t\t\t\tunderlyingAmount: topBorrowerUserMarkets[i].totalBorrow,\n\t\t\t\tpercentDominance: 0, // Not populated in this request\n\t\t\t};\n\t\t\toutputData[UserType.BORROWER].push(entry);\n\t\t}\n\n\t\t// If less than PAGE_LENGTH results were returned we found everything\n\t\tallFound = len !== PAGE_LENGTH || skip > NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE;\n\t\tskip += PAGE_LENGTH;\n\t}\n\n\treturn outputData;\n}\n\n/**\n * Perform request for user dominance data for all markets\n * @param token the token to get the dominance data for\n * @returns user dominance data for the token market\n */\nexport async function requestUserDominanceData(token: Token): Promise<UserDominanceData> {\n\tconsole.log(\"Performing request: user dominance data\");\n\n\tconst userDominanceData = await performPagenationRequest(userDominanceSingleMarketQuery, \"markets\", token);\n\n\treturn userDominanceData;\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { useState, useEffect } from \"react\";\n\nimport {\n\tDataResolution,\n\tDataType,\n\tMarketDataSelector,\n\tProtocolDataSelector,\n\tTimeSelector,\n\tToken,\n\tUserType,\n} from \"common/enums\";\nimport { useGlobalStore } from \"data/store\";\n\nimport {\n\tMarketSummaryData,\n\tMarketSummaryDataDict,\n\tProtocolSummaryData,\n\tProtocolHistoricalData,\n\tMarketHistoricalData,\n\tMarketHistoricalDataEntry,\n\tUserDominanceData,\n} from \"common/types\";\nimport { requestProtocolSummaryData } from \"data/requests/protocolSummaryData\";\nimport { requestProtocolHistoricalData } from \"data/requests/protocolHistoricalData\";\nimport { requestMarketSummaryData } from \"data/requests/marketSummaryData\";\nimport { requestMarketHistoricalData } from \"data/requests/marketHistoricalData\";\nimport { DATA_BEHIND_TIME_THRESHOLD_S, TIME_SELECTOR_INFO } from \"common/constants\";\nimport { requestTransactionData } from \"./requests/transactionData\";\nimport { requestUserDominanceData } from \"./requests/userDominanceData\";\n\nconst protocolSummaryDataKey = \"protocolSummaryData\";\nconst protocolHistoricalDataKey = \"protocolHistoricalData\";\nconst marketSummaryDataKey = \"marketSummaryData\";\nconst marketHistoricalDataKey = \"marketHistoricalData\";\nconst transactionDataKey = \"transactionData\";\nconst userDominanceDataBaseKey = \"userDominanceData\";\n\nexport function useProtocolSummaryData(): ProtocolSummaryData | undefined {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tconst data = store[protocolSummaryDataKey];\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data) {\n\t\t\t\tconst data = await requestProtocolSummaryData();\n\t\t\t\tupdateStore(protocolSummaryDataKey, data);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore]);\n\n\treturn data;\n}\n\n/**\n * Hook to get protocol historical data, the resolution is fixed to weekly\n * @param dataSelector data type to get the data for\n * @returns protocol historical data, [{date: number, value: number}]\n */\nfunction useProtocolHistoricalData(dataSelector: ProtocolDataSelector): ProtocolHistoricalData[] {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tconst data = store[protocolHistoricalDataKey];\n\n\tconst protocolSummaryData = useProtocolSummaryData();\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data && protocolSummaryData) {\n\t\t\t\tconst data = await requestProtocolHistoricalData();\n\n\t\t\t\tconst now = Math.round(Date.now() / 1000); // Unix timestamp in seconds\n\t\t\t\tconst lastEntey = {\n\t\t\t\t\tdate: now,\n\t\t\t\t\ttotalSupplyUsd: Number(protocolSummaryData.totalSupplyUsd),\n\t\t\t\t\ttotalBorrowUsd: Number(protocolSummaryData.totalBorrowUsd),\n\t\t\t\t\ttotalReservesUsd: Number(protocolSummaryData.totalReservesUsd),\n\t\t\t\t\tutilization: Number(protocolSummaryData.utilization),\n\t\t\t\t};\n\n\t\t\t\tdata.push(lastEntey); // Tack on most recent data\n\n\t\t\t\tupdateStore(protocolHistoricalDataKey, data);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore, protocolSummaryData]);\n\n\tlet queriedData = [];\n\tif (data) {\n\t\t// Get the correct data type\n\t\tqueriedData = data.map((entry) => {\n\t\t\treturn { date: entry.date, value: entry[dataSelector] };\n\t\t});\n\t}\n\n\treturn queriedData;\n}\n\n/**\n * Hook to get market summary data for a token, or all tokens if no underlyingToken is passed\n * @param token the underlying token of the market the summary data is wanted for\n * @returns summary data for the market with the underlyingToken or undefined if there is not data for that token\n * \t\t\tif no underlyingToken is specified, a list of all marketSummaryData is returned\n */\nexport function useMarketSummaryData(underlyingToken?: Token): MarketSummaryData | undefined | MarketSummaryData[] {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tlet data = store[marketSummaryDataKey];\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data) {\n\t\t\t\tconst allSummaryData = await requestMarketSummaryData();\n\t\t\t\tupdateStore(marketSummaryDataKey, allSummaryData);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore]);\n\n\tif (data && !!underlyingToken) {\n\t\tdata = data.filter((entry) => entry.underlyingSymbol == underlyingToken);\n\t\tif (data.length === 0) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn data[0];\n\t\t}\n\t}\n\n\treturn data;\n}\n\n/**\n * Hook to get historical market data for the time and data selected\n * @param timeSelector time frame to get the data for, the resolution is derived from this\n * @param dataSelector data type to get the data for\n * @returns market historical data for the time frame (and corresponding resoltuion), and data type selected\n */\nfunction useMarketHistoricalData(\n\ttimeSelector: TimeSelector,\n\tdataSelector: MarketDataSelector\n): Record<Token, number>[] {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tconst data = store[marketHistoricalDataKey];\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data) {\n\t\t\t\tconst data = await requestMarketHistoricalData();\n\t\t\t\tupdateStore(marketHistoricalDataKey, data);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore]);\n\n\tlet queriedData = [];\n\tif (data) {\n\t\t// Get the correct resolution\n\t\tconst resolution = TIME_SELECTOR_INFO[timeSelector].resolution;\n\t\tqueriedData = data[resolution];\n\n\t\t// Get the correct data type\n\t\tqueriedData = queriedData.map((entry) => entry[dataSelector]);\n\n\t\t// Filter on time\n\t\tconst days = TIME_SELECTOR_INFO[timeSelector].days;\n\n\t\t// undefined if ALL so don't filter if thats the case\n\t\tif (days) {\n\t\t\tconst filterSecs = days * 24 * 60 * 60;\n\t\t\tconst nowSec = parseInt(new Date() / 1000);\n\t\t\tconst cutoffSecs = nowSec - filterSecs;\n\t\t\tqueriedData = queriedData.filter((entry) => {\n\t\t\t\treturn entry.date > cutoffSecs;\n\t\t\t});\n\t\t}\n\t}\n\n\treturn queriedData;\n}\n\n/**\n * General hook to use market or protocol historical data bsed on the data selector type\n * @param historicalDataType type of the data selector, this determines the source to use\n * @param timeSelector time frame to get the data for, the resolution is derived from this, currently ignored if the type is protocol\n * @param dataSelector data type to get the data for, this must match the data type\n * @returns market or protocol historical data for the time frame (and corresponding resoltuion), and data type selected\n */\nexport function useHistoricalData(\n\tdataType: DataType,\n\ttimeSelector: TimeSelector,\n\tdataSelector: MarketDataSelector\n): Record<string, number>[] {\n\tconst protocolHistoricalData = useProtocolHistoricalData(dataSelector);\n\tconst marketHistoricalData = useMarketHistoricalData(timeSelector, dataSelector);\n\n\treturn DataType.PROTOCOL === dataType ? protocolHistoricalData : marketHistoricalData;\n}\n\n/**\n * Hook to get transaction data\n * @param token the token market the transactiond data is wanted for\n * @param transactionType the type of transaction to filter for, all types will be returned if none is specified\n * @returns list of transactions for the specified market\n */\nexport function useTransactionData(token: Token, transactionType?: TransactionType): Transaction[] | undefined {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tconst data = store[transactionDataKey];\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data) {\n\t\t\t\tconst data = await requestTransactionData();\n\t\t\t\tupdateStore(transactionDataKey, data);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore]);\n\n\tlet queriedData = [];\n\tif (data) {\n\t\t// Get the correct data type\n\t\tqueriedData = data.filter((transaction: Transaction) => {\n\t\t\t{\n\t\t\t\tconst correctToken = transaction.token === token; // Filter for token\n\t\t\t\tconst correctTransactionType = transactionType ? transaction.type === transactionType : true; // Filter for transaction type\n\t\t\t\treturn correctToken && correctTransactionType;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data ? queriedData : undefined;\n}\n\n/**\n * Hook to get user dominance data\n * @param token the token to get the data for\n * @returns user dominance data for the token\n */\nexport function useUserDominanceData(token: Token): UserDominanceData {\n\tconst [store, { updateStore }] = useGlobalStore();\n\tconst key = userDominanceDataBaseKey + token;\n\tconst data = store[key];\n\n\tconst marketSummaryData = useMarketSummaryData(token);\n\tlet marketTotalSupply = undefined;\n\tlet marketTotalBorrow = undefined;\n\n\tif (marketSummaryData && !Array.isArray(marketSummaryData)) {\n\t\tmarketTotalSupply = marketSummaryData.totalSupply;\n\t\tmarketTotalBorrow = marketSummaryData.totalBorrow;\n\t}\n\n\tuseEffect(() => {\n\t\tasync function checkForData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tif (!data && marketTotalSupply !== undefined && marketTotalBorrow !== undefined) {\n\t\t\t\tconst data = await requestUserDominanceData(token);\n\n\t\t\t\t// Compute percent dominances\n\t\t\t\tfor (let i = 0; i < data[UserType.SUPPLIER].length; i++) {\n\t\t\t\t\tdata[UserType.SUPPLIER][i].percentDominance = data[UserType.SUPPLIER][i].underlyingAmount / marketTotalSupply;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < data[UserType.BORROWER].length; i++) {\n\t\t\t\t\tdata[UserType.BORROWER][i].percentDominance = data[UserType.BORROWER][i].underlyingAmount / marketTotalBorrow;\n\t\t\t\t}\n\n\t\t\t\tupdateStore(key, data);\n\t\t\t}\n\t\t}\n\n\t\tcheckForData();\n\t}, [data, updateStore, token, marketTotalBorrow, marketTotalSupply]);\n\n\treturn data ?? { [UserType.SUPPLIER]: [], [UserType.BORROWER]: [] };\n}\n\nexport function useDataStatus(): { dataError: boolean; lastSyncedDate: number } {\n\tconst [store, { _ }] = useGlobalStore();\n\tconst marketHistoricalDataKey = \"marketHistoricalData\";\n\tconst marketHistoricalData = store[marketHistoricalDataKey];\n\tlet dataMissing = false;\n\tlet dataBehind = false;\n\tlet lastSyncedDate = 0;\n\n\tif (!!marketHistoricalData) {\n\t\tconst weekData = marketHistoricalData[DataResolution.WEEK];\n\t\tconst dayData = marketHistoricalData[DataResolution.DAY];\n\t\tconst hourData = marketHistoricalData[DataResolution.HOUR];\n\n\t\tdataMissing = weekData.length === 0 || dayData.length === 0 || hourData.length === 0;\n\n\t\tconst weekLatestDate = weekData.length > 0 ? weekData[weekData.length - 1].supplyApy.date : 0;\n\t\tconst dayLatestDate = dayData.length > 0 ? dayData[dayData.length - 1].supplyApy.date : 0;\n\t\tconst hourLatestDate = hourData.length > 0 ? hourData[hourData.length - 1].supplyApy.date : 0;\n\n\t\tlastSyncedDate = Math.max(weekLatestDate, dayLatestDate, hourLatestDate);\n\n\t\tconst now = new Date() / 1000; // in sec since unix epoche\n\t\tif (DATA_BEHIND_TIME_THRESHOLD_S < now - lastSyncedDate) {\n\t\t\tdataBehind = true;\n\t\t}\n\t}\n\n\treturn { dataError: dataMissing || dataBehind, lastSyncedDate: lastSyncedDate };\n}\n\n/**\n * Trigger all fetches the first time this is called\n */\nexport function usePrefetchData() {\n\tconst [_, { updateStore }] = useGlobalStore();\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\t// Fetch the data if it hasn't been fetched already\n\t\t\tconst protocolSummaryData = await requestProtocolSummaryData();\n\t\t\tupdateStore(protocolSummaryDataKey, protocolSummaryData);\n\n\t\t\tconst protocolHistoricalData = await requestProtocolHistoricalData();\n\t\t\tconst now = Math.round(Date.now() / 1000); // Unix timestamp in seconds\n\t\t\tconst lastEntey = {\n\t\t\t\tdate: now,\n\t\t\t\ttotalSupplyUsd: Number(protocolSummaryData.totalSupplyUsd),\n\t\t\t\ttotalBorrowUsd: Number(protocolSummaryData.totalBorrowUsd),\n\t\t\t\ttotalReservesUsd: Number(protocolSummaryData.totalReservesUsd),\n\t\t\t\tutilization: Number(protocolSummaryData.utilization),\n\t\t\t};\n\t\t\tprotocolHistoricalData.push(lastEntey); // Tack on most recent data\n\t\t\tupdateStore(protocolHistoricalDataKey, protocolHistoricalData);\n\n\t\t\tconst marketSummaryData = await requestMarketSummaryData();\n\t\t\tupdateStore(marketSummaryDataKey, marketSummaryData);\n\n\t\t\tconst marketHistoricalData = await requestMarketHistoricalData();\n\t\t\tupdateStore(marketHistoricalDataKey, marketHistoricalData);\n\t\t}\n\n\t\tfetchData();\n\t}, []);\n}\n","import React from \"react\";\nimport styled, { css, createGlobalStyle, ThemeProvider, DefaultTheme, ThemedCssFunction } from \"styled-components\";\n\nimport { colors_S } from \"theme/styled\";\n\n// Media queries\nexport const mediaQuerySizes = {\n\textraSmall: 575,\n\tsmall: 960,\n\tlarge: 1280,\n};\n\nconst mediaQueries: { [width in keyof typeof mediaQuerySizes]: typeof css } = Object.keys(mediaQuerySizes).reduce(\n\t(accumulator, size) => {\n\t\t(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n\t\t\t@media (max-width: ${(mediaQuerySizes as any)[size]}px) {\n\t\t\t\t${css(a, b, c)}\n\t\t\t}\n\t\t`;\n\t\treturn accumulator;\n\t},\n\t{}\n) as any;\n\n// General theme\nexport function theme(darkMode: boolean): DefaultTheme {\n\treturn {\n\t\tcolor: {\n\t\t\twhite: \"#FFFFFF\",\n\t\t\tblack: \"#000000\",\n\n\t\t\tbg0: darkMode ? \"#171519\" : \"#FFFFFF\",\n\t\t\tbg1: darkMode ? \"#212024\" : \"#FFFFFF\",\n\t\t\tbg2: darkMode ? \"#302F36\" : \"#FFFFFF\",\n\t\t\tbg3: darkMode ? \"#4E4B57\" : \"#FFFFFF\",\n\t\t\tbg4: darkMode ? \"#A8A7AD\" : \"#FFFFFF\",\n\t\t\tbg5: darkMode ? \"#FFFFFF\" : \"#FFFFFF\",\n\n\t\t\ttext1: darkMode ? \"#FFFFFF\" : \"#212B36\",\n\t\t\ttext2: darkMode ? \"#A8A7AD\" : \"#586069\",\n\t\t\ttext3: darkMode ? \"#605C6C\" : \"#586069\",\n\n\t\t\tprimary1: darkMode ? \"#00CD9C\" : \"#0366D6\",\n\t\t\tsecondary1: darkMode ? \"rgba(0, 205, 156, 0.10)\" : \"#0366D6\",\n\n\t\t\tborder1: darkMode ? \"#272B31\" : \"#DEDFE1\",\n\t\t\tborder2: darkMode ? \"#313131\" : \"#DEDFE1\",\n\n\t\t\tlinkInternal: darkMode ? \"#00CD8F\" : \"#0095D5\",\n\t\t\tlinkExternal: darkMode ? \"#808994\" : \"#586069\",\n\n\t\t\twarning1: \"#E1E15B\",\n\t\t\twarning2: \"#27291D\",\n\n\t\t\t// The colors used for coin selection, and chart lines, these will only be this many allowed selected at a time, first is used as base color for charts and progress bar\n\t\t\tlineChartColors: darkMode\n\t\t\t\t? [\"#00CD8F\", \"#885FB1\", \"#0095D5\", \"#F9A234\", \"#FF7EA8\"]\n\t\t\t\t: [\"#00CD8F\", \"#885FB1\", \"#0095D5\", \"#F9A234\", \"#FF7EA8\"],\n\t\t},\n\n\t\tborder: {\n\t\t\tthickness: \"1px\",\n\t\t},\n\n\t\tradius: {\n\t\t\txs: \"4px\",\n\t\t\tsm: \"8px\",\n\t\t\tmd: \"12px\",\n\t\t\tlg: \"16px\",\n\t\t},\n\n\t\tmediaWidth: mediaQueries,\n\n\t\tspacing: {\n\t\t\tnone: \"none\",\n\t\t\txxs: \"4px\",\n\t\t\txs: \"8px\",\n\t\t\tsm: \"12px\",\n\t\t\tmd: \"16px\",\n\t\t\tlg: \"24px\",\n\t\t\txl: \"40px\",\n\t\t\txxl: \"60px\",\n\t\t},\n\n\t\tshadow: {\n\t\t\tnone: \"none\",\n\t\t\tcard: \"0px 10px 10px rgba(0, 0, 0, 0.1), inset 0px 1px 6px rgba(255, 255, 255, 0.05);\",\n\t\t},\n\t};\n}\n\n// Typography theme\nconst StyledText = styled.div<{\n\tcolor: keyof colors_S;\n\tfontSize: number;\n\tfontWeight: number;\n\tlineHeight: number;\n\tuseDefaultLineHeight?: boolean;\n}>`\n\tcolor: ${({ color, theme }) => color ?? theme.color[\"text1\"]};\n\tfont-size: ${({ fontSize }) => fontSize}px;\n\tfont-weight: ${({ fontWeight }) => fontWeight};\n\tline-height: ${({ lineHeight, useDefaultLineHeight }) => (useDefaultLineHeight ? \"auto\" : lineHeight + \"px\")};\n`;\n\nexport const Typography = {\n\tdisplayXL(props: any) {\n\t\treturn <StyledText fontSize={42} fontWeight={600} lineHeight={44} {...props} />;\n\t},\n\tdisplayL(props: any) {\n\t\treturn <StyledText fontSize={28} fontWeight={600} lineHeight={32} {...props} />;\n\t},\n\tdisplayM(props: any) {\n\t\treturn <StyledText fontSize={26} fontWeight={600} lineHeight={32} {...props} />;\n\t},\n\tdisplayS(props: any) {\n\t\treturn <StyledText fontSize={20} fontWeight={600} lineHeight={28} {...props} />;\n\t},\n\theader(props: any) {\n\t\treturn <StyledText fontSize={16} fontWeight={500} lineHeight={24} {...props} />;\n\t},\n\tsubheader(props: any) {\n\t\treturn <StyledText fontSize={14} fontWeight={400} lineHeight={28} {...props} />;\n\t},\n\tbody(props: any) {\n\t\treturn <StyledText fontSize={16} fontWeight={400} lineHeight={24} {...props} />;\n\t},\n\tcaption(props: any) {\n\t\treturn <StyledText fontSize={14} fontWeight={400} lineHeight={20} {...props} />;\n\t},\n};\n\n// Everything that is child of theme, gets theme as its props, so it can be used everywhere\nexport default function Theme({ darkMode, children }: { darkMode: boolean; children: any }) {\n\treturn <ThemeProvider theme={theme(darkMode)}>{children}</ThemeProvider>;\n}\n\n// Fonts are imported in index.html\nexport const GlobalStyle = createGlobalStyle`\n\thtml, div {\n\t\tfont-family: 'Inter', sans-serif;\n\t}\n\n\thtml, body, #root {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-weight: 400;\n\t\tcolor: ${({ theme }) => theme.color.text1};\n\t\t-webkit-font-smoothing: antialiased;\n  \t\t-moz-osx-font-smoothing: grayscale;\n\t\tbackground: \n\t\t\tradial-gradient(100% 30% at 100% 0%, rgba(173, 0, 255, 0.1) 0%, rgba(27, 25, 29, 0) 100%), \n\t\t\tradial-gradient(100% 30% at 0% 0%, rgba(0, 255, 194, 0.1) 0%, rgba(27, 25, 29, 0) 100%);\n\t\tbackground-color: ${({ theme }) => theme.color.bg0};\n\t\tbackground-repeat: no-repeat;\n\t}\n\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.hidden {\n\t\topacity: 0;\n\t}\n\n\ta {\n\t\tcolor: ${({ theme }) => theme.color.linkInternal}\n\t}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Row = styled.div<{\n\twidth?: string;\n\theight?: string;\n\tjustify?: string;\n\talign?: string;\n\tborder?: string;\n\tborderRadius?: string;\n\tmargin?: string;\n\tpadding?: string;\n\tgap?: string;\n\tflex?: number;\n\toverflow?: string;\n\torder?: string;\n}>`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\twidth: ${({ width }) => width ?? \"100%\"};\n\theight: ${({ height }) => height ?? \"\"};\n\tjustify-content: ${({ justify }) => justify ?? \"flex-start\"};\n\talign-items: ${({ align }) => align ?? \"center\"};\n\tpadding: ${({ padding }) => padding ?? \"0\"};\n\tborder: ${({ border }) => border};\n\tborder-radius: ${({ borderRadius }) => borderRadius};\n\tmargin: ${({ margin }) => margin ?? \"0\"};\n\tcolumn-gap: ${({ gap, theme }) => gap ?? theme.spacing.xs};\n\trow-gap: ${({ gap, theme }) => gap ?? theme.spacing.xs};\n\tflex: ${({ flex }) => flex ?? 1};\n\toverflow: ${({ overflow }) => overflow ?? \"hidden\"};\n`;\n\nexport const ScrollRow = styled(Row)`\n\twidth: 100%;\n\theight: 100%;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tscroll-behavior: smooth;\n\tscrollbar-width: none;\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const ResponsiveRow = styled(Row)<{\n\txs?: boolean;\n\treverse?: boolean;\n\tgapSmall?: string;\n}>`\n\tjustify-content: space-between;\n\t${({ theme, xs, reverse, gapSmall }) =>\n\t\txs\n\t\t\t? theme.mediaWidth.extraSmall`\n\t\t\t\tflex-direction: ${reverse ? \"column-reverse\" : \"column\"};\n\t\t\t\trow-gap: ${gapSmall ?? theme.spacing.xs};\n\t\t\t\tcolumn-gap: ${gapSmall ?? theme.spacing.xs};\n\t\t\t`\n\t\t\t: theme.mediaWidth.small`\n\t\t\t\tflex-direction: ${reverse ? \"column-reverse\" : \"column\"};\n\t\t\t\trow-gap: ${gapSmall ?? theme.spacing.xs};\n\t\t\t\tcolumn-gap: ${gapSmall ?? theme.spacing.xs};\n\t\t\t`}\n`;\n\n// Changes justification of content upon resize\nexport const ResponsiveJustifyRow = styled(Row)<{\n\tjustifyLarge?: string;\n\tjustifySmall?: string;\n\tjustifyExtraSmall?: string;\n}>`\n\tjustify-content: ${({ justifyLarge }) => justifyLarge ?? \"flex-start\"};\n\t${({ theme, justifySmall }) => theme.mediaWidth.small`\n\t\tjustify-content: ${justifySmall ?? \"flex-start\"};\n\t`}\n\t${({ theme, justifyExtraSmall, justifySmall }) => theme.mediaWidth.extraSmall`\n\t\tjustify-content: ${justifyExtraSmall ?? justifySmall ?? \"flex-start\"};\n\t`}\n`;\n\nexport default Row;\n","import styled from \"styled-components\";\nimport Row from \"components/Row\";\n\nconst Column = styled(Row)`\n\tflex-direction: column;\n`;\n\nexport default Column;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Column from \"components/Column\";\n\nconst SvgContainer = styled.svg<{\n\tsize: number;\n}>`\n\theight: ${({ size }) => size}px;\n\twidth: ${({ size }) => size}px;\n\ttransform: rotate(-90deg);\n`;\n\nconst BackCircle = styled.circle<{\n\tr: number;\n\tstrokeWidth: number;\n\tcircumference: number;\n\tvalue: number;\n}>`\n\tstroke: ${({ theme }) => theme.color.secondary1};\n\tr: ${({ r }) => r}px;\n\tcx: 50%;\n\tcy: 50%;\n\tfill: none;\n\tstroke-width: ${({ strokeWidth }) => strokeWidth};\n\tstroke-dasharray: ${({ circumference }) => circumference};\n\tstroke-dashoffset: ${({ circumference, value }) => circumference * (1 - value)};\n`;\n\nconst ProgressCircle = styled(BackCircle)`\n\tstroke: ${({ theme }) => theme.color.lineChartColors[0]};\n`;\n\n// Value from 0 to 1\nexport default function ProgressRing({ size, value }: { size: number; value: number }): JSX.Element {\n\tconst strokeWidth = 8; //px\n\tconst r = size / 2 - strokeWidth;\n\tconst circumference = Math.PI * 2 * r;\n\treturn (\n\t\t<Column justify=\"center\" align=\"flex-end\">\n\t\t\t<SvgContainer size={size}>\n\t\t\t\t<BackCircle r={r} strokeWidth={strokeWidth} circumference={circumference} value={1} />\n\t\t\t\t<ProgressCircle r={r} strokeWidth={strokeWidth} circumference={circumference} value={Math.min(value, 1)} />\n\t\t\t</SvgContainer>\n\t\t</Column>\n\t);\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Portal from \"@reach/portal\";\nimport { usePopper } from \"react-popper\";\n\nimport { Typography } from \"theme\";\n\nconst Tooltip = styled.div`\n\tdisplay: ${({ show }) => (show ? \"flex\" : \"none\")};\n\tbackground-color: ${({ theme }) => theme.color.bg2};\n\tborder: solid ${({ theme }) => theme.border.thickness + \" \" + theme.color.bg3};\n\tborder-radius: ${({ theme }) => theme.radius.lg};\n\tpadding: ${({ theme }) => theme.spacing.md};\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n\tz-index: 9999;\n`;\n\nconst TooltipContainer = styled(Typography.caption)`\n\tcolor: ${({ theme }) => theme.color.text2};\n\tmax-width: 320px;\n`;\n\nconst ReferenceElement = styled.div`\n\tdisplay: inline-block;\n\tborder-bottom: dotted 2px;\n\tborder-color: ${({ active, theme }) => (active ? theme.color.white : theme.color.bg3)};\n\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst ReferenceText = styled(Typography.caption)`\n\tcolor: ${({ theme }) => theme.color.text2};\n`;\n\nexport default function TooltipText({ baseText, tooltipContent }) {\n\tconst [referenceElement, setReferenceElement] = useState(null);\n\tconst [popperElement, setPopperElement] = useState(null);\n\tconst [arrowElement, setArrowElement] = useState(null);\n\tconst { styles, attributes, update } = usePopper(referenceElement, popperElement, {\n\t\tplacement: \"auto\",\n\t\tstrategy: \"fixed\",\n\t\tmodifiers: [{ name: \"offset\", options: { offset: [0, 10] } }],\n\t});\n\tconst [show, setShow] = useState(false);\n\n\tconst open = useCallback(() => {\n\t\tupdate();\n\t\tsetShow(true);\n\t}, [setShow, update]);\n\n\tconst close = useCallback(() => setShow(false), [setShow]);\n\n\treturn (\n\t\t<>\n\t\t\t<ReferenceElement ref={setReferenceElement} active={show} onClick={open} onMouseEnter={open} onMouseLeave={close}>\n\t\t\t\t{baseText}\n\t\t\t</ReferenceElement>\n\t\t\t<Portal>\n\t\t\t\t<Tooltip ref={setPopperElement} style={styles.popper} show={show} {...attributes.popper}>\n\t\t\t\t\t<TooltipContainer>{tooltipContent}</TooltipContainer>\n\t\t\t\t</Tooltip>\n\t\t\t</Portal>\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled.a`\n\ttext-decoration: none;\n`;\n\n// React router Link with style\nexport const StyledInternalLink = styled(Link)`\n\ttext-decoration: none;\n\tcolor: ${({ theme }) => theme.color.linkInternal};\n`;\n\nconst StyledExternalLinkWrapper = styled.a<{\n\tvariant?: string;\n}>`\n\ttext-decoration: none;\n\tcolor: ${({ theme }) => theme.color.primary1};\n\t:hover {\n\t\topacity: 0.8;\n\t}\n\n\t${({ variant, theme }) =>\n\t\tvariant == \"secondary\" &&\n\t\tcss`\n\t\t\tcolor: ${theme.color.linkExternal};\n\t\t\t:hover {\n\t\t\t\tcolor: ${({ theme }) => theme.color.primary1};\n\t\t\t}\n\t\t`}\n`;\n\nexport function StyledExternalLink({ href, variant, children }: { href: string; variant?: string; children: any }) {\n\treturn (\n\t\t<StyledExternalLinkWrapper target=\"_blank\" href={href} variant={variant}>\n\t\t\t{children}\n\t\t</StyledExternalLinkWrapper>\n\t);\n}\n\nconst StyledExternalInfoLinkWrapper = styled.a`\n\ttext-decoration: none;\n\tcolor: ${({ theme }) => theme.color.linkInternal};\n\t:hover {\n\t\topacity: 0.8;\n\t}\n\ta:active {\n\t\ttext-decoration: none;\n\t}\n`;\n\nexport function StyledExternalInfoLink({ href, content }: { href: string; content: any }) {\n\treturn (\n\t\t<StyledExternalInfoLinkWrapper target=\"_blank\" href={href}>\n\t\t\t{content}\n\t\t</StyledExternalInfoLinkWrapper>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport styled, { css, keyframes, useTheme } from \"styled-components\";\n\nimport Row from \"components/Row\";\nimport Column from \"components/Column\";\n\nconst shimmer = keyframes`\n    0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst SkeletonWrapper = styled.div<{\n\theight?: string;\n\twidth?: string;\n\t$variant?: string;\n\tborderRadius?: string;\n}>`\n\tbackground: ${({ theme }) => theme.color.bg2};\n\tborder-radius: ${({ theme, borderRadius }) => borderRadius ?? theme.radius.sm};\n\toverflow: hidden;\n\t-webkit-mask-image: -webkit-radial-gradient(white, black);\n\twidth: ${({ width }) => width ?? \"100%\"};\n\theight: ${({ height }) => height ?? \"30px\"};\n\n\t${({ $variant }) =>\n\t\t$variant == \"light\" &&\n\t\tcss`\n\t\t\tbackground: ${({ theme }) => theme.color.bg3};\n\t\t`}\n`;\n\nconst SkeletonInner = styled(Row)<{\n\t$variant?: string;\n}>`\n\tanimation: ${shimmer} 1.4s infinite;\n\tbackground: ${({ theme }) => `linear-gradient(\n\t\t90deg,\n\t\t${theme.color.bg3}00 0%,\n\t\t${theme.color.bg3}60 50%,\n\t\t${theme.color.bg3}00 100%\n\t)`};\n\tborder-radius: ${({ theme }) => theme.radius.xs};\n\tpadding: ${({ theme }) => theme.spacing.md};\n\n\t${({ $variant }) =>\n\t\t$variant == \"light\" &&\n\t\tcss`\n\t\t\tbackground: ${({ theme }) => `linear-gradient(\n                90deg,\n                ${theme.color.bg4}00 0%,\n                ${theme.color.bg4}60 50%,\n                ${theme.color.bg4}00 100%\n            )`};\n\t\t`}\n`;\n\n/**\n * Display loading skeleton\n * @param count number of skeletons to display, will display 1 if not provided\n * @param height height of the skeleton, defaults to 30px if not provided\n * @param width width of the skeleton, defaults to 100% if not provided\n * @param varient specify color variant to use, options are: \"light\"\n * @param borderRadius border radius to use for the skeleton, if not provided theme.sm is used\n * @returns\n */\nexport default function Skeleton({\n\tcount,\n\theight,\n\twidth,\n\tvariant,\n\tborderRadius,\n}: {\n\tcount?: number;\n\theight?: string;\n\twidth?: string;\n\tvariant?: string;\n\tborderRadius?: string;\n}): JSX.Element {\n\tconst theme = useTheme();\n\n\tconst skeletons = useMemo(() => {\n\t\tconst numSkeletons = count ?? 1;\n\t\tconst skeletons = [];\n\t\tfor (let i = 0; i < numSkeletons; i++) {\n\t\t\tskeletons.push(\n\t\t\t\t<SkeletonWrapper key={i} width={width} height={height} $variant={variant} borderRadius={borderRadius}>\n\t\t\t\t\t<SkeletonInner $variant={variant} />\n\t\t\t\t</SkeletonWrapper>\n\t\t\t);\n\t\t}\n\n\t\treturn skeletons;\n\t}, [count]);\n\n\treturn <>{skeletons}</>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"theme\";\nimport { formatNumber } from \"common/utils\";\nimport ProgressRing from \"components/ProgressRing\";\nimport Row, { ResponsiveRow } from \"components/Row\";\nimport Column from \"components/Column\";\nimport TooltipText from \"components/TooltipText\";\nimport { StyledExternalInfoLink } from \"components/Link\";\nimport Skeleton from \"components/Skeleton\";\n\nconst Card = styled.div<{\n\tcolumn?: boolean;\n\theight?: string;\n\twidth?: string;\n\tpadding?: string;\n\tbackgroundColor?: string;\n}>`\n\tdisplay: flex;\n\tflex-direction: ${({ column }) => (column ? \"column\" : \"row\")};\n\tborder-radius: ${({ theme }) => theme.radius.lg};\n\tbackground-color: ${({ theme, backgroundColor }) => backgroundColor ?? theme.color.bg1};\n\theight: ${({ height }) => height ?? \"100%\"};\n\twidth: ${({ width }) => width ?? \"100%\"};\n\tpadding: ${({ padding, theme }) => padding ?? theme.spacing.lg};\n\tmargin: 0;\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n\trow-gap: 8px;\n\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tpadding: ${theme.spacing.md};\n\t`}\n`;\n\nexport default Card;\n\nconst StyledStatCard = styled(Card)`\n\tflex-direction: column;\n\tjustify-content: flex-start;\n`;\n\nconst CardHeader = styled(Typography.header)`\n\tcolor: ${({ theme }) => theme.color.bg4};\n`;\n\nexport function StatCard({\n\ttitle,\n\tvalue,\n\tunit,\n\ttooltipContent,\n\tloading,\n}: {\n\ttitle: string;\n\tvalue: any;\n\tunit?: string;\n\ttooltipContent: any;\n\tloading?: boolean;\n}): JSX.Element {\n\tconst formattedValue = formatNumber(value, unit);\n\treturn (\n\t\t<StyledStatCard>\n\t\t\t<Row>\n\t\t\t\t<TooltipText baseText={<CardHeader>{title}</CardHeader>} tooltipContent={tooltipContent} />\n\t\t\t</Row>\n\t\t\t<Row>{loading ? <Skeleton /> : <Typography.displayL>{formattedValue}</Typography.displayL>}</Row>\n\t\t</StyledStatCard>\n\t);\n}\n\nexport function CoinInfoCard({\n\tvalue,\n\twhitepaper,\n\twebsite,\n\ttwitter,\n\tcoingecko,\n}: {\n\tvalue: any;\n\twhitepaper: string;\n\twebsite: string;\n\ttwitter: string;\n\tcoingecko: string;\n}): JSX.Element {\n\treturn (\n\t\t<StyledStatCard>\n\t\t\t<Row overflow=\"visible\">\n\t\t\t\t<Typography.body>{value}</Typography.body>\n\t\t\t</Row>\n\t\t\t<br />\n\t\t\t<Column align=\"flex-start\">\n\t\t\t\t<StyledExternalInfoLink href={whitepaper} content={\"Whitepaper ↗\"} />\n\t\t\t\t<StyledExternalInfoLink href={website} content={\"Website ↗\"} />\n\t\t\t\t<StyledExternalInfoLink href={twitter} content={\"Twitter ↗\"} />\n\t\t\t\t<StyledExternalInfoLink href={coingecko} content={\"Coingecko ↗\"} />\n\t\t\t</Column>\n\t\t</StyledStatCard>\n\t);\n}\n\n// progressValue is a number from 0 to 1\nexport function ProgressCard({\n\ttitle,\n\tvalue,\n\tunit,\n\tsize,\n\tprogressValue,\n\ttooltipContent,\n\tloading,\n}: {\n\ttitle: string;\n\tvalue: any;\n\tunit?: string;\n\tsize: number;\n\tprogressValue?: number;\n\ttooltipContent: any;\n\tloading?: boolean;\n}): JSX.Element {\n\tconst formattedValue = formatNumber(value, unit);\n\treturn (\n\t\t<Card>\n\t\t\t<Column align=\"left\">\n\t\t\t\t<Row>\n\t\t\t\t\t<TooltipText baseText={<CardHeader>{title}</CardHeader>} tooltipContent={tooltipContent} />\n\t\t\t\t</Row>\n\t\t\t\t{loading ? <Skeleton /> : <Typography.displayL>{formattedValue}</Typography.displayL>}\n\t\t\t</Column>\n\t\t\t<ProgressRing value={progressValue ?? value} size={size} />\n\t\t</Card>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Token } from \"common/enums\";\nimport { TOKEN_INFO } from \"common/constants\";\n\nconst Logo = styled.img<{\n\tsize?: string;\n\tborderRadius?: number;\n\tmarginRight?: number;\n}>`\n\twidth: ${({ size }) => size ?? \"24px\"};\n\theight: ${({ size }) => size ?? \"24px\"};\n\tborder-radius: ${({ borderRadius, size }) => borderRadius ?? \"calc(\" + size + \"/ 2)\"};\n\tmargin-right: ${({ theme, marginRight }) => marginRight ?? theme.spacing.xs};\n`;\n\nexport default Logo;\n\nexport function TokenLogo({ token, size }: { token: Token; size?: string }): JSX.Element {\n\tconst imgSrc = TOKEN_INFO[token].imgSrc;\n\n\treturn <Logo src={imgSrc} size={size} />;\n}\n","import { auto } from \"@popperjs/core\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Typography } from \"theme\";\n\nconst StyledOptionButton = styled.button<{\n\tpadding?: number;\n\tvariant?: boolean;\n\twidth?: string;\n\theight?: string;\n\tactive?: boolean;\n\tflex?: number;\n}>`\n\tpadding: ${({ padding, theme }) => padding ?? theme.spacing.xs + \" \" + theme.spacing.md};\n\tborder-radius: ${({ theme }) => theme.radius.md};\n\tborder: none;\n\tbackground-color: ${({ theme, variant }) => (variant ? \"transparent\" : theme.color.bg1)};\n\tdisplay: inline;\n\tflex: ${({ flex }) => flex ?? 0};\n\twidth: ${({ width }) => width ?? \"auto\"};\n\theight: ${({ height }) => height ?? \"auto\"};\n\t:hover {\n\t\tcursor: pointer;\n\t}\n\n\t${({ active, theme, variant }) =>\n\t\tactive\n\t\t\t? css`\n\t\t\t\t\tbackground-color: ${variant ? theme.color.bg1 : theme.color.bg2};\n\t\t\t\t\tbox-shadow: ${variant ? theme.shadow.card : theme.shadow.none};\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\t:hover {\n\t\t\t\t\t\tbackground-color: ${theme.color.bg2};\n\t\t\t\t\t}\n\t\t\t  `}\n\n\t${({ theme }) => theme.mediaWidth.extraSmall`\n\t\tpadding: ${theme.spacing.xs};\n\t`}\n`;\n\nconst OptionButtonText = styled(Typography.header)<{\n\tactive?: boolean;\n\tvariant?: boolean;\n}>`\n\tcolor: ${({ theme }) => theme.color.text2};\n\t${({ active, variant }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => (variant ? theme.color.text1 : theme.color.white)};\n\t\t`}\n\n\t${({ theme }) => theme.mediaWidth.extraSmall`\n\t\tfont-size: 14px;\n\t`}\n`;\n\nexport const OptionButtonVariantBackdrop = styled.div<{\n\twidth?: string;\n}>`\n\tdisplay: flex;\n\tpadding: ${({ theme }) => theme.spacing.xxs};\n\tborder-radius: ${({ theme }) => theme.radius.lg};\n\tbackground-color: ${({ theme }) => theme.color.bg0};\n\tcolumn-gap: ${({ theme }) => theme.spacing.xs};\n\twidth: ${({ width }) => width ?? \"auto\"};\n`;\n\nexport function OptionButton({\n\tbuttonContent,\n\tpadding,\n\tactive,\n\twidth,\n\tvariant,\n\tflex,\n\tonClick,\n}: {\n\tbuttonContent: any;\n\tpadding?: number;\n\tactive: boolean;\n\twidth?: string;\n\tvariant?: boolean;\n\tflex?: number;\n\tonClick?: () => void;\n}) {\n\treturn (\n\t\t<StyledOptionButton padding={padding} active={active} width={width} onClick={onClick} variant={variant} flex={flex}>\n\t\t\t<OptionButtonText active={active} variant={variant}>\n\t\t\t\t{buttonContent}\n\t\t\t</OptionButtonText>\n\t\t</StyledOptionButton>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/closeIcon.8ddd1c9d.svg\";","import React from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\n\nimport { Typography } from \"theme\";\nimport { TokenLogo } from \"components/Logo\";\nimport { StyledInternalLink } from \"components/Link\";\nimport closeIcon from \"assets/closeIcon.svg\";\nimport { Token } from \"common/enums\";\nimport { TOKEN_INFO } from \"common/constants\";\nimport { formatNumber } from \"common/utils\";\nimport Skeleton from \"components/Skeleton\";\n\nconst StyledTokenButton = styled.button<{\n\tactive: boolean;\n\tselectedColor: string;\n}>`\n\tbackground-color: ${({ theme }) => theme.color.bg1};\n\n\tdisplay: flex;\n\talign-items: center;\n\tborder: solid ${({ theme }) => theme.border.thickness + \" \" + theme.color.border1};\n\tbackground-color: ${({ theme }) => theme.color.bg2};\n\tpadding: ${({ theme }) => theme.spacing.xxs};\n\tborder-radius: ${({ theme }) => theme.radius.lg};\n\theight: 100%;\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n\n\t:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t}\n\n\t${({ active, selectedColor }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-width: 2px;\n\t\t\tborder-color: ${selectedColor};\n\t\t\t:hover {\n\t\t\t\tbackground-color: ${({ theme }) => theme.color.bg2};\n\t\t\t}\n\t\t`}\n`;\n\nconst SelectedIndicator = styled.div<{ selectedColor: string }>`\n\tdisplay: ${({ hidden }) => (hidden ? \"none\" : \"flex\")};\n\tbackground-color: ${({ selectedColor }) => selectedColor};\n\twidth: 8px;\n\theight: 8px;\n\tborder-radius: ${({ theme }) => theme.radius.lg};\n\tmargin-right: ${({ theme }) => theme.spacing.xs};\n`;\n\nconst CoinInfo = styled.div`\n\tmin-width: 50px;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: left;\n\tmargin-right: ${({ theme }) => theme.spacing.xs};\n`;\n\nconst CloseIndicator = styled.img<{\n\thidden: boolean;\n}>`\n\tdisplay: ${({ hidden }) => (hidden ? \"none\" : \"flex\")};\n\tborder-radius: 4px;\n\tmargin-left: ${({ theme }) => theme.spacing.xs};\n\topacity: 0.7;\n\tpadding: 4px;\n\n\t:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t\topacity: 1;\n\t}\n`;\n\nconst HoverText = styled.span`\n\t:hover {\n\t\tcolor: ${({ theme }) => theme.color.text2};\n\t}\n`;\n\nexport function TokenButton({\n\ttoken,\n\tvalue,\n\tcolor,\n\tselected,\n\tallowDeselect,\n\tclickCallback,\n}: {\n\ttoken: Token;\n\tvalue: number | undefined;\n\tcolor: string;\n\tselected: boolean;\n\tallowDeselect: boolean;\n\tclickCallback: () => void;\n}): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst open = selected ? undefined : clickCallback;\n\tconst coinName = TOKEN_INFO[token].symbol;\n\treturn (\n\t\t<StyledTokenButton selectedColor={color} active={selected} onClick={open}>\n\t\t\t<SelectedIndicator selectedColor={color} hidden={!selected} />\n\t\t\t<TokenLogo token={token} />\n\t\t\t<CoinInfo>\n\t\t\t\t{selected && allowDeselect ? (\n\t\t\t\t\t<StyledInternalLink to={\"/\" + coinName}>\n\t\t\t\t\t\t<Typography.header useDefaultLineHeight>\n\t\t\t\t\t\t\t<HoverText>{coinName}</HoverText>\n\t\t\t\t\t\t</Typography.header>\n\t\t\t\t\t</StyledInternalLink>\n\t\t\t\t) : (\n\t\t\t\t\t<Typography.header useDefaultLineHeight>{coinName}</Typography.header>\n\t\t\t\t)}\n\t\t\t\t<Typography.caption useDefaultLineHeight>\n\t\t\t\t\t{value ? formatNumber(value, \"%\") : <Skeleton height=\"15px\" variant=\"light\" borderRadius={theme.radius.xs} />}\n\t\t\t\t</Typography.caption>\n\t\t\t</CoinInfo>\n\t\t\t<CloseIndicator src={closeIcon} onClick={clickCallback} hidden={!selected || !allowDeselect} />\n\t\t</StyledTokenButton>\n\t);\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Typography } from \"theme\";\n\nconst StyledSortButton = styled(Typography.header)`\n\tuser-select: none;\n\ttext-align: right;\n\n\t:hover {\n\t\tcursor: pointer;\n\t\topacity: ${({ active }) => (active ? 1 : 0.7)};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => theme.color.primary1};\n\t\t`}\n`;\n\nexport function SortButton({ name, isActive, isAsc, handleClick }) {\n\treturn (\n\t\t<StyledSortButton onClick={handleClick} active={isActive}>\n\t\t\t{name} {isActive ? (isAsc ? \"↑\" : \"↓\") : null}\n\t\t</StyledSortButton>\n\t);\n}\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst StyledToggleButton = styled.div`\n\twidth: 40px;\n\theight: 20px;\n\tposition: relative;\n`;\n\nconst Track = styled.div<{\n\tactive: boolean;\n}>`\n\twidth: 34px;\n\theight: 14px;\n\ttop: 3px;\n\tleft: 3px;\n\tborder-radius: 7px;\n\tbackground-color: ${({ active, theme }) => (active ? theme.color.primary1 : theme.color.bg4)};\n\tposition: absolute;\n`;\n\nconst Knob = styled.div<{\n\tactive: boolean;\n}>`\n\tbackground-color: ${({ theme }) => theme.color.white};\n\twidth: 20px;\n\theight: 20px;\n\tborder-radius: 10px;\n\tposition: absolute;\n\tleft: ${({ active }) => (active ? \"20px\" : \"0px\")};\n\ttransition: 300ms all;\n`;\n\nexport function ToggleButton({ active, onClick }: { active: boolean; onClick: any }) {\n\treturn (\n\t\t<StyledToggleButton onClick={onClick}>\n\t\t\t<Track active={active} />\n\t\t\t<Knob active={active} />\n\t\t</StyledToggleButton>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport * from \"./optionButton\";\nexport * from \"./tokenButton\";\nexport * from \"./sortButton\";\nexport * from \"./toggleButton\";\n\nconst Button = styled.button`\n\tbackground: none;\n\tborder: none;\n\tpadding: 0;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/compound.7079e707.gif\";","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport paperclip from \"assets/paperclip.svg\";\nimport compoundGif from \"assets/compound.gif\";\nimport Column from \"components/Column\";\nimport Logo from \"components/Logo\";\n\nconst pulse = keyframes`\n    0% { \n        transform: scale(1);\n        opacity: 0.7; \n    }\n    60% { \n        transform: scale(1.2);\n        opacity: 1.0;\n\n    }\n    100% { \n        transform: scale(1); \n        opacity: 0.7;\n    }\n`;\n\nconst AnimatedImg = styled.div`\n\tanimation: ${pulse} 1000ms linear infinite;\n`;\n\nexport default function Loader({ size }: { size: string }): JSX.Element {\n\treturn (\n\t\t<Column height=\"100%\" justify=\"center\">\n\t\t\t{/* <AnimatedImg> */}\n\t\t\t<Logo src={compoundGif} size={size} />\n\t\t\t{/* </AnimatedImg> */}\n\t\t</Column>\n\t);\n}\n","// @ts-nocheck\n\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Area, AreaChart, ResponsiveContainer, XAxis, YAxis, Tooltip, ReferenceLine, CartesianGrid } from \"recharts\";\n\nimport { DateFormat, TimeSelector } from \"common/enums\";\nimport { ChartConfig, LineInfo } from \"common/types\";\nimport { TIME_SELECTOR_INFO } from \"common/constants\";\n\nimport { formatNumber, formatDate } from \"common/utils\";\nimport { Typography, mediaQuerySizes, theme } from \"theme\";\nimport Loader from \"components/Loader\";\nimport { Token } from \"graphql\";\n\n// Used in custom labels and ticks\nconst foreignObjectWidth = 150;\nconst foreignObjectHeight = 25;\nconst yAxisWidth = 55; // When y axis is shown\n\nconst activeDotConfig = {\n\tr: 5, // dot radius\n\tstrokeWidth: 0,\n};\n\nconst dataLoadTimeoutMs = 15000; // ms before it is considered we have a data error\n\nconst StyledTooltip = styled.div`\n\ttext-align: center;\n\tpadding: 5px 0;\n\twidth: ${({ toolTipWidth }) => toolTipWidth}px;\n\tbackground-color: ${({ theme }) => theme.color.bg1};\n\ttransform: translate(${({ translationX }) => translationX}px);\n`;\n\nconst StyledCustomXTick = styled.div`\n\ttext-align: center;\n`;\n\nconst StyledCustomYTick = styled.div`\n\ttext-align: left;\n`;\n\nconst StyledAvgLabel = styled.div`\n\tdisplay: inline-block;\n\tpadding: 2px 8px;\n\tbackground-color: ${({ theme }) => theme.color.bg0 + \"A0\"};\n\tbackdrop-filter: blur(2px);\n\ttext-align: left;\n`;\n\nconst NoDataWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n\twidth: 100%;\n\tjustify-content: center;\n\ttext-align: center;\n`;\n\nfunction CustomTooltip({\n\ttoolTipWidth,\n\tshowTime,\n\tshowValue,\n\tvalueUnit,\n\tkeys,\n\tdateKey,\n\tonHover,\n\tcoordinate,\n\tviewBox,\n\tpayload,\n}: {\n\ttoolTipWidth: number;\n\tshowTime: boolean;\n\tshowValue: boolean;\n\tvalueUnit: string | null;\n\tkeys: string;\n\tdateKey: string;\n\tonHover: (hoverDate: number) => void;\n\tcoordinate: any;\n\tviewBox: any;\n\tpayload: any;\n}): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst hoverData = payload && payload[0] ? payload[0].payload : null;\n\tconst hoverDate = hoverData ? hoverData[dateKey] : null;\n\tconst value = hoverData ? hoverData[keys[0]] : null;\n\tconst lastHoverData = useRef(-1);\n\n\t// If hover date updates, let parent know (after render), gaurd spamming the same value to avoid infinite loop\n\tuseEffect(() => {\n\t\tif (hoverData != lastHoverData.current) {\n\t\t\tonHover(hoverData);\n\t\t\tlastHoverData.current = hoverData;\n\t\t}\n\t}, [onHover, hoverData]);\n\n\tif (hoverDate) {\n\t\tconst formattedDate = formatDate(hoverDate, showTime ? DateFormat.MMM_DD_TIME : DateFormat.MMM_DD_YY);\n\n\t\t// Bound the right side of tooltip\n\t\tconst rightX = coordinate.x + toolTipWidth / 2;\n\t\tconst maxX = viewBox.width + viewBox.left;\n\t\tconst translationX = rightX > maxX ? maxX - rightX : 0;\n\n\t\treturn (\n\t\t\t<StyledTooltip toolTipWidth={toolTipWidth} translationX={translationX}>\n\t\t\t\t<Typography.caption color={theme.color.text2}>{formattedDate}</Typography.caption>\n\t\t\t\t{showValue && value != null && <Typography.caption>{formatNumber(value, valueUnit)}</Typography.caption>}\n\t\t\t</StyledTooltip>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nfunction CustomXTick({ x, y, payload, showTime, yAxisShown, show, index, visibleTicksCount }) {\n\tconst width = 40;\n\n\tconst theme = useTheme();\n\tconst formattedDate = formatDate(payload.value, DateFormat.DD_YY);\n\n\tif (!show) {\n\t\treturn null;\n\t}\n\n\tlet xPosition = x - width / 2;\n\n\tif (index === 0) {\n\t\t// Left end point\n\t\txPosition -= width / 2;\n\t} else if (index === visibleTicksCount - 1) {\n\t\t// Right end point\n\t\tif (yAxisShown) {\n\t\t\txPosition += width - yAxisWidth;\n\t\t} else {\n\t\t\txPosition += width / 2;\n\t\t}\n\t}\n\n\t// Render foreignObject first, as this allows us to render html and not just svg\n\treturn (\n\t\t<foreignObject x={xPosition} y={y - 5} width={width} height={foreignObjectHeight}>\n\t\t\t<StyledCustomXTick>\n\t\t\t\t<Typography.subheader color={theme.color.text2}>{formattedDate}</Typography.subheader>\n\t\t\t</StyledCustomXTick>\n\t\t</foreignObject>\n\t);\n}\n\nfunction CustomYTick({ x, y, payload, show, unit }): JSX.Element | null {\n\tconst theme = useTheme();\n\tlet decimals = 2;\n\tif (payload.value > 100) {\n\t\tdecimals = 0;\n\t}\n\tconst formattedValue = formatNumber(payload.value, unit, decimals); // TODO: make so it can take generic values\n\n\tif (!show) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<foreignObject x={x} y={y - 15} width={yAxisWidth} height={foreignObjectHeight}>\n\t\t\t<StyledCustomYTick>\n\t\t\t\t<Typography.subheader color={theme.color.text2}>{formattedValue}</Typography.subheader>\n\t\t\t</StyledCustomYTick>\n\t\t</foreignObject>\n\t);\n}\n\nfunction AvgLabel({ viewBox, avg, unit }: { viewBox: any; avg: number | null; unit: string }): JSX.Element | null {\n\tif (!avg) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<foreignObject\n\t\t\tx={viewBox.x}\n\t\t\ty={viewBox.y - foreignObjectHeight}\n\t\t\twidth={foreignObjectWidth}\n\t\t\theight={foreignObjectHeight}\n\t\t>\n\t\t\t<StyledAvgLabel>\n\t\t\t\t<Typography.caption>{formatNumber(avg, unit)} average</Typography.caption>\n\t\t\t</StyledAvgLabel>\n\t\t</foreignObject>\n\t);\n}\n\n/**\n * React element to display a chart with multiple lines of from data over time according to the lineInfoList\n * @param data data to display on the chart\n * @param chartConfig the chart configuration\n * @param lineInfoList list of the line info for the lines to be plotted, the keys correspond to those in data\n * @param dateKey the key where the unix date in seconds is stored for the x axis\n * @param unit the unit of the data being shown, all data points should be in the same unit\n * @param onHover callback to pass the data that is currently being hovered over\n * \t\t\t\t  this includes the date, and the value of all the data at that date\n * @returns react element which is a chart with multiple lines on it\n */\nexport default function MultilineChart({\n\tdata,\n\tchartConfig,\n\tlineInfoList,\n\tdateKey,\n\tunit,\n\tonHover,\n}: {\n\tdata: Record<string, number>[];\n\tchartConfig: ChartConfig;\n\tlineInfoList: LineInfo[];\n\tdateKey: string;\n\tunit: string | null;\n\tonHover: (hoverData: Record<string, any> | null) => void;\n}): JSX.Element {\n\tconst theme = useTheme();\n\tconst [avg, setAvg] = useState<number | undefined>(undefined);\n\tconst [dataLoadTimeout, setDataLoadTimeout] = useState<boolean>(false);\n\n\tconst dataLoaded = data && data.length !== 0;\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => setDataLoadTimeout(true), dataLoadTimeoutMs);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Only display avg if 1 coin is selected\n\t\tif (!chartConfig.showAvg || lineInfoList.length !== 1 || !data || data.length === 0) {\n\t\t\tsetAvg(null);\n\t\t} else {\n\t\t\tconst avg = getAvg(data, lineInfoList[0].key);\n\t\t\tsetAvg(avg);\n\t\t}\n\t}, [data, lineInfoList]);\n\n\tconst cursorConfig = useMemo(() => {\n\t\treturn {\n\t\t\tstroke: theme.color.bg4,\n\t\t\tstrokeWidth: 2,\n\t\t\tstrokeDasharray: \"5,5\",\n\t\t};\n\t}, [theme]);\n\n\t// Used to make the linear gradient def for the id different\n\tconst randomId = Math.floor(Math.random() * 10000);\n\n\tconst lines = lineInfoList.map((lineInfo, i) => {\n\t\treturn (\n\t\t\t<Area\n\t\t\t\ttype=\"monotone\"\n\t\t\t\tdataKey={lineInfo.key}\n\t\t\t\tstroke={lineInfo.color}\n\t\t\t\tstrokeWidth={2}\n\t\t\t\tconnectNulls={true}\n\t\t\t\tkey={i}\n\t\t\t\tdot={false}\n\t\t\t\tactiveDot={activeDotConfig}\n\t\t\t\tisAnimationActive={chartConfig.animate}\n\t\t\t\tanimationDuration={750}\n\t\t\t\tfill={lineInfoList.length === 1 && chartConfig.showAreaGradient ? `url(#areaGrad${randomId})` : \"#00000000\"}\n\t\t\t/>\n\t\t);\n\t});\n\n\tconst maxDate = dataLoaded ? data[data.length - 1][dateKey] : 0;\n\tconst { minDate, minDateIndex } = useMemo(() => {\n\t\treturn dataLoaded\n\t\t\t? findMinDate(\n\t\t\t\t\tdata,\n\t\t\t\t\tlineInfoList.map((entry) => entry.key),\n\t\t\t\t\tdateKey\n\t\t\t  )\n\t\t\t: { minDate: 0, minDateIndex: 0 };\n\t}, [data, lineInfoList, dateKey]);\n\n\tconst xAxisTicks = useMemo(() => {\n\t\treturn getXTicks(data, chartConfig.numberOfXAxisTicks, dateKey, minDateIndex);\n\t}, [data, chartConfig.numberOfXAxisTicks, dateKey, minDateIndex]);\n\n\tconst chartHeight =\n\t\twindow.innerWidth < mediaQuerySizes.small ? (chartConfig.baseChartHeightPx * 2) / 3 : chartConfig.baseChartHeightPx;\n\n\tconst keys = useMemo(() => {\n\t\treturn lineInfoList.map((info) => info.key);\n\t}, [lineInfoList]);\n\n\tconst showTime = shouldShowTime(maxDate, minDate);\n\tconst toolTipWidth = showTime ? 150 : 90;\n\tconst toolTipOffset = -toolTipWidth / 2; // Center it on the cursor\n\tconst showValueInTooltip = chartConfig.showValueInTooltip && lineInfoList.length === 1; // Only show value if there is 1 entry\n\n\treturn (\n\t\t<ResponsiveContainer width=\"100%\" height={chartHeight}>\n\t\t\t{dataLoaded ? (\n\t\t\t\t<AreaChart\n\t\t\t\t\theight={chartHeight}\n\t\t\t\t\tmargin={{\n\t\t\t\t\t\tleft: 10,\n\t\t\t\t\t\ttop: chartConfig.showValueInTooltip ? 25 : -1,\n\t\t\t\t\t\tright: 10,\n\t\t\t\t\t\tbottom: chartConfig.showXTick ? 0 : -15,\n\t\t\t\t\t}}\n\t\t\t\t\tdata={data}\n\t\t\t\t>\n\t\t\t\t\t<CartesianGrid\n\t\t\t\t\t\tvertical={chartConfig.showVerticalGrid}\n\t\t\t\t\t\thorizontal={chartConfig.showHorizontalGrid}\n\t\t\t\t\t\twidth=\"1\"\n\t\t\t\t\t\tstrokeWidth={0.1}\n\t\t\t\t\t/>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<linearGradient id={\"areaGrad\" + randomId} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t\t<stop offset=\"5%\" stopColor={lineInfoList[0].color} stopOpacity={0.3} />\n\t\t\t\t\t\t\t<stop offset=\"100%\" stopColor={lineInfoList[0].color} stopOpacity={0} />\n\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<XAxis\n\t\t\t\t\t\tdataKey={dateKey}\n\t\t\t\t\t\ttick={<CustomXTick showTime={showTime} show={chartConfig.showXTick} yAxisShown={chartConfig.showYTick} />}\n\t\t\t\t\t\taxisLine={chartConfig.showXAxis}\n\t\t\t\t\t\tticks={xAxisTicks}\n\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\tinterval={\"preserveStartEnd\"}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tdomain={[minDate, maxDate]}\n\t\t\t\t\t\tallowDataOverflow={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\tdatekey={lineInfoList[0]}\n\t\t\t\t\t\tpadding={{ top: 40 }} // Space for tooltip above the data\n\t\t\t\t\t\torientation=\"right\"\n\t\t\t\t\t\ttick={<CustomYTick show={chartConfig.showYTick} unit={unit} />}\n\t\t\t\t\t\taxisLine={chartConfig.showYAxis}\n\t\t\t\t\t\twidth={chartConfig.showYTick ? yAxisWidth : 0}\n\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tcursor={cursorConfig}\n\t\t\t\t\t\tposition={{ y: 0 }} // Set to the top of chart\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<CustomTooltip\n\t\t\t\t\t\t\t\ttoolTipWidth={toolTipWidth}\n\t\t\t\t\t\t\t\tshowTime={showTime}\n\t\t\t\t\t\t\t\tshowValue={showValueInTooltip}\n\t\t\t\t\t\t\t\tdateKey={dateKey}\n\t\t\t\t\t\t\t\tvalueUnit={unit}\n\t\t\t\t\t\t\t\tkeys={keys}\n\t\t\t\t\t\t\t\tonHover={onHover}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\toffset={toolTipOffset}\n\t\t\t\t\t/>\n\t\t\t\t\t{lines}\n\t\t\t\t\t<ReferenceLine\n\t\t\t\t\t\ty={avg}\n\t\t\t\t\t\tstroke={theme.color.bg5}\n\t\t\t\t\t\tstrokeDasharray=\"5 5\"\n\t\t\t\t\t\tlabel={<AvgLabel avg={avg} unit={unit} />}\n\t\t\t\t\t/>\n\t\t\t\t</AreaChart>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{dataLoadTimeout ? (\n\t\t\t\t\t\t<NoDataWrapper>\n\t\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Error loading data</Typography.header>\n\t\t\t\t\t\t</NoDataWrapper>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Loader size=\"100px\" />\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</ResponsiveContainer>\n\t);\n}\n\n/**\n * Compute the average of the values of the specied key in data\n * @param data time series data entry list\n * @param key to compute the average for\n * @returns average of the values at key in data\n */\nfunction getAvg(data: Record<string, number>[], key: string): number | null {\n\tif (data.length === 0) {\n\t\treturn null;\n\t}\n\n\t// Count for the number of values contributing to the average\n\tlet count = 0;\n\n\tlet avg: number = data.reduce((acc: number, obj) => {\n\t\tif (obj[key]) {\n\t\t\tconst nextVal = Number(obj[key]) ?? 0;\n\t\t\tcount += 1;\n\t\t\treturn acc + nextVal;\n\t\t} else {\n\t\t\treturn acc;\n\t\t}\n\t}, 0);\n\tavg /= count;\n\n\treturn avg;\n}\n\n/**\n * Helper to compute if the data is over a short enough time frame to show the time of day in the tooltip and xaxis\n * @param newestDate oldest date in unix secconds\n * @param oldestDate oldest date in unix secconds\n * @returns true if that chart should show time on hover and xaxis (if configured to do so), false otherwise\n */\nfunction shouldShowTime(newestDate: number, oldestDate: number): boolean {\n\tconst secDiff = newestDate - oldestDate;\n\tconst dayDiff = secDiff / (60 * 60 * 24);\n\treturn dayDiff < TIME_SELECTOR_INFO[TimeSelector.ONE_WEEK].days; // If less than a week, show the time\n}\n\n/**\n * Find the minimum date with the first valid piece of data with a key in lineInfoList\n * @param data the data to query for the min data\n * @param lineInfoList list of line info\n * @return the minimum date and index of that date corresponding to the value at dateKey in the first data entry with a data key in lineInfoList\n */\nfunction findMinDate(\n\tdata: Record<string, number>[],\n\tdataKeys: Token[],\n\tdateKey: string\n): { minDate: number; minDateIndex: number } {\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst keysInData = Object.keys(data[i]);\n\t\tfor (let j = 0; j < dataKeys.length; j++) {\n\t\t\tif (keysInData.includes(dataKeys[j])) {\n\t\t\t\treturn { minDate: data[i][dateKey], minDateIndex: i };\n\t\t\t}\n\t\t}\n\t}\n\n\t// Not found\n\treturn { minDate: 0, minDateIndex: 0 };\n}\n\n/**\n * Helper to compute the tick indicies in the data given the number of ticks to show\n * @param data time series data\n * @param numberOfTicks number of ticks to show\n * @param startIndex the minimum index of data that will be shown, this is used as the left endpoint when calculating the x tick position\n * @returns array of indicies in the time series data of the values to put on each tick\n */\nfunction getXTicks(data: Record<Token, number>[], numberOfTicks: number, dateKey: string, startIndex: number) {\n\tif (!data || numberOfTicks === 0 || numberOfTicks > data.length) return [];\n\n\tconst ticks = Array(numberOfTicks);\n\tconst length = data.length - startIndex;\n\tfor (let i = 0; i < numberOfTicks; i++) {\n\t\tconst index = Math.floor((i / (numberOfTicks - 1)) * (length - 1)) + startIndex;\n\t\tticks[i] = data[index][dateKey];\n\t}\n\n\treturn ticks;\n}\n","// @ts-nocheck\nimport React, { useState, useMemo, useCallback, useEffect } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { TimeSelector, DataSelector, Token, DataType } from \"common/enums\";\nimport { LineInfo, ChartConfig } from \"common/types\";\n\nimport { useHistoricalData } from \"data/hooks\";\nimport { OptionButton, OptionButtonVariantBackdrop } from \"components/Button\";\nimport MultilineChart from \"components/Chart/MultilineChart\";\nimport Column from \"components/Column\";\nimport { ScrollRow, ResponsiveRow } from \"components/Row\";\nimport { Typography } from \"theme\";\nimport { TIME_SELECTOR_INFO, MARKET_DATA_SELECTOR_INFO, PROTOCOL_DATA_SELECTOR_INFO } from \"common/constants\";\nimport { formatNumber } from \"common/utils\";\nimport Skeleton from \"components/Skeleton\";\n\nconst StyledChartContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\trow-gap: ${({ theme }) => theme.spacing.xs};\n`;\n\nconst TimeSelectorRow = styled(ScrollRow)`\n\tjustify-content: center;\n\tcolumn-gap: ${({ theme }) => theme.spacing.lg};\n\n\t${({ theme }) => theme.mediaWidth.extraSmall`\n\t\tcolumn-gap: ${({ theme }) => theme.spacing.md};\n\t`}\n`;\n\nconst DataSelectorRow = styled(OptionButtonVariantBackdrop)`\n\tflex: 1;\n\t${({ theme }) => theme.mediaWidth.extraSmall`\n\t\twidth: 100%;\n\t`}\n`;\n\n/**\n * React element to display the multiline chart, with time selector and data selector buttons\n * @param chartConfig the chart configuration\n * @param token the core token of this chart, if this is set the current value will be shown in the top left, otherwise it will be hidden\n * @param lineInfoList list of the line info for the lines to be plotted\n * @param dataType type of the data, this determines the data source to use\n * @param dataSelectorOptions list of data selectors, if only 1 selector is provided buttons are not shown, this should be a selector for the dataType\n * @param timeSelectorOptions list of the time selectors to show buttons for, if only 1 selector is provided no buttons are shown\n * @param hoverDataCallback callback to recieve the hover data, this is the data hovered over for the coins in lineInfoList, and the last data point for the coins not in lastInfoList\n * @returns react element which is a time series chart, with a row of time selectors below the chart, and data selectors + current value above\n */\nexport default function TimeSeriesChart({\n\tchartConfig,\n\ttoken,\n\tlineInfoList,\n\tdataType,\n\tdataSelectorOptions,\n\ttimeSelectorOptions,\n\thoverDataCallback,\n}: {\n\tchartConfig: ChartConfig;\n\ttoken?: Token;\n\tlineInfoList: LineInfo[];\n\tdataType: DataType;\n\tdataSelectorOptions: DataSelector[];\n\ttimeSelectorOptions: TimeSelector[];\n\thoverDataCallback?: (hoverData: Record<string, any>) => void;\n}): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst [timeSelector, setTimeSelector] = useState<TimeSelector>(timeSelectorOptions.slice(-1)[0]);\n\tconst [dataSelector, setDataSelector] = useState<string>(dataSelectorOptions[0]);\n\tconst [dataSelectorIndex, setDataSelectorIndex] = useState<number>(0); // Used when the data selector options change\n\n\t// Select new data selector if they changed\n\tif (!dataSelectorOptions.includes(dataSelector)) {\n\t\tif (dataSelectorOptions.length > dataSelectorIndex) {\n\t\t\tsetDataSelector(dataSelectorOptions[dataSelectorIndex]);\n\t\t} else {\n\t\t\tsetDataSelector(dataSelectorOptions[0]);\n\t\t\tsetDataSelectorIndex(0);\n\t\t}\n\t}\n\n\tconst selectedData = useHistoricalData(dataType, timeSelector, dataSelector);\n\n\tconst dataSelectorInfo = DataType.PROTOCOL === dataType ? PROTOCOL_DATA_SELECTOR_INFO : MARKET_DATA_SELECTOR_INFO;\n\n\t// Update hover data callback when selectedData changes\n\tuseEffect(() => {\n\t\tif (selectedData && selectedData.length != 0 && hoverDataCallback) {\n\t\t\tconst callbackData = JSON.parse(JSON.stringify(selectedData.slice(-1)[0])); // deep copy of most recent\n\t\t\thoverDataCallback(callbackData);\n\t\t}\n\t}, [hoverDataCallback, dataSelector]);\n\n\tconst dataSelectorButtons = useMemo(() => {\n\t\tif (dataSelectorOptions.length <= 1) {\n\t\t\t// Show no buttons for 1 item in list\n\t\t\treturn null;\n\t\t}\n\n\t\treturn dataSelectorOptions.map((selector, i) => {\n\t\t\treturn (\n\t\t\t\t<OptionButton\n\t\t\t\t\tkey={i}\n\t\t\t\t\tbuttonContent={dataSelectorInfo[selector].name}\n\t\t\t\t\tactive={dataSelector === selector}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetDataSelector(selector);\n\t\t\t\t\t\tsetDataSelectorIndex(i);\n\t\t\t\t\t}}\n\t\t\t\t\tflex={1}\n\t\t\t\t\tvariant\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}, [dataSelector, dataSelectorOptions, setDataSelector, setDataSelectorIndex, selectedData, hoverDataCallback]);\n\n\tconst timeSelectorButtons = useMemo(() => {\n\t\tif (timeSelectorOptions.length <= 1) {\n\t\t\t// Show no buttons for 1 item in list\n\t\t\treturn null;\n\t\t}\n\n\t\treturn timeSelectorOptions.map((selector, i) => {\n\t\t\treturn (\n\t\t\t\t<OptionButton\n\t\t\t\t\tkey={i}\n\t\t\t\t\tbuttonContent={TIME_SELECTOR_INFO[selector].name}\n\t\t\t\t\tactive={timeSelector === selector}\n\t\t\t\t\tonClick={() => setTimeSelector(selector)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}, [timeSelector, timeSelectorOptions, setTimeSelector]);\n\n\t// For null hoverData, or entries with coins not in lineInfoList the data passed to the callback the most recent point\n\tconst handleHover = useCallback(\n\t\t(hoverData: any) => {\n\t\t\tif (!selectedData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst callbackData = JSON.parse(JSON.stringify(selectedData.slice(-1)[0])); // deep copy of most recent\n\n\t\t\t// Update the data of coins in lineInfoList to the hover data\n\t\t\tif (hoverData && hoverDataCallback) {\n\t\t\t\tfor (let i = 0; i < lineInfoList.length; i++) {\n\t\t\t\t\tconst key = lineInfoList[i].key; // This will be the coin name if it is \"ALL\"\n\t\t\t\t\tcallbackData[key] = hoverData[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hoverDataCallback) {\n\t\t\t\thoverDataCallback(callbackData);\n\t\t\t}\n\t\t},\n\t\t[selectedData, hoverDataCallback, lineInfoList] // lineInfoList here causes infinite loop since it updates on this useCallback\n\t);\n\n\tconst currentValue =\n\t\tselectedData && selectedData.length > 0\n\t\t\t? selectedData.slice(-1)[0][token] ?? selectedData.slice(-1)[0][\"value\"] ?? undefined\n\t\t\t: undefined;\n\tconst dataSelectorDescription = dataSelectorInfo[dataSelector].description;\n\tconst dataSelectorUnit = dataSelectorInfo[dataSelector].unit;\n\n\treturn (\n\t\t<StyledChartContainer>\n\t\t\t{dataSelectorOptions.length > 0 && (\n\t\t\t\t<ResponsiveRow align=\"flex-start\" overflow=\"visible\" reverse xs>\n\t\t\t\t\t<Column align=\"flex-start\" overflow=\"visible\" flex={1}>\n\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Current {dataSelectorDescription}</Typography.header>\n\t\t\t\t\t\t{currentValue ? (\n\t\t\t\t\t\t\t<Typography.displayL>{formatNumber(currentValue, dataSelectorUnit)}</Typography.displayL>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton width=\"100px\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Column>\n\t\t\t\t\t{dataSelectorOptions.length > 1 && <DataSelectorRow>{dataSelectorButtons}</DataSelectorRow>}\n\t\t\t\t</ResponsiveRow>\n\t\t\t)}\n\t\t\t<MultilineChart\n\t\t\t\tdata={selectedData}\n\t\t\t\tchartConfig={chartConfig}\n\t\t\t\tdateKey=\"date\"\n\t\t\t\tlineInfoList={lineInfoList}\n\t\t\t\tonHover={handleHover}\n\t\t\t\tunit={dataSelectorUnit}\n\t\t\t/>\n\t\t\t{timeSelectorOptions.length > 1 && <TimeSelectorRow>{timeSelectorButtons}</TimeSelectorRow>}\n\t\t</StyledChartContainer>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/leftArrow.ab79d765.svg\";","export default __webpack_public_path__ + \"static/media/rightArrow.8e573290.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"./\";\nimport leftArrowSvg from \"assets/leftArrow.svg\";\nimport rightArrowSvg from \"assets/rightArrow.svg\";\nimport Row from \"components/Row\";\n\nconst HorizontalScrollButtonWrapper = styled(Row)`\n\theight: 100%;\n\twidth: 100%;\n\tborder-radius: 25px;\n\tjustify-content: center;\n\talign-content: center;\n\tbackground-color: ${({ theme }) => theme.color.bg3};\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n`;\n\nconst BackgroupWrapper = styled(Row)<{\n\tisRight?: boolean;\n}>`\n\twidth: 50px;\n\theight: 50px;\n\tbackground: ${({ theme, isRight }) =>\n\t\t`linear-gradient(${isRight ? \"-90deg\" : \"90deg\"}, ${theme.color.bg1} 0%, ${\n\t\t\ttheme.color.bg1\n\t\t} 50%, rgb(00, 00, 00, 00) 51%)`};\n\n\tdisplay: flex;\n\n\t:hover {\n\t\tcursor: pointer;\n\t}\n\tright: ${({ isRight }) => (isRight ? \"0\" : \"auto\")};\n\tleft: ${({ isRight }) => (isRight ? \"auto\" : \"0\")};\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\theight: 100%;\n\twidth: 50px;\n`;\n\nexport function HorizontalScrollButton({ onClick, isRight }: { onClick: any; isRight: boolean }) {\n\treturn (\n\t\t<Button onClick={onClick}>\n\t\t\t<BackgroupWrapper isRight={isRight}>\n\t\t\t\t<HorizontalScrollButtonWrapper>\n\t\t\t\t\t{isRight ? <img src={rightArrowSvg} /> : <img src={leftArrowSvg} />}\n\t\t\t\t</HorizontalScrollButtonWrapper>\n\t\t\t</BackgroupWrapper>\n\t\t</Button>\n\t);\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport React, { useState, useMemo, useEffect, useCallback, useRef } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { Token, MarketDataSelector, TimeSelector, DataType } from \"common/enums\";\nimport { ChartConfig, LineInfo } from \"common/types\";\nimport { TOKEN_INFO } from \"common/constants\";\n\nimport TimeSeriesChart from \"components/Chart/TimeSeriesChart\";\nimport Row, { ScrollRow } from \"components/Row\";\nimport Button, { TokenButton } from \"components/Button\";\nimport { mediaQuerySizes, Typography } from \"theme\";\nimport { tokenToString } from \"typescript\";\nimport { HorizontalScrollButton } from \"components/Button/horizontalScrollButton\";\n\nconst StyledChartContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\trow-gap: ${({ theme }) => theme.spacing.xs};\n`;\n\nconst CoinRowWrapper = styled.div`\n\tdisplay: ;\n\tposition: relative;\n\theight: 50px;\n`;\n\n/**\n * Holds the state of the token buttons\n */\ntype TokenButtonStates = {\n\t[token in Tokens]: {\n\t\ttoken: Token;\n\t\tvalue: number | undefined;\n\t\tcolor: string | undefined;\n\t\tselectedPosition: number | undefined;\n\t};\n};\n\nfunction CoinRow({ children }) {\n\tconst scroll = useRef();\n\tconst [showLeftArrow, setShowLeftArrow] = useState(false);\n\tconst [showRightArrow, setShowRightArrow] = useState(true);\n\n\tconst maxScrollLeft = scroll && scroll.current ? scroll.current.scrollWidth - scroll.current.clientWidth : 0;\n\n\tconst showArrows = window.innerWidth > mediaQuerySizes.extraSmall;\n\n\tfunction onScroll() {\n\t\tconst currentPos = scroll.current.scrollLeft;\n\t\tsetShowLeftArrow(currentPos > 0);\n\t\tsetShowRightArrow(currentPos < maxScrollLeft - 10); // -10 offset to not have at very end as this doesn't work in Chrome\n\t}\n\n\tfunction leftScroll() {\n\t\t// the leftmost point starts @ 0\n\t\tscroll.current.scrollBy({ top: 0, left: -300, behavior: \"smooth\" });\n\t}\n\n\tfunction rightScroll() {\n\t\tscroll.current.scrollBy({ top: 0, left: 300, behavior: \"smooth\" });\n\t}\n\n\treturn (\n\t\t<CoinRowWrapper>\n\t\t\t<ScrollRow ref={scroll} onScroll={onScroll}>\n\t\t\t\t{children}\n\t\t\t</ScrollRow>\n\t\t\t{showArrows && showLeftArrow && <HorizontalScrollButton onClick={leftScroll} isRight={false} />}\n\t\t\t{showArrows && showRightArrow && <HorizontalScrollButton onClick={rightScroll} isRight={true} />}\n\t\t</CoinRowWrapper>\n\t);\n}\n\nfunction defaultButtonStates(mainToken: Token, mainColor: string): TokenButtonStates[] {\n\tconst buttonStates = {};\n\tfor (const token in Token) {\n\t\tconst isMain = token === mainToken;\n\t\tbuttonStates[token] = {\n\t\t\ttoken: token,\n\t\t\tvalue: undefined,\n\t\t\tcolor: isMain ? mainColor : null,\n\t\t\tselectedPosition: isMain ? 0 : null,\n\t\t};\n\t}\n\n\treturn buttonStates;\n}\n\n/**\n * React element to display the time series chart, with coin selectors to derive the lineInfoList\n * @param chartConfig the chart configuration\n * @param dataSelectorOptions list of data selectors, if only 1 selector is provided buttons are not shown.\n * @param timeSelectorOptions list of the time selectors to show buttons for, if only 1 selector is provided no buttons are shown\n * @param mainToken the main token, if defined this will not allow deselecting of this token, and display the current value of this token in the top left of the chart container\n * @returns react element coin selector time series chart (time selectors, data selectors, and coin selectors)\n */\nexport default function TokenSelectorTimeSeriesChart({\n\tchartConfig,\n\tdataSelectorOptions,\n\ttimeSelectorOptions,\n\tmainToken,\n}: {\n\tchartConfig: ChartConfig;\n\tdataSelectorOptions: MarketDataSelector[];\n\ttimeSelectorOptions: TimeSelector[];\n\tmainToken?: Token;\n}): JSX.Element | null {\n\tconst theme = useTheme();\n\n\tconst [buttonStates, setButtonStates] = useState<TokenButtonStates>(\n\t\tdefaultButtonStates(mainToken, theme.color.lineChartColors[0])\n\t);\n\tconst [colorStack, setColorStack] = useState<string[]>(\n\t\t!!mainToken ? [...theme.color.lineChartColors].slice(1).reverse() : [...theme.color.lineChartColors].reverse()\n\t);\n\n\t// When the main token changes, reset button states\n\tuseEffect(() => {\n\t\t// Clear colors and positions\n\t\tsetButtonStates((prevState) => {\n\t\t\tconst nextState = JSON.parse(JSON.stringify(prevState)); // deep copy\n\t\t\tfor (const token in Token) {\n\t\t\t\tconst isMain = token === mainToken;\n\t\t\t\tnextState[token].color = isMain ? theme.color.lineChartColors[0] : null;\n\t\t\t\tnextState[token].selectedPosition = isMain ? 0 : null;\n\t\t\t}\n\t\t\treturn nextState;\n\t\t});\n\t\t// Reset color stack\n\t\tsetColorStack(\n\t\t\tmainToken != null\n\t\t\t\t? [...theme.color.lineChartColors].slice(1).reverse()\n\t\t\t\t: [...theme.color.lineChartColors].reverse()\n\t\t);\n\t}, [mainToken, setButtonStates]);\n\n\tconst handleHoverData = useCallback(\n\t\t(hoverData: any) => {\n\t\t\tsetButtonStates((prevState) => {\n\t\t\t\tconst nextState = JSON.parse(JSON.stringify(prevState)); // deep copy\n\t\t\t\tfor (const token in Token) {\n\t\t\t\t\tnextState[token].value = hoverData[token] ?? \"-\";\n\t\t\t\t}\n\t\t\t\treturn nextState;\n\t\t\t});\n\t\t},\n\t\t[setButtonStates]\n\t);\n\n\tfunction handleTokenButtonClick(token: Token) {\n\t\t// Copy old data\n\t\tconst newColorStack = [...colorStack];\n\t\tconst newButtonStates = JSON.parse(JSON.stringify(buttonStates)); // deep copy\n\n\t\tconst maxTokensSelected = theme.color.lineChartColors.length;\n\t\tconst allowDeselect = token !== mainToken && lineInfoList.length > 1;\n\t\tconst numberSelected = maxTokensSelected - newColorStack.length;\n\t\tconst currentPosition = newButtonStates[token].selectedPosition;\n\n\t\tlet nextPosition;\n\t\tif (currentPosition === null) {\n\t\t\t// It is not selected, so select it\n\t\t\tnextPosition = Math.min(numberSelected + 1, maxTokensSelected);\n\t\t} else if (!allowDeselect) {\n\t\t\t// Can't deselect if not allowDeselect, or the last one\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Deselect\n\t\t\tnextPosition = null;\n\t\t}\n\n\t\t// Shuffling positions on deselect\n\t\tfor (const tempToken in Token) {\n\t\t\tconst position = newButtonStates[tempToken].selectedPosition;\n\t\t\tif (currentPosition && position > currentPosition) {\n\t\t\t\t// Deselecting, so shuffle down 1\n\t\t\t\tnewButtonStates[tempToken].selectedPosition = position - 1;\n\t\t\t} else if (nextPosition === maxTokensSelected && position === maxTokensSelected) {\n\t\t\t\t// Selecting more than max, bump off the last selected\n\t\t\t\tnewButtonStates[tempToken].selectedPosition = null;\n\t\t\t\tnewColorStack.push(newButtonStates[tempToken].color);\n\t\t\t\tnewButtonStates[tempToken].color = null;\n\t\t\t}\n\t\t}\n\n\t\t// Set the new position\n\t\tnewButtonStates[token].selectedPosition = nextPosition;\n\t\tif (!nextPosition) {\n\t\t\tnewColorStack.push(newButtonStates[token].color);\n\t\t\tnewButtonStates[token].color = null;\n\t\t} else {\n\t\t\tnewButtonStates[token].color = newColorStack.pop();\n\t\t}\n\n\t\tsetColorStack(newColorStack);\n\t\tsetButtonStates(newButtonStates);\n\t}\n\n\tconst tokenButtons = useMemo(() => {\n\t\t// Make a copy of the button states and reorder them\n\t\tconst copiedButtonStates = JSON.parse(JSON.stringify(buttonStates)); // deep copy\n\t\tconst orderedButtonStateList = [];\n\t\tlet numSelected = 0;\n\t\tfor (const token in Token) {\n\t\t\torderedButtonStateList.push(copiedButtonStates[token]);\n\t\t\tif (copiedButtonStates[token].selectedPosition !== null) {\n\t\t\t\tnumSelected += 1;\n\t\t\t}\n\t\t}\n\t\torderedButtonStateList.sort((a, b) => {\n\t\t\t// Sort so that the first selected are shown first\n\t\t\tif (a.selectedPosition === b.selectedPosition) return 0;\n\t\t\tif (a.selectedPosition === null) return 1;\n\t\t\tif (b.selectedPosition === null) return -1;\n\t\t\treturn a.selectedPosition - b.selectedPosition;\n\t\t});\n\n\t\tconst buttons = orderedButtonStateList.map((buttonState, i) => {\n\t\t\treturn (\n\t\t\t\t<TokenButton\n\t\t\t\t\tkey={i}\n\t\t\t\t\ttoken={buttonState.token}\n\t\t\t\t\tvalue={buttonState.value}\n\t\t\t\t\tcolor={buttonState.color} // The order in coinStates, and coinList must stay the same\n\t\t\t\t\tselected={buttonState.selectedPosition !== null}\n\t\t\t\t\tallowDeselect={buttonState.token !== mainToken && numSelected > 1}\n\t\t\t\t\tclickCallback={() => handleTokenButtonClick(buttonState.token)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\treturn buttons;\n\t}, [buttonStates]);\n\n\tconst lineInfoList: LineInfo[] = useMemo(() => {\n\t\tconst list = [];\n\t\tfor (const token in Token) {\n\t\t\tif (buttonStates[token].selectedPosition !== null) {\n\t\t\t\tlist.push({\n\t\t\t\t\tkey: token,\n\t\t\t\t\tcolor: buttonStates[token].color,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}, [buttonStates]);\n\n\treturn (\n\t\t<StyledChartContainer>\n\t\t\t<TimeSeriesChart\n\t\t\t\tchartConfig={chartConfig}\n\t\t\t\ttoken={mainToken}\n\t\t\t\tlineInfoList={lineInfoList}\n\t\t\t\tdataType={DataType.MARKET}\n\t\t\t\tdataSelectorOptions={dataSelectorOptions}\n\t\t\t\ttimeSelectorOptions={timeSelectorOptions}\n\t\t\t\thoverDataCallback={handleHoverData}\n\t\t\t/>\n\t\t\t<Typography.header>Compare to:</Typography.header>\n\t\t\t<CoinRow>{tokenButtons}</CoinRow>\n\t\t</StyledChartContainer>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Break = styled.div`\n\theight: ${({ theme }) => theme.border.thickness};\n\tbackground-color: ${({ theme }) => theme.color.border2};\n\twidth: 100%;\n`;\n\nexport const HideSmall = styled.div`\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tdisplay: none;\n\t`}\n`;\n","import { RefObject, useEffect, useRef } from \"react\";\n\n// From uniswap hooks\nexport function useClickOutside<T extends HTMLElement>(\n\tnode: RefObject<T | undefined>,\n\thandler: undefined | (() => void)\n) {\n\tconst handlerRef = useRef<undefined | (() => void)>(handler);\n\tuseEffect(() => {\n\t\thandlerRef.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (e: MouseEvent) => {\n\t\t\tif (node.current?.contains(e.target as Node) ?? false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (handlerRef.current) handlerRef.current();\n\t\t};\n\n\t\tdocument.addEventListener(\"click\", handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"click\", handleClickOutside);\n\t\t};\n\t}, [node]);\n}\n","export default __webpack_public_path__ + \"static/media/chevronDown.f9d9313d.svg\";","// @ts-nocheck\nimport { useClickOutside } from \"common/hooks/useClickOutside\";\nimport Card from \"components/Card\";\nimport Column from \"components/Column\";\nimport Row from \"components/Row\";\nimport React, { useState, useRef } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Typography } from \"theme\";\nimport Button from \".\";\n\nimport chevronDownIcon from \"assets/chevronDown.svg\";\nimport { rootCertificates } from \"tls\";\n\nconst DropdownButtonWrapper = styled(Button)`\n\tpositon: relative;\n\tborder-radius: ${({ theme }) => theme.radius.md};\n\tbackground-color: ${({ theme }) => theme.color.bg2};\n\twidth: auto;\n\tpadding: 0;\n\toverflow: hidden;\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n`;\n\nconst Base = styled.div`\n\tpadding: 10px;\n\t:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t}\n`;\n\nconst DropdownItem = styled(Row)`\n\tpadding: ${({ theme }) => theme.spacing.sm + \" \" + theme.spacing.md};\n\tborder-radius: ${({ theme }) => theme.radius.md};\n\t:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t}\n`;\n\nconst Overlay = styled.div<{\n\topen: boolean;\n\tleft: number;\n\ttop: number;\n}>`\n\tdisplay: ${({ open }) => (open ? \"block\" : \"none\")};\n\tposition: absolute;\n\tleft: ${({ left }) => left};\n\ttop: ${({ top }) => \"calc(\" + top + \" - 100px\"});\n\toverflow: auto;\n\tz-index: 999;\n`;\n\nconst ChevronArrow = styled.img<{\n\topen?: boolean;\n}>`\n\ttransform: ${({ open }) => (open ? \"rotate(-180deg)\" : \"rotate(0deg)\")};\n\ttransition: 300ms all;\n`;\n\nexport default function DropdownButton({\n\tselectionList,\n\tsetSelectionCallback,\n\tchildren,\n}: {\n\tselectionList: string[];\n\tsetSelectionCallback: (selection: string) => void;\n\tchildren: any;\n}): JSX.Element {\n\tconst theme = useTheme();\n\tconst [overlayIsOpen, setOverlayIsOpen] = useState(false);\n\tconst [position, setPosition] = useState({ left: 0, top: 0 });\n\tconst node = useRef(null);\n\tuseClickOutside(node, overlayIsOpen ? () => setOverlayIsOpen(false) : undefined);\n\n\tfunction handleToggle(event: any) {\n\t\tsetOverlayIsOpen(!overlayIsOpen);\n\t\tconst left = event.target.offsetLeft;\n\t\tconst top = event.target.offsetTop + event.target.offsetHeight;\n\t\tsetPosition({ left: left, top: top });\n\t}\n\n\tconst items = selectionList.map((title, i) => {\n\t\treturn (\n\t\t\t<DropdownItem key={i} onClick={() => setSelectionCallback(title)}>\n\t\t\t\t<Typography.header color={theme.color.text2}>{title}</Typography.header>\n\t\t\t</DropdownItem>\n\t\t);\n\t});\n\n\treturn (\n\t\t<DropdownButtonWrapper>\n\t\t\t<Base onClick={(event) => handleToggle(event)}>\n\t\t\t\t<Row gap={theme.spacing.xxs}>\n\t\t\t\t\t{children}\n\t\t\t\t\t<ChevronArrow src={chevronDownIcon} open={overlayIsOpen} />\n\t\t\t\t</Row>\n\t\t\t</Base>\n\t\t\t<Overlay open={overlayIsOpen}>\n\t\t\t\t<Card padding={0} backgroundColor={theme.color.bg2}>\n\t\t\t\t\t<Column gap={theme.spacing.sm}>{items}</Column>\n\t\t\t\t</Card>\n\t\t\t</Overlay>\n\t\t</DropdownButtonWrapper>\n\t);\n}\n","import React, { useState, useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { DateFormat, EtherscanLinkType, Length, Token, TransactionType } from \"common/enums\";\nimport { useTransactionData } from \"data/hooks\";\nimport Card from \"components/Card\";\nimport { Transaction } from \"common/types\";\nimport Row from \"components/Row\";\nimport { Typography } from \"theme\";\nimport Column from \"components/Column\";\nimport { formatDate, formatNumber, getEtherscanLink, shortAddress } from \"common/utils\";\nimport { StyledExternalLink, StyledInternalLink } from \"components/Link\";\nimport Button from \"components/Button\";\nimport { Break } from \"components/shared\";\nimport DropdownButton from \"components/Button/dropdownButton\";\nimport Skeleton from \"components/Skeleton\";\nimport { TRANSACTIONS_WITHIN_DAYS } from \"common/constants\";\n\nconst TRANSACTIONS_PER_PAGE = 10;\n\nconst RowEntry = styled(Typography.body)<{\n\tleft: boolean;\n}>`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: ${({ left }) => (left ? \"flex-begin\" : \"flex-end\")};\n\talign-items: center;\n\twidth: 100%;\n`;\n\nconst ResponsiveHideRow = styled(Row)`\n\t${({ theme }) => theme.mediaWidth.extraSmall`\n\t\t> *:nth-child(3) {\n\t\t\tdisplay: none;\n\t\t}\n\t\t> *:nth-child(4) {\n\t\t\tdisplay: none;\n\t\t}\n\t`}\n`;\n\nconst ButtonBackground = styled(Button)<{\n\tactive: boolean;\n}>`\n\tbackground-color: ${({ theme }) => theme.color.bg3};\n\tborder-radius: 24px;\n\twidth: 24px;\n\theight: 24px;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.text1};\n\topacity: ${({ active }) => (active ? 1.0 : 0.5)};\n\t:hover {\n\t\topacity: ${({ active }) => (active ? 0.8 : 0.5)};\n\t\tcursor: ${({ active }) => (active ? \"pointer\" : \"not-allowed\")};\n\t}\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n`;\n\nfunction TransactionTableEntry({ transaction }: { transaction: Transaction }): JSX.Element {\n\tconst addressLink = getEtherscanLink(transaction.account, EtherscanLinkType.WALLET);\n\tconst transactionLink = getEtherscanLink(transaction.hash, EtherscanLinkType.TRANSACTION);\n\treturn (\n\t\t<ResponsiveHideRow>\n\t\t\t<RowEntry left={true}>\n\t\t\t\t<StyledExternalLink href={transactionLink}>{transaction.type}</StyledExternalLink>\n\t\t\t</RowEntry>\n\t\t\t<RowEntry>\n\t\t\t\t{formatNumber(transaction.tokenAmount)} {transaction.token}\n\t\t\t</RowEntry>\n\t\t\t<RowEntry>\n\t\t\t\t<StyledExternalLink href={addressLink}>{shortAddress(transaction.account, Length.SHORT)}</StyledExternalLink>\n\t\t\t</RowEntry>\n\t\t\t<RowEntry>{formatDate(transaction.time, DateFormat.SINCE_NOW)}</RowEntry>\n\t\t</ResponsiveHideRow>\n\t);\n}\n\nexport default function TransactionTable({ token }: { token: Token }): JSX.Element {\n\tconst theme = useTheme();\n\tconst [page, setPage] = useState<number>(0);\n\tconst [filterType, setFilterType] = useState<TransactionType | undefined>(undefined);\n\n\tconst transactionData = useTransactionData(token, filterType);\n\n\tconst loadingTransactions = !transactionData;\n\tconst transactionCount = transactionData ? transactionData.length : 0;\n\tconst maxPage = Math.floor(transactionCount / TRANSACTIONS_PER_PAGE);\n\tconst startIndex = page * TRANSACTIONS_PER_PAGE;\n\tconst endIndex = Math.min(startIndex + TRANSACTIONS_PER_PAGE, transactionCount);\n\tconst pageTransactions = transactionData ? transactionData.slice(startIndex, endIndex) : [];\n\n\tconst tableEntries = useMemo(() => {\n\t\tif (!loadingTransactions) {\n\t\t\tif (transactionData.length === 0) {\n\t\t\t\treturn `No ${\n\t\t\t\t\tfilterType ? filterType.toLowerCase() : \"\"\n\t\t\t\t} transactions in the last ${TRANSACTIONS_WITHIN_DAYS} days`;\n\t\t\t} else {\n\t\t\t\treturn pageTransactions.map((transaction: Transaction, i) => (\n\t\t\t\t\t<TransactionTableEntry transaction={transaction} key={i} />\n\t\t\t\t));\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Skeleton count={TRANSACTIONS_PER_PAGE} />;\n\t\t}\n\t}, [pageTransactions, loadingTransactions]);\n\n\tconst dropdownSelections = [\n\t\t\"All\",\n\t\tTransactionType.MINT,\n\t\tTransactionType.REDEEM,\n\t\tTransactionType.BORROW,\n\t\tTransactionType.REPAY_BORROW,\n\t\tTransactionType.LIQUIDATION,\n\t];\n\n\tfunction setSelectionCallback(selection: any) {\n\t\tif (Object.values(TransactionType).includes(selection as TransactionType)) {\n\t\t\tsetFilterType(selection);\n\t\t} else {\n\t\t\tsetFilterType(undefined);\n\t\t}\n\n\t\t// Reset page to 0 on change\n\t\tif (selection !== filterType) {\n\t\t\tsetPage(0);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<Column gap={theme.spacing.md}>\n\t\t\t\t<ResponsiveHideRow overflow=\"visable\">\n\t\t\t\t\t<RowEntry left={true}>\n\t\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\t\tselectionList={dropdownSelections}\n\t\t\t\t\t\t\tsetSelectionCallback={(selection) => setSelectionCallback(selection)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Type: {filterType ?? \"All\"}</Typography.header>\n\t\t\t\t\t\t</DropdownButton>\n\t\t\t\t\t</RowEntry>\n\t\t\t\t\t<RowEntry>\n\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Token Amount</Typography.header>\n\t\t\t\t\t</RowEntry>\n\t\t\t\t\t<RowEntry>\n\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Account</Typography.header>\n\t\t\t\t\t</RowEntry>\n\t\t\t\t\t<RowEntry>\n\t\t\t\t\t\t<Typography.header color={theme.color.text2}>Time</Typography.header>\n\t\t\t\t\t</RowEntry>\n\t\t\t\t</ResponsiveHideRow>\n\t\t\t\t<Break />\n\t\t\t\t{tableEntries}\n\t\t\t\t<Row justify=\"center\" padding={theme.spacing.sm + \" 0\"}>\n\t\t\t\t\t<ButtonBackground onClick={() => setPage(Math.max(0, page - 1))} active={page != 0}>\n\t\t\t\t\t\t←\n\t\t\t\t\t</ButtonBackground>\n\t\t\t\t\t{loadingTransactions ? <Skeleton width=\"70px\" /> : `Page ${page + 1} of ${maxPage + 1}`}\n\t\t\t\t\t<ButtonBackground onClick={() => setPage(Math.min(maxPage, page + 1))} active={page != maxPage}>\n\t\t\t\t\t\t→\n\t\t\t\t\t</ButtonBackground>\n\t\t\t\t</Row>\n\t\t\t</Column>\n\t\t</Card>\n\t);\n}\n","import React, { useState, useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { EtherscanLinkType, Length, Token, UserType } from \"common/enums\";\nimport Card from \"components/Card\";\nimport { useUserDominanceData } from \"data/hooks\";\nimport { OptionButton, OptionButtonVariantBackdrop } from \"components/Button\";\nimport TooltipText from \"components/TooltipText\";\nimport Column from \"components/Column\";\nimport { theme, Typography } from \"theme\";\nimport Row from \"components/Row\";\nimport { UserDominanceDataEntry } from \"common/types\";\nimport { formatNumber, getEtherscanLink, shortAddress } from \"common/utils\";\nimport { StyledExternalLink } from \"components/Link\";\nimport Skeleton from \"components/Skeleton\";\nimport { NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE } from \"common/constants\";\n\nconst RowNumberBackground = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tbackground-color: ${({ theme }) => theme.color.bg0};\n\twidth: 20px;\n\theight: 20px;\n\tborder-radius: 10px;\n`;\n\nfunction UserDominaceRowEntry({ entry, num }: { entry: UserDominanceDataEntry; num: number }): JSX.Element {\n\tconst theme = useTheme();\n\n\tconst accountLink = getEtherscanLink(entry.account, EtherscanLinkType.WALLET);\n\n\treturn (\n\t\t<Row justify=\"space-between\">\n\t\t\t<RowNumberBackground>\n\t\t\t\t<Typography.caption color={theme.color.text2} fontWeight={600}>\n\t\t\t\t\t{num}\n\t\t\t\t</Typography.caption>\n\t\t\t</RowNumberBackground>\n\t\t\t<StyledExternalLink href={accountLink}>{shortAddress(entry.account, Length.SHORT)}</StyledExternalLink>\n\t\t\t<Row justify=\"flex-end\">\n\t\t\t\t<Typography.header>{formatNumber(entry.underlyingAmount)}</Typography.header>\n\t\t\t\t<Typography.header color={theme.color.text2}>({formatNumber(entry.percentDominance, \"%\")})</Typography.header>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n}\n\nexport default function UserDominace({ token }: { token: Token }): JSX.Element {\n\tconst theme = useTheme();\n\tconst [selection, setSelection] = useState<UserType>(UserType.SUPPLIER);\n\n\tconst userDominanceData = useUserDominanceData(token);\n\n\tconst selectionButtons = useMemo(() => {\n\t\tconst selectors = [UserType.SUPPLIER, UserType.BORROWER];\n\n\t\treturn selectors.map((selector, i) => {\n\t\t\treturn (\n\t\t\t\t<OptionButton\n\t\t\t\t\tkey={i}\n\t\t\t\t\tbuttonContent={selector + \"s\"}\n\t\t\t\t\tactive={selection === selector}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSelection(selector);\n\t\t\t\t\t}}\n\t\t\t\t\tflex={1}\n\t\t\t\t\tvariant\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}, [setSelection, selection]);\n\n\tconst rows = useMemo(() => {\n\t\tif (userDominanceData[selection].length > 0) {\n\t\t\treturn userDominanceData[selection].map((entry, i) => {\n\t\t\t\treturn <UserDominaceRowEntry entry={entry} num={i + 1} key={i} />;\n\t\t\t});\n\t\t} else {\n\t\t\treturn <Skeleton count={10} height=\"25px\" />;\n\t\t}\n\t}, [userDominanceData, selection]);\n\n\tconst topTenDominance = useMemo(() => {\n\t\treturn userDominanceData[selection].reduce((sum, entry) => {\n\t\t\treturn sum + entry.percentDominance;\n\t\t}, 0);\n\t}, [userDominanceData, selection]);\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Column align=\"flex-start\">\n\t\t\t\t\t<OptionButtonVariantBackdrop width=\"100%\">{selectionButtons}</OptionButtonVariantBackdrop>\n\t\t\t\t\t<Row justify=\"space-between\">\n\t\t\t\t\t\t<TooltipText\n\t\t\t\t\t\t\tbaseText={\n\t\t\t\t\t\t\t\t<Typography.header color={theme.color.bg4}>\n\t\t\t\t\t\t\t\t\tTop {NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE} dominance\n\t\t\t\t\t\t\t\t</Typography.header>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltipContent={`The top ${NUM_TOP_ACCOUNT_FOR_USER_DOMINANCE} ${\n\t\t\t\t\t\t\t\tselection == UserType.SUPPLIER ? \"suppliers\" : \"borrowers\"\n\t\t\t\t\t\t\t} make up this percentage of the total ${selection == UserType.SUPPLIER ? \"suppy\" : \"borrowed\"}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography.header>\n\t\t\t\t\t\t\t{userDominanceData[selection].length > 0 ? formatNumber(topTenDominance, \"%\") : <Skeleton width=\"40px\" />}\n\t\t\t\t\t\t</Typography.header>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{rows}\n\t\t\t\t</Column>\n\t\t\t</Card>\n\t\t</>\n\t);\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { TOKEN_INFO } from \"common/constants\";\n\nimport { formatNumber, getEtherscanLink, getTokenForUnderlyingSymbol, shortAddress } from \"common/utils\";\nimport ApyChartContainer from \"components/ApyChartContainer\";\nimport {\n\tuseMarketSummaryData,\n\tuseTestData,\n\tuseTimeSeriesData,\n\tuseTransactionData,\n\tuseUserDominanceData,\n} from \"data/hooks\";\nimport Card, { StatCard, ProgressCard, CoinInfoCard } from \"components/Card\";\nimport Row, { ResponsiveJustifyRow, ResponsiveRow } from \"components/Row\";\nimport Column from \"components/Column\";\nimport { mediaQuerySizes, Typography } from \"theme\";\nimport { StyledInternalLink, StyledExternalLink } from \"components/Link\";\nimport { SectionTitle, StyledDisclaimer } from \"components/SpecialText\";\nimport { TokenLogo } from \"components/Logo\";\nimport TooltipText from \"components/TooltipText\";\nimport { ToggleButton } from \"components/Button\";\nimport TimeSeriesChart from \"components/Chart/TimeSeriesChart\";\nimport TokenSelectorTimeSeriesChart from \"components/Chart/TokenSelectorTimeSeriesChart\";\nimport MultilineChart from \"components/Chart/MultilineChart\";\n\nimport { ChartConfig } from \"common/types\";\nimport { DataType, EtherscanLinkType, Length, MarketDataSelector, TimeSelector } from \"common/enums\";\nimport TransactionTable from \"components/TransactionTable\";\nimport UserDominace from \"components/UserDominance\";\nimport Skeleton from \"components/Skeleton\";\n\nfunction StatRow({ title, value, unit, tooltipContent, loading }) {\n\tconst theme = useTheme();\n\tconst formattedValue = formatNumber(value, unit);\n\treturn (\n\t\t<Row justify=\"space-between\">\n\t\t\t<TooltipText\n\t\t\t\tbaseText={<Typography.header color={theme.color.text2}>{title}</Typography.header>}\n\t\t\t\ttooltipContent={tooltipContent}\n\t\t\t></TooltipText>\n\t\t\t{loading ? <Skeleton width=\"70px\" height=\"25px\" /> : <Typography.header>{formattedValue}</Typography.header>}\n\t\t</Row>\n\t);\n}\n\n// Main content of the market page\nexport default function Market({ match }): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst gap = theme.spacing.lg;\n\tconst [includeComp, setIncludeComp] = useState<boolean>(false);\n\tconst [showInUsd, setShowInUsd] = useState<boolean>(false);\n\n\tconst underlyingSymbol = match.params.token; // From url\n\tconst token = getTokenForUnderlyingSymbol(underlyingSymbol);\n\n\t// Scroll to the top of the page\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, [match.params.token]);\n\n\tconst summaryData = useMarketSummaryData(token);\n\n\tif (!token) {\n\t\treturn <Redirect to={\"/\"} />;\n\t}\n\n\tif (Array.isArray(summaryData)) {\n\t\t// Won't ever get her\n\t\treturn null;\n\t}\n\n\tconst loadingSummaryData = !summaryData;\n\n\tconst tokenInfo = TOKEN_INFO[token];\n\tconst cTokenAddress = summaryData ? summaryData.id : \"\";\n\tconst etherscanLink = getEtherscanLink(cTokenAddress, EtherscanLinkType.TOKEN);\n\n\tconst extraSmallScreen = window.innerWidth < mediaQuerySizes.extraSmall;\n\tconst singleColumn = window.innerWidth < mediaQuerySizes.small;\n\n\tconst tokenSelectorChartConfig: ChartConfig = {\n\t\tshowAvg: !extraSmallScreen,\n\t\tshowXAxis: false,\n\t\tshowYAxis: false,\n\t\tshowXTick: true,\n\t\tshowYTick: !extraSmallScreen,\n\t\tshowHorizontalGrid: !extraSmallScreen,\n\t\tshowVerticalGrid: false,\n\t\tshowAreaGradient: true,\n\t\tnumberOfXAxisTicks: 3,\n\t\tanimate: true,\n\t\tshowValueInTooltip: extraSmallScreen,\n\t\tbaseChartHeightPx: 300,\n\t};\n\n\tconst apyChartDataSelectors = includeComp\n\t\t? [MarketDataSelector.TOTAL_SUPPLY_APY, MarketDataSelector.TOTAL_BORROW_APY]\n\t\t: [MarketDataSelector.SUPPLY_APY, MarketDataSelector.BORROW_APY];\n\n\tconst supplyBorrowReservesChartDataSelectors = showInUsd\n\t\t? [MarketDataSelector.TOTAL_SUPPLY_USD, MarketDataSelector.TOTAL_BORROW_USD, MarketDataSelector.TOTAL_RESERVES_USD]\n\t\t: [MarketDataSelector.TOTAL_SUPPLY, MarketDataSelector.TOTAL_BORROW, MarketDataSelector.TOTAL_RESERVES];\n\n\tconst tokenPriceDataSelectors = [MarketDataSelector.USDC_PER_UNDERLYING];\n\n\tconst lowerChartsConfig: ChartConfig = {\n\t\tshowAvg: false,\n\t\tshowXAxis: false,\n\t\tshowYAxis: false,\n\t\tshowXTick: true,\n\t\tshowYTick: false,\n\t\tshowHorizontalGrid: false,\n\t\tshowVerticalGrid: false,\n\t\tshowAreaGradient: true,\n\t\tnumberOfXAxisTicks: 3,\n\t\tanimate: true,\n\t\tshowValueInTooltip: true,\n\t\tbaseChartHeightPx: 200,\n\t};\n\n\tconst timeSelectorOptions = [\n\t\tTimeSelector.ONE_DAY,\n\t\tTimeSelector.ONE_WEEK,\n\t\tTimeSelector.ONE_MONTH,\n\t\tTimeSelector.THREE_MONTHS,\n\t\tTimeSelector.ONE_YEAR,\n\t\tTimeSelector.ALL,\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Typography.body color=\"text2\">\n\t\t\t\t\t<StyledInternalLink to={\"/\"}>Market</StyledInternalLink>\n\t\t\t\t\t{\" / \"}\n\t\t\t\t\t<StyledExternalLink href={etherscanLink} variant=\"secondary\">\n\t\t\t\t\t\tc{token} ({shortAddress(cTokenAddress, Length.MEDIUM)})\n\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t</Typography.body>\n\t\t\t</Row>\n\t\t\t<Row height=\"40px\" margin={\"20px 0\"}>\n\t\t\t\t<TokenLogo token={token} size=\"40px\" />\n\t\t\t\t<Typography.displayXL>{token}</Typography.displayXL>\n\t\t\t</Row>\n\t\t\t<ResponsiveRow align=\"flex-start\" gapSmall={gap} gap={theme.spacing.xl}>\n\t\t\t\t<Column flex={2} gap={gap}>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<ResponsiveRow xs={true}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Typography.displayS>APY Performance</Typography.displayS>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<ResponsiveJustifyRow justifyLarge=\"flex-end\" justifySmall=\"flex-end\" justifyExtraSmall=\"flex-start\">\n\t\t\t\t\t\t\t\t<TooltipText\n\t\t\t\t\t\t\t\t\tbaseText={<Typography.body color={theme.color.text2}>Include COMP</Typography.body>}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"Toggle to include the COMP token distribution in the APY chart data. Note that a negative borrow rate means that the Compound protocol pays you.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleButton active={includeComp} onClick={() => setIncludeComp(!includeComp)} />\n\t\t\t\t\t\t\t</ResponsiveJustifyRow>\n\t\t\t\t\t\t</ResponsiveRow>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<TokenSelectorTimeSeriesChart\n\t\t\t\t\t\t\t\tchartConfig={tokenSelectorChartConfig}\n\t\t\t\t\t\t\t\tdataSelectorOptions={apyChartDataSelectors}\n\t\t\t\t\t\t\t\ttimeSelectorOptions={timeSelectorOptions}\n\t\t\t\t\t\t\t\tmainToken={token}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<ResponsiveRow xs={true}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Typography.displayS>Supply, Borrow and Reserves</Typography.displayS>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<ResponsiveJustifyRow justifyLarge=\"flex-end\" justifySmall=\"flex-end\" justifyExtraSmall=\"flex-start\">\n\t\t\t\t\t\t\t\t<TooltipText\n\t\t\t\t\t\t\t\t\tbaseText={<Typography.body color={theme.color.text2}>Show in USD</Typography.body>}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"Toggle to convert to total number of tokens supplied, borrowed and in reserves to the USD equivilent values. That is, the number of tokens, times the token value at that time.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleButton active={showInUsd} onClick={() => setShowInUsd(!showInUsd)} />\n\t\t\t\t\t\t\t</ResponsiveJustifyRow>\n\t\t\t\t\t\t</ResponsiveRow>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<TimeSeriesChart\n\t\t\t\t\t\t\t\tchartConfig={lowerChartsConfig}\n\t\t\t\t\t\t\t\tlineInfoList={[{ key: token, color: theme.color.lineChartColors[1] }]}\n\t\t\t\t\t\t\t\tdataType={DataType.MARKET}\n\t\t\t\t\t\t\t\tdataSelectorOptions={supplyBorrowReservesChartDataSelectors}\n\t\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\t\ttimeSelectorOptions={timeSelectorOptions}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t{!singleColumn && (\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Typography.displayS>Transactions</Typography.displayS>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<TransactionTable token={underlyingSymbol} />\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t)}\n\t\t\t\t</Column>\n\t\t\t\t<Column gap={gap}>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Typography.displayS>Key Statistics</Typography.displayS>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Column gap={theme.spacing.lg}>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Token price\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The current price of the asset.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.usdcPerUnderlying : 0}\n\t\t\t\t\t\t\t\t\tunit=\"$\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Total supplied\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The total value (USD) of tokens supplied to the market.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.totalSupply * summaryData.usdcPerUnderlying : 0}\n\t\t\t\t\t\t\t\t\tunit=\"$\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Total borrow\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The total amount of funds borrowed from the market. (USD)\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.totalBorrow * summaryData.usdcPerUnderlying : 0}\n\t\t\t\t\t\t\t\t\tunit=\"$\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Utilization\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"How much of the total supply is in use at a given time. If there's $100 in the pool and no one borrows anything, the utilization rate is 0%. If someone borrows $10, it's 10%, and so on. If an asset is 100% utilized, there's nothing in the pool right now - suppliers can't withdraw their original cash, and borrowers can't take out loans.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.utilization : 0}\n\t\t\t\t\t\t\t\t\tunit=\"%\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Reverses\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"Compound takes a portion of all the interest paid by borrowers and stores it in a pool that acts as  insurance for lenders against borrower default and liquidation. The reserve pool is controlled by COMP token holders.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.totalReserves * summaryData.usdcPerUnderlying : 0}\n\t\t\t\t\t\t\t\t\tunit=\"$\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Reserve factor\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The percentage of a given asset's accrued interest that gets put into a reserve pool. A 5% reserve factor = 5% of the interest paid by borrowers gets put into the pool (which provides a safety net for lenders against borrower default and liquidation).\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.reserveFactor : 0}\n\t\t\t\t\t\t\t\t\tunit=\"%\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Collateral factor\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"Each asset has a unique collateral factor that determines the maximum amount a user can borrow from the pool, relative to how much of that asset they supplied. If the collateral factor for ETH is 50%, a user who supplied 100 ETH can borrow a maximum of 50 ETH worth of other assets at a given time.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.collateralFactor : 0}\n\t\t\t\t\t\t\t\t\tunit=\"%\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Borrow cap\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The maximum amount of an asset that can be borrowed from the market. The borrow cap is controlled by COMP token holders.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? (summaryData.borrowCap !== \"0\" ? summaryData.borrowCap : \"No limit\") : 0}\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Available liquidity\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The amount of assets that are currently available to be borrowed from the market. \"\n\t\t\t\t\t\t\t\t\tvalue={summaryData ? summaryData.availableLiquidityUsd : 0}\n\t\t\t\t\t\t\t\t\tunit=\"$\"\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Number of suppliers\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The number of wallets currently supplying this market.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData.numberOfSuppliers}\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<StatRow\n\t\t\t\t\t\t\t\t\ttitle={\"Number of borrowers\"}\n\t\t\t\t\t\t\t\t\ttooltipContent=\"The number of wallets currently borrowing this asset.\"\n\t\t\t\t\t\t\t\t\tvalue={summaryData.numberOfBorrowers}\n\t\t\t\t\t\t\t\t\tloading={loadingSummaryData}\n\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Typography.displayS>User Dominance</Typography.displayS>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<UserDominace token={token} />\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Typography.displayS>About {token}</Typography.displayS>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<CoinInfoCard\n\t\t\t\t\t\t\tvalue={tokenInfo.desc}\n\t\t\t\t\t\t\twhitepaper={tokenInfo.whitepaper}\n\t\t\t\t\t\t\twebsite={tokenInfo.website}\n\t\t\t\t\t\t\ttwitter={tokenInfo.twitter}\n\t\t\t\t\t\t\tcoingecko={tokenInfo.coingecko}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Column>\n\n\t\t\t\t\t{singleColumn && (\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Typography.displayS>Transactions</Typography.displayS>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<TransactionTable token={underlyingSymbol} />\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t)}\n\t\t\t\t</Column>\n\t\t\t</ResponsiveRow>\n\t\t</>\n\t);\n}\n","import { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\n// fires a GA pageview every time the route changes\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }) {\n\tuseEffect(() => {\n\t\tReactGA.pageview(`${pathname}${search}`);\n\t}, [pathname, search]);\n\treturn null;\n}\n","export default __webpack_public_path__ + \"static/media/questionIcon.927e1e7a.svg\";","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { StyledExternalLink } from \"components/Link\";\nimport { Break } from \"components/shared\";\nimport Button from \".\";\nimport { Typography } from \"theme\";\nimport Card from \"components/Card\";\nimport Row from \"components/Row\";\nimport questionIcon from \"assets/questionIcon.svg\";\nimport { useClickOutside } from \"common/hooks/useClickOutside\";\nimport { URLS } from \"common/constants\";\n\nconst IconButtonWrapper = styled.div`\n\tpositon: relative;\n\tborder-radius: ${({ theme }) => theme.radius.md};\n\t:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t}\n`;\n\nconst StyledIconButton = styled.img`\n\tpadding: ${({ theme }) => theme.spacing.sm};\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst Overlay = styled.span<{\n\topen: boolean;\n}>`\n\tdisplay: ${({ open }) => (open ? \"block\" : \"none\")};\n\tposition: absolute;\n\tright: ${({ theme }) => theme.spacing.md};\n\ttop: calc(100% + ${({ theme }) => theme.spacing.xxs});\n\tmax-width: 400px;\n`;\n\nexport function IconButton({}) {\n\tconst [overlayIsOpen, setOverlayIsOpen] = useState(false);\n\tconst node = useRef(null);\n\tuseClickOutside(node, overlayIsOpen ? () => setOverlayIsOpen(false) : undefined);\n\n\treturn (\n\t\t<IconButtonWrapper ref={node}>\n\t\t\t<Button onClick={() => setOverlayIsOpen(!overlayIsOpen)}>\n\t\t\t\t<StyledIconButton src={questionIcon} />\n\t\t\t</Button>\n\t\t\t<Overlay open={overlayIsOpen}>\n\t\t\t\t<Card column>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Typography.caption>\n\t\t\t\t\t\t\tThis app is an open-source standalone dashboard for the{\" \"}\n\t\t\t\t\t\t\t<StyledExternalLink href={URLS.COMPOUND_FINANCE} variant=\"secondary\">\n\t\t\t\t\t\t\t\tCompound protocol\n\t\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\t\t. It was built to provide transparency on historical market APYs to borrowers and lenders in hopes of\n\t\t\t\t\t\t\timproving investment decisions.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tHave a question? Want to improve the dashboard? Feel free to open an issue on{\" \"}\n\t\t\t\t\t\t\t<StyledExternalLink href={URLS.GITHUB} variant=\"secondary\">\n\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</Typography.caption>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Break />\n\t\t\t\t\t<Typography.caption>\n\t\t\t\t\t\tPowered by{\" \"}\n\t\t\t\t\t\t<StyledExternalLink href={URLS.SUBGRAPH_FRONT_END} variant=\"secondary\">\n\t\t\t\t\t\t\tThe Graph\n\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\t.\n\t\t\t\t\t</Typography.caption>\n\t\t\t\t</Card>\n\t\t\t</Overlay>\n\t\t</IconButtonWrapper>\n\t);\n}\n","import React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { StyledExternalLink, StyledInternalLink } from \"components/Link\";\nimport Row from \"components/Row\";\nimport Column from \"components/Column\";\nimport { Typography } from \"theme\";\nimport { HideSmall } from \"components/shared\";\nimport { IconButton } from \"components/Button/iconButton\";\nimport { useDataStatus } from \"data/hooks\";\nimport { formatDate, formatNumber } from \"common/utils\";\nimport { URLS } from \"common/constants\";\nimport { DateFormat } from \"common/enums\";\n\nconst StyledHeader = styled(Row)`\n\twidth: 100%;\n\tbackground-color: ${({ theme }) => theme.color.bg0};\n\tjustify-content: space-between;\n\tpadding: ${({ theme }) => theme.spacing.sm + \" \" + theme.spacing.md};\n\talign-items: center;\n\tz-index: 999;\n`;\n\nconst DataErrorBanner = styled(Row)`\n\twidth: 100%;\n\tcolor: ${({ theme }) => theme.color.warning};\n\tpadding: ${({ theme }) => theme.spacing.md};\n\tjustify-content: center;\n\tbackground-color: ${({ theme }) => theme.color.warning2};\n\ttext-align: center;\n`;\n\nexport default function Header({\n\tdataError,\n\tlastSyncedDate,\n}: {\n\tdataError: boolean;\n\tlastSyncedDate: number;\n}): JSX.Element {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<>\n\t\t\t{dataError && (\n\t\t\t\t<DataErrorBanner>\n\t\t\t\t\t<Typography.header color={theme.color.warning1}>\n\t\t\t\t\t\t{/* This site is currently experiencing data issues, the last synced data is from{\" \"} */}\n\t\t\t\t\t\t<StyledExternalLink href={URLS.SUBGRAPH_FRONT_END} variant=\"secondary\">\n\t\t\t\t\t\t\tThe subgraph{\" \"}\n\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\tused for this sites data is currently indexing, the last indexed date is{\" \"}\n\t\t\t\t\t\t{formatDate(lastSyncedDate, DateFormat.MMM_DD_YY)}\n\t\t\t\t\t</Typography.header>\n\t\t\t\t</DataErrorBanner>\n\t\t\t)}\n\t\t\t<StyledHeader>\n\t\t\t\t<StyledInternalLink to=\"/\">\n\t\t\t\t\t<Typography.displayL>Compound Info</Typography.displayL>\n\t\t\t\t</StyledInternalLink>\n\t\t\t\t<HideSmall>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<IconButton />\n\t\t\t\t\t\t{/* <GasTracker /> */}\n\t\t\t\t\t</Row>\n\t\t\t\t</HideSmall>\n\t\t\t</StyledHeader>\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { StyledExternalLink } from \"components/Link\";\nimport { ResponsiveRow } from \"components/Row\";\nimport Column from \"components/Column\";\nimport { URLS } from \"common/constants\";\nimport { Typography } from \"theme\";\nimport { Break } from \"components/shared\";\n\nconst StyledFooter = styled.div`\n\tdisplay: flex;\n\theight: 72px;\n\twidth: 100%;\n\talign-items: center;\n\tpadding-bottom: 30px;\n\tpadding-top: 50px;\n\tmargin-top: ${({ theme }) => theme.spacing.xl};\n\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tpadding-bottom: 180px;\n\t`}\n`;\n\nexport default function Footer() {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<StyledFooter>\n\t\t\t<Column>\n\t\t\t\t<Break />\n\t\t\t\t<ResponsiveRow padding={theme.spacing.lg + \" 0\"} justify=\"space-between\">\n\t\t\t\t\t<Typography.subheader color={theme.color.text2}>\n\t\t\t\t\t\t© 2021{\" \"}\n\t\t\t\t\t\t<StyledExternalLink href={URLS.PAPERCLIP_HOME} variant=\"secondary\">\n\t\t\t\t\t\t\tPaperclip Labs\n\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t</Typography.subheader>\n\t\t\t\t\t<Typography.subheader color={theme.color.text2}>\n\t\t\t\t\t\t<ResponsiveRow gap={\"32px\"}>\n\t\t\t\t\t\t\t<StyledExternalLink href={URLS.COMPOUND_GRANTS} variant=\"secondary\">\n\t\t\t\t\t\t\t\tCompound Grants Batch 2\n\t\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\t\t<StyledExternalLink href={URLS.GITHUB} variant=\"secondary\">\n\t\t\t\t\t\t\t\tGithub\n\t\t\t\t\t\t\t</StyledExternalLink>\n\t\t\t\t\t\t</ResponsiveRow>\n\t\t\t\t\t</Typography.subheader>\n\t\t\t\t</ResponsiveRow>\n\t\t\t</Column>\n\t\t</StyledFooter>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/compoundLogo.dfb35bbc.svg\";","import React, { useState, useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport Row from \"components/Row\";\nimport Column from \"components/Column\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"theme\";\nimport { formatNumber, getTokenForUnderlyingSymbol } from \"common/utils\";\nimport { TokenLogo } from \"components/Logo\";\nimport { SortButton } from \"components/Button\";\n\nimport { MarketSummaryData, MarketSummaryDataSelectorInfo } from \"common/types\";\nimport { MarketDataSelector, Unit } from \"common/enums\";\nimport { MARKET_DATA_SELECTOR_INFO } from \"common/constants\";\nimport Skeleton from \"components/Skeleton\";\n\nconst StyledTableRow = styled(Row)`\n\tpadding: ${({ theme }) => theme.spacing.md};\n\tbackground-color: ${({ theme }) => theme.color.bg2};\n\tborder-radius: ${({ theme }) => theme.radius.md};\n\tbox-shadow: ${({ theme }) => theme.shadow.card};\n\t:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: ${({ theme }) => theme.color.bg3};\n\t}\n\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tpadding: ${theme.spacing.md} ${theme.spacing.sm};\n\t\t> *:nth-child(2n) {\n\t\t\tdisplay: none;\n\t\t}\n\t`}\n`;\n\nconst StyledTableHeader = styled(Row)`\n\tjustify-content: space-between;\n\tpadding: ${({ theme }) => theme.spacing.md};\n\tbackground-color: ${({ theme }) => theme.color.bg1};\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tjustify-content: space-between;\n\t\tfont-size: 14px !important;\n\t\tpadding: ${theme.spacing.sm};\n\t\tbackground-color: ${theme.color.bg1};\n\t\t\t> *:nth-child(2n) {\n\t\t\t\tdisplay: none;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t`}\n`;\n\nconst LinkWrapper = styled(Link)`\n\ttext-decoration: none;\n\tdisplay: flex;\n\tpadding: 0;\n\twidth: 100%;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst RowEntry = styled(Typography.body)<{\n\tleft: boolean;\n}>`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: ${({ left }) => (left ? \"flex-begin\" : \"flex-end\")};\n\talign-items: center;\n\twidth: 100%;\n`;\n\n/**\n * Display the table row react component\n * @param marketData the market data the row is going to display\n * @param columnInfoList list of data info to select which column from the data to display\n */\nfunction TableRow({\n\tmarketData,\n\tcolumnInfoList,\n}: {\n\tmarketData: MarketSummaryData;\n\tcolumnInfoList: MarketSummaryDataSelectorInfo[];\n}): JSX.Element | null {\n\tconst token = getTokenForUnderlyingSymbol(marketData.underlyingSymbol);\n\n\tif (!token) {\n\t\treturn null;\n\t}\n\n\t// Left align the first column, and put the coin logo beside it\n\tconst rowData = columnInfoList.map((columnInfo, i) => {\n\t\treturn (\n\t\t\t<RowEntry key={i} left={i === 0}>\n\t\t\t\t{i === 0 && !!token && <TokenLogo token={token} />}\n\t\t\t\t{formatNumber(marketData[columnInfo.key] ?? 0, columnInfo.unit)}\n\t\t\t</RowEntry>\n\t\t);\n\t});\n\n\treturn <LinkWrapper to={\"/\" + token}>{<StyledTableRow>{rowData}</StyledTableRow>}</LinkWrapper>;\n}\n\n/**\n * Displays CoinTable react component with each row in the table being a rows of the data, and columns from the columnInfo list\n * @param data market summary data list\n * @param dataSelectors the fields from the data to display in the table, they will be displayed in the order they are passed\n */\nexport default function TokenTable({\n\tdata,\n\tdataSelectors,\n}: {\n\tdata: MarketSummaryData[] | undefined;\n\tdataSelectors: MarketDataSelector[];\n}): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst [sortKey, setSortKey] = useState<keyof MarketSummaryData>(dataSelectors[0]);\n\tconst [isAsc, setIsAsc] = useState<boolean>(false);\n\n\tconst sortedData = data ? sortData(data, sortKey, isAsc) : undefined;\n\n\t// List of dataSelectorInfo, which is used for each column in the table\n\tconst columnInfoList: MarketSummaryDataSelectorInfo[] = useMemo(() => {\n\t\tlet infoList = dataSelectors.map(\n\t\t\t(selector) => MARKET_DATA_SELECTOR_INFO[selector] as MarketSummaryDataSelectorInfo\n\t\t);\n\t\tconst tokenSelectorInfo: MarketSummaryDataSelectorInfo = {\n\t\t\tkey: \"underlyingSymbol\",\n\t\t\tname: \"Asset\",\n\t\t\tdescription: \"\",\n\t\t\tunit: Unit.UNITLESS,\n\t\t};\n\t\tinfoList = [tokenSelectorInfo, ...infoList];\n\t\treturn infoList;\n\t}, [dataSelectors]);\n\n\tconst sortButtons = useMemo(() => {\n\t\tconst buttons = columnInfoList.map((columnInfo, i) => {\n\t\t\treturn (\n\t\t\t\t<RowEntry key={i} left={i === 0}>\n\t\t\t\t\t<SortButton\n\t\t\t\t\t\tname={columnInfo.name}\n\t\t\t\t\t\tisActive={columnInfo.key === sortKey}\n\t\t\t\t\t\thandleClick={() => {\n\t\t\t\t\t\t\tif (sortKey === columnInfo.key) {\n\t\t\t\t\t\t\t\tsetIsAsc(!isAsc);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetIsAsc(false);\n\t\t\t\t\t\t\t\tsetSortKey(columnInfo.key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tisAsc={isAsc}\n\t\t\t\t\t/>\n\t\t\t\t</RowEntry>\n\t\t\t);\n\t\t});\n\n\t\treturn buttons;\n\t}, [columnInfoList, sortKey, isAsc]);\n\n\tconst rows = useMemo(() => {\n\t\tif (sortedData) {\n\t\t\treturn sortedData.map((marketData, i) => {\n\t\t\t\treturn <TableRow key={i} marketData={marketData} columnInfoList={columnInfoList} />;\n\t\t\t});\n\t\t} else {\n\t\t\treturn <Skeleton count={10} height=\"50px\" />;\n\t\t}\n\t}, [sortedData, columnInfoList]);\n\n\treturn (\n\t\t<Column>\n\t\t\t<StyledTableHeader>{sortButtons}</StyledTableHeader>\n\t\t\t{rows}\n\t\t</Column>\n\t);\n}\n\n/**\n * Sort the data with the key ascending or decending\n * @param data list of data to be sorted\n * @param key key to sort the data on, this is a column in the data\n * @param asc sorts assending if true, decending if false\n * @returns sorted list of data\n */\nfunction sortData(data: MarketSummaryData[], key: keyof MarketSummaryData, asc: boolean): MarketSummaryData[] {\n\tconst sortedData = [...data].sort((a, b) => {\n\t\tconst compVala = isNaN(Number(a[key])) ? a[key] : Number(a[key]);\n\t\tconst compValb = isNaN(Number(b[key])) ? b[key] : Number(b[key]);\n\t\tconst val = compVala > compValb ? 1 : -1;\n\t\treturn asc ? val : -val;\n\t});\n\treturn sortedData;\n}\n","// @ts-nocheck\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { TimeSelector, MarketDataSelector, ProtocolDataSelector, DataType } from \"common/enums\";\n\nimport { Typography } from \"theme\";\nimport compoundLogo from \"assets/compoundLogo.svg\";\nimport Logo from \"components/Logo\";\nimport Row, { ResponsiveJustifyRow, ResponsiveRow } from \"components/Row\";\nimport Card, { StatCard, ProgressCard } from \"components/Card\";\nimport TokenTable from \"components/TokenTable\";\nimport { ToggleButton } from \"components/Button\";\nimport TooltipText from \"components/TooltipText\";\nimport TimeSeriesChart from \"components/Chart/TimeSeriesChart\";\n\nimport { useMarketSummaryData, useProtocolSummaryData } from \"data/hooks\";\n\nconst TableCard = styled(Card)`\n\tpadding: ${({ theme }) => theme.spacing.md + \" \" + theme.spacing.lg};\n\t${({ theme }) => theme.mediaWidth.small`\n\t\tpadding: ${theme.spacing.md + \" \" + theme.spacing.md};\n\t`}\n`;\n\nexport default function Overview(): JSX.Element | null {\n\tconst theme = useTheme();\n\tconst gap = theme.spacing.md;\n\tconst [includeComp, setIncludeComp] = useState<boolean>(false);\n\n\tconst protocolSummaryData = useProtocolSummaryData();\n\tconst marketSummaryData = useMarketSummaryData();\n\n\tconst protocolSummaryDataLoading = !protocolSummaryData;\n\n\t// Scroll to the top of the page on first visit\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\tconst tokenTableDataSelectors = useMemo(() => {\n\t\tif (includeComp) {\n\t\t\treturn [\n\t\t\t\tMarketDataSelector.TOTAL_SUPPLY_USD,\n\t\t\t\tMarketDataSelector.TOTAL_SUPPLY_APY,\n\t\t\t\tMarketDataSelector.TOTAL_BORROW_USD,\n\t\t\t\tMarketDataSelector.TOTAL_BORROW_APY,\n\t\t\t];\n\t\t} else {\n\t\t\treturn [\n\t\t\t\tMarketDataSelector.TOTAL_SUPPLY_USD,\n\t\t\t\tMarketDataSelector.SUPPLY_APY,\n\t\t\t\tMarketDataSelector.TOTAL_BORROW_USD,\n\t\t\t\tMarketDataSelector.BORROW_APY,\n\t\t\t];\n\t\t}\n\t}, [includeComp]);\n\n\tconst chartConfig: chart_config_S = {\n\t\tshowAvg: false,\n\t\tshowXAxis: false,\n\t\tshowYAxis: false,\n\t\tshowXTick: true,\n\t\tshowYTick: false,\n\t\tshowHorizontalGrid: false,\n\t\tshowVerticalGrid: false,\n\t\tshowAreaGradient: true,\n\t\tnumberOfXAxisTicks: 3,\n\t\tshowCurrentValue: true,\n\t\tanimate: true,\n\t\tshowValueInTooltip: true,\n\t\tbaseChartHeightPx: 200,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row height=\"40px\" margin={\"20px 0\"}>\n\t\t\t\t<Logo src={compoundLogo} size=\"40px\" />\n\t\t\t\t<Typography.displayXL>Compound Protocol</Typography.displayXL>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Typography.displayS>All Markets</Typography.displayS>\n\t\t\t</Row>\n\t\t\t<ResponsiveRow gap={gap} align=\"streach\">\n\t\t\t\t<Card height=\"auto\">\n\t\t\t\t\t<TimeSeriesChart\n\t\t\t\t\t\tchartConfig={chartConfig}\n\t\t\t\t\t\tlineInfoList={[{ key: \"value\", color: theme.color.lineChartColors[0] }]}\n\t\t\t\t\t\tdataType={DataType.PROTOCOL}\n\t\t\t\t\t\tdataSelectorOptions={[ProtocolDataSelector.TOTAL_SUPPLY_USD, ProtocolDataSelector.TOTAL_BORROW_USD]}\n\t\t\t\t\t\ttimeSelectorOptions={[TimeSelector.ALL]}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card height=\"auto\">\n\t\t\t\t\t<TimeSeriesChart\n\t\t\t\t\t\tchartConfig={chartConfig}\n\t\t\t\t\t\tlineInfoList={[{ key: \"value\", color: theme.color.lineChartColors[1] }]}\n\t\t\t\t\t\tdataType={DataType.PROTOCOL}\n\t\t\t\t\t\tdataSelectorOptions={[ProtocolDataSelector.TOTAL_RESERVES_USD]}\n\t\t\t\t\t\ttimeSelectorOptions={[TimeSelector.ALL]}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ResponsiveRow>\n\t\t\t<ResponsiveRow gap={gap}>\n\t\t\t\t{/* <StatCard\n\t\t\t\t\ttitle={\"Total unique suppliers\"}\n\t\t\t\t\ttooltipContent=\"Number of non-duplicate suppliers between all markets, this is also the total number of unique users since each borrower must be a supplier.\"\n\t\t\t\t\tvalue={protocolSummaryData.numberOfUniqueSuppliers}\n\t\t\t\t/> */}\n\t\t\t\t<StatCard\n\t\t\t\t\ttitle={\"Total Supplied\"}\n\t\t\t\t\ttooltipContent=\"Sum total of all supplied assets to the protocol in USD\"\n\t\t\t\t\tvalue={protocolSummaryData ? protocolSummaryData.totalSupplyUsd : 0.0}\n\t\t\t\t\tunit=\"$\"\n\t\t\t\t\tloading={protocolSummaryDataLoading}\n\t\t\t\t/>\n\t\t\t\t<StatCard\n\t\t\t\t\ttitle={\"Total Borrowed\"}\n\t\t\t\t\ttooltipContent=\"Sum total of all borrowed assets to the protocol in USD\"\n\t\t\t\t\tvalue={protocolSummaryData ? protocolSummaryData.totalBorrowUsd : 0.0}\n\t\t\t\t\tunit=\"$\"\n\t\t\t\t\tloading={protocolSummaryDataLoading}\n\t\t\t\t/>\n\t\t\t\t<ProgressCard\n\t\t\t\t\ttitle={\"Utilization\"}\n\t\t\t\t\ttooltipContent=\"How much of the total supply is in use at a given time. If there's $100 in the pool and no one borrows anything, the utilization rate is 0%. If someone borrows $10, it's 10%, and so on. If an asset is 100% utilized, there's nothing in the pool right now - suppliers can't withdraw their original cash, and borrowers can't take out loans.\"\n\t\t\t\t\tvalue={protocolSummaryData ? protocolSummaryData.utilization : 0.0}\n\t\t\t\t\tunit=\"%\"\n\t\t\t\t\tsize={60}\n\t\t\t\t\tloading={protocolSummaryDataLoading}\n\t\t\t\t/>\n\t\t\t</ResponsiveRow>\n\t\t\t<ResponsiveRow xs={true}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Typography.displayS>All Markets</Typography.displayS>\n\t\t\t\t</Row>\n\t\t\t\t<ResponsiveJustifyRow justifyLarge=\"flex-end\" justifySmall=\"flex-end\" justifyExtraSmall=\"flex-start\">\n\t\t\t\t\t<TooltipText\n\t\t\t\t\t\tbaseText={<Typography.body color={theme.color.text2}>Include COMP</Typography.body>}\n\t\t\t\t\t\ttooltipContent=\"Toggle to include the COMP token distribution in the APY's. Note that a negative borrow rate means that the Compound protocol pays you.\"\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleButton active={includeComp} onClick={() => setIncludeComp(!includeComp)} />\n\t\t\t\t</ResponsiveJustifyRow>\n\t\t\t</ResponsiveRow>\n\t\t\t<TableCard>\n\t\t\t\t<TokenTable data={marketSummaryData} dataSelectors={tokenTableDataSelectors} />\n\t\t\t</TableCard>\n\t\t</>\n\t);\n}\n","// @ts-nocheck\nimport React, { useEffect, useState } from \"react\";\nimport Market from \"pages/Market\";\nimport styled from \"styled-components\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nimport GoogleAnalyticsReporter from \"components/analytics/GoogleAnalyticsReporter\";\nimport Header from \"components/Header\";\nimport Footer from \"components/Footer\";\nimport Overview from \"pages/Overview\";\nimport Loader from \"components/Loader\";\nimport { useDataStatus, usePrefetchData } from \"data/hooks\";\n\nconst loadingScreenTimeMs = 1000; // ms to hold in loading screen on app load\n\nconst HeaderWrapper = styled.div`\n\tposition: fixed;\n\twidth: 100%;\n\tz-index: 2;\n\ttop: 0;\n`;\n\nconst FooterWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\t> * {\n\t\tmax-width: 1200px;\n\t}\n`;\n\nconst StyledBody = styled.div<{\n\tdataError: boolean;\n}>`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\tpadding: 40px;\n\tpadding-top: ${({ dataError }) => (dataError ? \"150px\" : \"100px\")};\n\tcolumn-gap: ${({ theme }) => theme.spacing.md};\n\trow-gap: ${({ theme }) => theme.spacing.md};\n\n\t> * {\n\t\tmax-width: 1200px;\n\t}\n\n\t${({ theme, dataError }) => theme.mediaWidth.small`\n\t\tpadding-left: 15px;\n\t\tpadding-right: 15px;\n\t\tpadding-top: ${dataError ? \"180px\" : \"80px\"};\n\t\tcolumn-gap: ${theme.spacing.xs};\n\t\trow-gap: ${theme.spacing.xs};\n\t`}\n`;\n\nexport default function App(): JSX.Element {\n\tconst [loading, setLoading] = useState<boolean>(true);\n\n\t// Triggers data fetching on the first call during the loading state\n\tusePrefetchData();\n\tconst { dataError, lastSyncedDate } = useDataStatus();\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => setLoading(false), loadingScreenTimeMs);\n\t}, []);\n\n\tsmoothscroll.polyfill();\n\n\treturn (\n\t\t<>\n\t\t\t{loading ? (\n\t\t\t\t<Loader size=\"200px\" />\n\t\t\t) : (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Route component={GoogleAnalyticsReporter} />\n\t\t\t\t\t<HeaderWrapper>\n\t\t\t\t\t\t<Header dataError={dataError} lastSyncedDate={lastSyncedDate} />\n\t\t\t\t\t</HeaderWrapper>\n\t\t\t\t\t<StyledBody dataError={dataError}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact strict path=\"/\" component={Overview} />\n\t\t\t\t\t\t\t<Route exact strict path=\"/:token\" component={Market} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</StyledBody>\n\t\t\t\t\t<FooterWrapper>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</FooterWrapper>\n\t\t\t\t</HashRouter>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport App from \"App\";\nimport Theme, { GlobalStyle } from \"theme\";\nimport GlobalStoreProvider from \"data/store\";\nimport ReactGA from \"react-ga\";\nimport { withRouter } from \"react-router-dom\";\n\n// Google Analytics\nconst trackingId = \"UA-199555486-1\";\n\nReactGA.initialize(trackingId);\nReactGA.set({\n\tcustomBrowserType: !isMobile ? \"desktop\" : \"web3\" in window || \"ethereum\" in window ? \"mobileWeb3\" : \"mobileRegular\",\n});\n\nwindow.addEventListener(\"error\", (error) => {\n\tReactGA.exception({\n\t\tdescription: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n\t\tfatal: true,\n\t});\n});\n\n// Render app\nReactDOM.render(\n\t<StrictMode>\n\t\t<GlobalStoreProvider>\n\t\t\t<Theme darkMode={true}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<App />\n\t\t\t</Theme>\n\t\t</GlobalStoreProvider>\n\t</StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}